{"id": "6367676d1a6d9265ec018229", "code": "public static String[] trimArrayElements(String[] array){\n  if (Objects.isEmpty(array)) {\n    return new String[0];\n  }\n  String[] result=new String[array.length];\n  for (int i=0; i < array.length; i++) {\n    String element=array[i];\n    result[i]=(element != null ? element.trim() : null);\n  }\n  return result;\n}\n"}
{"id": "6367670b1a6d9265ec017a00", "code": "public static boolean isSameLength(final byte[] array1,final byte[] array2){\n  if (array1 == null && array2 != null && array2.length > 0 || array2 == null && array1 != null && array1.length > 0 || array1 != null && array2 != null && array1.length != array2.length) {\n    return false;\n  }\n  return true;\n}\n"}
{"id": "636766a91a6d9265ec0175c2", "code": "private int pop(){\n  if (outputStackTop > 0) {\n    return outputStack[--outputStackTop];\n  }\n else {\n    return STACK_KIND | -(--outputStackStart);\n  }\n}\n"}
{"id": "636767081a6d9265ec017989", "code": "public static boolean[] toPrimitive(final Boolean[] array){\n  if (array == null) {\n    return null;\n  }\n else   if (array.length == 0) {\n    return ArrayUtils.EMPTY_BOOLEAN_ARRAY;\n  }\n  final boolean[] result=new boolean[array.length];\n  for (int i=0; i < array.length; i++) {\n    result[i]=array[i].booleanValue();\n  }\n  return result;\n}\n"}
{"id": "6367672d1a6d9265ec017c73", "code": "public boolean shouldPrintMessage(int timestamp,String message){\n  if (messages.containsKey(message)) {\n    if (timestamp - messages.get(message) >= 10) {\n      messages.put(message,timestamp);\n      return true;\n    }\n else {\n      return false;\n    }\n  }\n else {\n    messages.put(message,timestamp);\n    return true;\n  }\n}\n"}
{"id": "636766f81a6d9265ec01775c", "code": "public static String toString(Object obj){\n  return obj == null ? \"\" : obj.toString();\n}\n"}
{"id": "6367667f1a6d9265ec017457", "code": "private static int decodeOctets(int i,ByteBuffer bb,StringBuilder sb){\n  if (bb.limit() == 1 && (bb.get(0) & 0xFF) < 0x80) {\n    sb.append((char)bb.get(0));\n    return i + 2;\n  }\n else {\n    CharBuffer cb=UTF_8_CHARSET.decode(bb);\n    sb.append(cb);\n    return i + bb.limit() * 3 - 1;\n  }\n}\n"}
{"id": "636766aa1a6d9265ec0175ce", "code": "int visitFrameStart(final int offset,final int numLocal,final int numStack){\n  int frameLength=3 + numLocal + numStack;\n  if (currentFrame == null || currentFrame.length < frameLength) {\n    currentFrame=new int[frameLength];\n  }\n  currentFrame[0]=offset;\n  currentFrame[1]=numLocal;\n  currentFrame[2]=numStack;\n  return 3;\n}\n"}
{"id": "636767191a6d9265ec017c0f", "code": "private void enlarge(final int size){\n  int doubleCapacity=2 * data.length;\n  int minimalCapacity=length + size;\n  byte[] newData=new byte[doubleCapacity > minimalCapacity ? doubleCapacity : minimalCapacity];\n  System.arraycopy(data,0,newData,0,length);\n  data=newData;\n}\n"}
{"id": "636767821a6d9265ec0183a0", "code": "protected static void deleteFile(String fileName){\n  File file=new File(fileName);\n  if (file.exists()) {\n    file.delete();\n  }\n}\n"}
{"id": "636767691a6d9265ec0181aa", "code": "public static int nullSafeHashCode(long[] array){\n  if (array == null) {\n    return 0;\n  }\n  int hash=INITIAL_HASH;\n  int arraySize=array.length;\n  for (int i=0; i < arraySize; i++) {\n    hash=MULTIPLIER * hash + hashCode(array[i]);\n  }\n  return hash;\n}\n"}
{"id": "636767441a6d9265ec017cc1", "code": "private TreeNode<T> rotateRight(TreeNode<T> node){\n  TreeNode<T> left=node.left;\n  left.parent=null;\n  node.setLeftChild(left.right);\n  left.setRightChild(node);\n  node.updateHeightAndSubtreeSize();\n  left.updateHeightAndSubtreeSize();\n  return left;\n}\n"}
{"id": "6367667f1a6d9265ec01745c", "code": "@SuppressWarnings(\"unchecked\") public static void addToClassPath(Vector<URL> cpV,String dir){\n  try {\n    String cpComp[]=getFilesByExt(dir,\".jar\");\n    if (cpComp != null) {\n      int jarCount=cpComp.length;\n      for (int i=0; i < jarCount; i++) {\n        URL url=getURL(dir,cpComp[i]);\n        if (url != null)         cpV.addElement(url);\n      }\n    }\n  }\n catch (  Exception ex) {\n    logger.debug(\"failed to add urls to classpath\",ex);\n  }\n}\n"}
{"id": "6367677e1a6d9265ec01830f", "code": "public String format(LoggingEvent event){\n  if (sbuf.capacity() > MAX_CAPACITY) {\n    sbuf=new StringBuffer(BUF_SIZE);\n  }\n else {\n    sbuf.setLength(0);\n  }\n  PatternConverter c=head;\n  while (c != null) {\n    c.format(sbuf,event);\n    c=c.next;\n  }\n  return sbuf.toString();\n}\n"}
{"id": "636767031a6d9265ec0178dd", "code": "public long contentLength(){\n  long size;\n  try {\n    size=Long.parseLong(request.getHeader(FileUpload.CONTENT_LENGTH));\n  }\n catch (  NumberFormatException e) {\n    size=request.getContentLength();\n  }\n  return size;\n}\n"}
{"id": "636766f11a6d9265ec017658", "code": "public static int indexOfLastSeparator(String filename){\n  if (filename == null) {\n    return -1;\n  }\n  int lastUnixPos=filename.lastIndexOf(UNIX_SEPARATOR);\n  int lastWindowsPos=filename.lastIndexOf(WINDOWS_SEPARATOR);\n  return Math.max(lastUnixPos,lastWindowsPos);\n}\n"}
{"id": "636767121a6d9265ec017b0a", "code": "private int parseEndOfLine(String headerPart,int end){\n  int index=end;\n  for (; ; ) {\n    int offset=headerPart.indexOf('\\r',index);\n    if (offset == -1 || offset + 1 >= headerPart.length()) {\n      throw new IllegalStateException(\"Expected headers to be terminated by an empty line.\");\n    }\n    if (headerPart.charAt(offset + 1) == '\\n') {\n      return offset;\n    }\n    index=offset + 1;\n  }\n}\n"}
{"id": "636766f61a6d9265ec017701", "code": "public static int lastIndexOf(String str,String searchStr){\n  if (StringUtils.isEmpty(str)) {\n    return StringUtils.INDEX_NOT_FOUND;\n  }\n  return str.lastIndexOf(searchStr);\n}\n"}
{"id": "6367670b1a6d9265ec0179fe", "code": "@Override public void write(byte b[]) throws IOException {\n  checkThreshold(b.length);\n  getStream().write(b);\n  written+=b.length;\n}\n"}
{"id": "636767df1a6d9265ec01873c", "code": "public String id(String entityId){\n  if (entityId == null) {\n    return String.valueOf(point);\n  }\n else {\n    return point + Const.ID_CONNECTOR + entityId;\n  }\n}\n"}
{"id": "636766f91a6d9265ec01777f", "code": "public static boolean toBoolean(Boolean bool){\n  if (bool == null) {\n    return false;\n  }\n  return bool.booleanValue() ? true : false;\n}\n"}
{"id": "6367675f1a6d9265ec0180d3", "code": "public static <V,E>IsomorphicGraphMapping<V,E> identity(Graph<V,E> graph){\n  Map<V,V> fMap=CollectionUtil.newHashMapWithExpectedSize(graph.vertexSet().size());\n  Map<V,V> bMap=CollectionUtil.newHashMapWithExpectedSize(graph.vertexSet().size());\n  for (  V v : graph.vertexSet()) {\n    fMap.put(v,v);\n    bMap.put(v,v);\n  }\n  return new IsomorphicGraphMapping<>(fMap,bMap,graph,graph);\n}\n"}
{"id": "636766fe1a6d9265ec017833", "code": "public static void forceDeleteOnExit(File file) throws IOException {\n  if (file.isDirectory()) {\n    deleteDirectoryOnExit(file);\n  }\n else {\n    file.deleteOnExit();\n  }\n}\n"}
{"id": "636767791a6d9265ec018257", "code": "public void addMessage(final LogRecord lr){\n  if (_isDisposed == true) {\n    return;\n  }\n  SwingUtilities.invokeLater(new Runnable(){\n    public void run(){\n      _categoryExplorerTree.getExplorerModel().addLogRecord(lr);\n      _table.getFilteredLogTableModel().addLogRecord(lr);\n      updateStatusLabel();\n    }\n  }\n);\n}\n"}
{"id": "636767641a6d9265ec01817d", "code": "@Override public void generateGraph(Graph<V,E> target,Map<String,V> resultMap){\n  for (int i=0; i < sizeA; i++) {\n    partitionA.add(target.addVertex());\n  }\n  for (int i=0; i < sizeB; i++) {\n    partitionB.add(target.addVertex());\n  }\n  for (  V u : partitionA) {\n    for (    V v : partitionB) {\n      target.addEdge(u,v);\n    }\n  }\n}\n"}
{"id": "636766ff1a6d9265ec017851", "code": "protected int findByte(byte value,int pos){\n  for (int i=pos; i < tail; i++) {\n    if (buffer[i] == value) {\n      return i;\n    }\n  }\n  return -1;\n}\n"}
{"id": "636767a41a6d9265ec018582", "code": "public static <T>int writeDelimitedTo(OutputStream out,T message,Schema<T> schema,LinkedBuffer buffer) throws IOException {\n  if (buffer.start != buffer.offset)   throw new IllegalArgumentException(\"Buffer previously used and had not been reset.\");\n  final ProtobufOutput output=new ProtobufOutput(buffer);\n  schema.writeTo(output,message);\n  final int size=output.getSize();\n  ProtobufOutput.writeRawVarInt32Bytes(out,size);\n  final int msgSize=LinkedBuffer.writeTo(out,buffer);\n  assert size == msgSize;\n  return size;\n}\n"}
{"id": "636767001a6d9265ec01787e", "code": "public String toString(){\n  if (this.getObject() == null) {\n    return this.getStyle().getNullText();\n  }\n  Class<?> clazz=this.getObject().getClass();\n  this.appendFieldsIn(clazz);\n  while (clazz.getSuperclass() != null && clazz != this.getUpToClass()) {\n    clazz=clazz.getSuperclass();\n    this.appendFieldsIn(clazz);\n  }\n  return super.toString();\n}\n"}
{"id": "636767781a6d9265ec01823d", "code": "protected void subAppend(LoggingEvent event){\n  try {\n    File tmp=File.createTempFile(prefix,suffix,dir);\n    Writer out=new BufferedWriter(new FileWriter(tmp));\n    out.write(event.message);\n    out.close();\n  }\n catch (  Exception e) {\n    errorHandler.error(\"Error during creation of temporary File!\",e,1);\n  }\n}\n"}
{"id": "636766ef1a6d9265ec01761a", "code": "int addType(final String value){\n  int hashCode=hash(Symbol.TYPE_TAG,value);\n  Entry entry=get(hashCode);\n  while (entry != null) {\n    if (entry.tag == Symbol.TYPE_TAG && entry.hashCode == hashCode && entry.value.equals(value)) {\n      return entry.index;\n    }\n    entry=entry.next;\n  }\n  return addTypeInternal(new Entry(typeCount,Symbol.TYPE_TAG,value,hashCode));\n}\n"}
{"id": "636766821a6d9265ec0174b6", "code": "public static Class<?>[] resolveArguments(Type genericType,Class<?> targetType){\n  Class<?>[] result=null;\n  if (genericType instanceof ParameterizedType) {\n    ParameterizedType paramType=(ParameterizedType)genericType;\n    Type[] arguments=paramType.getActualTypeArguments();\n    result=new Class[arguments.length];\n    for (int i=0; i < arguments.length; i++)     result[i]=resolveClass(arguments[i],targetType);\n  }\n else   if (genericType instanceof TypeVariable) {\n    result=new Class[1];\n    result[0]=resolveClass(genericType,targetType);\n  }\n  return result;\n}\n"}
{"id": "636767e11a6d9265ec018781", "code": "@Override public void accept(final METRICS data){\n  final String id=data.id();\n  final METRICS existed=buffer.get(id);\n  if (existed == null) {\n    buffer.put(id,data);\n  }\n else {\n    final boolean isAbandoned=!existed.combine(data);\n    if (isAbandoned) {\n      buffer.remove(id);\n    }\n  }\n}\n"}
{"id": "636767531a6d9265ec017efb", "code": "void insertBefore(Bucket bucket){\n  this.next=bucket;\n  if (bucket != null) {\n    this.prev=bucket.prev;\n    if (bucket.prev != null) {\n      bucket.prev.next=this;\n    }\n    bucket.prev=this;\n  }\n else {\n    this.prev=null;\n  }\n}\n"}
{"id": "636766f11a6d9265ec017641", "code": "@Override public int available() throws IOException {\n  return this.index < this.length ? this.length - this.index : this.length >= 0 && this.reader.ready() ? 1 : 0;\n}\n"}
{"id": "636767de1a6d9265ec018706", "code": "public Mappings diffStructure(String tableName,Mappings mappings){\n  if (!structures.containsKey(tableName)) {\n    return new Mappings();\n  }\n  Map<String,Object> properties=mappings.getProperties();\n  Map<String,Object> diffProperties=structures.get(tableName).diffFields(new Fields(mappings));\n  return Mappings.builder().type(ElasticSearchClient.TYPE).properties(diffProperties).build();\n}\n"}
{"id": "636767dd1a6d9265ec0186e5", "code": "public void addNewTarget(Channels channels,IConsumer consumer){\n  Group group=new Group(channels,consumer);\n  ArrayList<Group> newList=new ArrayList<Group>();\n  for (  Group target : consumeTargets) {\n    newList.add(target);\n  }\n  newList.add(group);\n  consumeTargets=newList;\n  size+=channels.size();\n}\n"}
{"id": "636767871a6d9265ec01846d", "code": "public static void createConfigurationDirectory(){\n  String home=System.getProperty(\"user.home\");\n  String sep=System.getProperty(\"file.separator\");\n  File f=new File(home + sep + \"lf5\");\n  if (!f.exists()) {\n    try {\n      f.mkdir();\n    }\n catch (    SecurityException e) {\n      e.printStackTrace();\n    }\n  }\n}\n"}
{"id": "636766f81a6d9265ec01775b", "code": "public long readLong(final int offset){\n  long l1=readInt(offset);\n  long l0=readInt(offset + 4) & 0xFFFFFFFFL;\n  return (l1 << 32) | l0;\n}\n"}
{"id": "636767a51a6d9265ec01859d", "code": "public boolean equals(final byte[] data,int offset,final int len){\n  final byte[] bytes=this.bytes;\n  if (len != bytes.length)   return false;\n  for (int i=0; i < len; ) {\n    if (bytes[i++] != data[offset++]) {\n      return false;\n    }\n  }\n  return true;\n}\n"}
{"id": "6367670b1a6d9265ec0179ff", "code": "public static Byte[] nullToEmpty(final Byte[] array){\n  if (array == null || array.length == 0) {\n    return ArrayUtils.EMPTY_BYTE_OBJECT_ARRAY;\n  }\n  return array;\n}\n"}
{"id": "6367677f1a6d9265ec018347", "code": "public synchronized void send(final String message){\n  Iterator ce=connections.iterator();\n  for (Iterator e=writers.iterator(); e.hasNext(); ) {\n    ce.next();\n    PrintWriter writer=(PrintWriter)e.next();\n    writer.print(message);\n    if (writer.checkError()) {\n      ce.remove();\n      e.remove();\n    }\n  }\n}\n"}
{"id": "6367670a1a6d9265ec0179e8", "code": "public static Boolean[] nullToEmpty(final Boolean[] array){\n  if (array == null || array.length == 0) {\n    return ArrayUtils.EMPTY_BOOLEAN_OBJECT_ARRAY;\n  }\n  return array;\n}\n"}
{"id": "6367677f1a6d9265ec01834b", "code": "public void put(LoggingEvent o){\n  if (numElements != maxSize) {\n    buf[next]=o;\n    if (++next == maxSize) {\n      next=0;\n    }\n    numElements++;\n  }\n}\n"}
{"id": "636767df1a6d9265ec018744", "code": "protected List<TimeRange> buildTimeRanges(long start,long end){\n  if (start >= end) {\n    return null;\n  }\n  end+=1;\n  final List<TimeRange> timeRanges=new ArrayList<>();\n  do {\n    long batchEnd=Math.min(start + FETCH_DATA_DURATION,end);\n    timeRanges.add(new TimeRange(start,batchEnd));\n    start=batchEnd;\n  }\n while (start < end);\n  return timeRanges;\n}\n"}
{"id": "636767031a6d9265ec0178e6", "code": "public static byte[] toPrimitive(final Byte[] array){\n  if (array == null) {\n    return null;\n  }\n else   if (array.length == 0) {\n    return ArrayUtils.EMPTY_BYTE_ARRAY;\n  }\n  final byte[] result=new byte[array.length];\n  for (int i=0; i < array.length; i++) {\n    result[i]=array[i].byteValue();\n  }\n  return result;\n}\n"}
{"id": "636767dc1a6d9265ec0186be", "code": "static long compressTimeBucket(long timeBucket,int dayStep){\n  if (dayStep > 1) {\n    DateTime time=TIME_BUCKET_FORMATTER.parseDateTime(\"\" + timeBucket);\n    int days=Days.daysBetween(DAY_ONE,time).getDays();\n    int groupBucketOffset=days % dayStep;\n    return Long.parseLong(time.minusDays(groupBucketOffset).toString(TIME_BUCKET_FORMATTER));\n  }\n else {\n    return timeBucket;\n  }\n}\n"}
{"id": "636767a41a6d9265ec01856c", "code": "public static int computeUTF8Size(final CharSequence str,final int index,final int len){\n  int size=len;\n  for (int i=index; i < len; i++) {\n    final char c=str.charAt(i);\n    if (c < 0x0080)     continue;\n    if (c < 0x0800)     size++;\n else     size+=2;\n  }\n  return size;\n}\n"}
{"id": "636766f01a6d9265ec017639", "code": "public static <T>List<T> asList(T[] a){\n  if (a == null)   return Collections.emptyList();\n  return Arrays.asList(a);\n}\n"}
{"id": "6367672d1a6d9265ec017c74", "code": "public boolean remove(int val){\n  if (map.containsKey(val)) {\n    map.remove(val);\n    values.remove(values.indexOf(val));\n    return true;\n  }\n  return false;\n}\n"}
{"id": "6367676b1a6d9265ec0181df", "code": "public static boolean startsWithIgnoreCase(String str,String prefix){\n  if (str == null || prefix == null) {\n    return false;\n  }\n  if (str.startsWith(prefix)) {\n    return true;\n  }\n  if (str.length() < prefix.length()) {\n    return false;\n  }\n  String lcStr=str.substring(0,prefix.length()).toLowerCase();\n  String lcPrefix=prefix.toLowerCase();\n  return lcStr.equals(lcPrefix);\n}\n"}
{"id": "6367674b1a6d9265ec017dc0", "code": "private Set<V> initVisibleVertices(){\n  Set<V> visibleVertex=new HashSet<>();\n  for (  E e : graph.edgeSet()) {\n    V s=graph.getEdgeSource(e);\n    V t=graph.getEdgeTarget(e);\n    if (!s.equals(t)) {\n      visibleVertex.add(s);\n      visibleVertex.add(t);\n    }\n  }\n  return visibleVertex;\n}\n"}
{"id": "636767001a6d9265ec017873", "code": "public static String reverse(final String str){\n  if (str == null) {\n    return null;\n  }\n  return new StringBuilder(str).reverse().toString();\n}\n"}
{"id": "636766ff1a6d9265ec01783b", "code": "public static String sub(String str,int start,int end){\n  return StringUtils.substring(str,start,end);\n}\n"}
{"id": "6367671a1a6d9265ec017c15", "code": "public ByteVector putByteArray(final byte[] byteArrayValue,final int byteOffset,final int byteLength){\n  if (length + byteLength > data.length) {\n    enlarge(byteLength);\n  }\n  if (byteArrayValue != null) {\n    System.arraycopy(byteArrayValue,byteOffset,data,length,byteLength);\n  }\n  length+=byteLength;\n  return this;\n}\n"}
{"id": "636766821a6d9265ec0174d2", "code": "public static AtmosphereRequest wrap(HttpServletRequest request){\n  if (AtmosphereRequestImpl.class.isAssignableFrom(request.getClass())) {\n    return (AtmosphereRequestImpl)request;\n  }\n  Builder b=new Builder();\n  Enumeration<String> e=request.getAttributeNames();\n  String s;\n  while (e.hasMoreElements()) {\n    s=e.nextElement();\n    b.localAttributes.put(s,attributeWithoutException(request,s));\n  }\n  return b.request(request).build();\n}\n"}
{"id": "636767ab1a6d9265ec01867b", "code": "public static LinkedBuffer writeUTF8(final CharSequence str,final WriteSession session,final LinkedBuffer lb){\n  final int len=str.length();\n  if (len == 0)   return lb;\n  return lb.offset + len > lb.buffer.length ? writeUTF8(str,0,len,lb.buffer,lb.offset,lb.buffer.length,session,lb) : writeUTF8(str,0,len,session,lb);\n}\n"}
{"id": "6367675c1a6d9265ec01805b", "code": "public void removeFromTreeEdgeList(){\n  for (int dir=0; dir < 2; dir++) {\n    if (prev[dir] != null) {\n      prev[dir].next[dir]=next[dir];\n    }\n else {\n      head[1 - dir].first[dir]=next[dir];\n    }\n    if (next[dir] != null) {\n      next[dir].prev[dir]=prev[dir];\n    }\n  }\n  head[0]=head[1]=null;\n}\n"}
{"id": "636767791a6d9265ec01826d", "code": "public static String findAndSubst(String key,Properties props){\n  String value=props.getProperty(key);\n  if (value == null)   return null;\n  try {\n    return substVars(value,props);\n  }\n catch (  IllegalArgumentException e) {\n    LogLog.error(\"Bad option value [\" + value + \"].\",e);\n    return value;\n  }\n}\n"}
{"id": "636767001a6d9265ec01787f", "code": "protected void appendDetail(StringBuffer buffer,String fieldName,int[] array){\n  buffer.append(arrayStart);\n  for (int i=0; i < array.length; i++) {\n    if (i > 0) {\n      buffer.append(arraySeparator);\n    }\n    appendDetail(buffer,fieldName,array[i]);\n  }\n  buffer.append(arrayEnd);\n}\n"}
{"id": "636766fe1a6d9265ec017834", "code": "public static String sessionId(){\n  HttpSession httpSession=servletSession();\n  if (httpSession == null) {\n    return null;\n  }\n  return httpSession.getId();\n}\n"}
{"id": "636766ff1a6d9265ec01784b", "code": "public static boolean isDigits(String str){\n  if ((str == null) || (str.length() == 0)) {\n    return false;\n  }\n  for (int i=0; i < str.length(); i++) {\n    if (!Character.isDigit(str.charAt(i))) {\n      return false;\n    }\n  }\n  return true;\n}\n"}
{"id": "636766fc1a6d9265ec0177da", "code": "private static boolean isParameterSeparator(final char c){\n  if (Character.isWhitespace(c)) {\n    return true;\n  }\n  for (  char separator : PARAMETER_SEPARATORS) {\n    if (c == separator) {\n      return true;\n    }\n  }\n  return false;\n}\n"}
{"id": "6367670c1a6d9265ec017a35", "code": "private static boolean endsWith(final String str,final String suffix,final boolean ignoreCase){\n  if (str == null || suffix == null) {\n    return str == null && suffix == null;\n  }\n  if (suffix.length() > str.length()) {\n    return false;\n  }\n  int strOffset=str.length() - suffix.length();\n  return str.regionMatches(ignoreCase,strOffset,suffix,0,suffix.length());\n}\n"}
{"id": "6367667f1a6d9265ec01745d", "code": "public static List<PathSegmentImpl> decodePath(URI u,boolean decode){\n  String rawPath=u.getRawPath();\n  if (rawPath != null && rawPath.length() > 0 && rawPath.charAt(0) == '/') {\n    rawPath=rawPath.substring(1);\n  }\n  return decodePath(rawPath,decode);\n}\n"}
{"id": "636766f11a6d9265ec017651", "code": "public static Character[] nullToEmpty(final Character[] array){\n  if (array == null || array.length == 0) {\n    return ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY;\n  }\n  return array;\n}\n"}
{"id": "636767821a6d9265ec0183ab", "code": "public boolean hasThrown(){\n  Throwable thrown=getThrown();\n  if (thrown == null) {\n    return false;\n  }\n  String thrownString=thrown.toString();\n  return thrownString != null && thrownString.trim().length() != 0;\n}\n"}
{"id": "636767831a6d9265ec0183c9", "code": "public static String peek(){\n  Stack stack=getCurrentStack();\n  if (stack != null && !stack.isEmpty())   return ((DiagnosticContext)stack.peek()).message;\n else   return \"\";\n}\n"}
{"id": "636767de1a6d9265ec01871c", "code": "public void valueAccumulation(String key,Long value){\n  Long element=data.get(key);\n  if (element == null) {\n    element=value;\n  }\n else {\n    element+=value;\n  }\n  data.put(key,element);\n}\n"}
{"id": "636766811a6d9265ec017496", "code": "public InputStream next() throws IOException {\n  if (stack.isEmpty()) {\n    current=null;\n    return null;\n  }\n else {\n    current=stack.removeLast();\n    return current;\n  }\n}\n"}
{"id": "6367677e1a6d9265ec01832e", "code": "public Logger exists(String name){\n  Object o=ht.get(new CategoryKey(name));\n  if (o instanceof Logger) {\n    return (Logger)o;\n  }\n else {\n    return null;\n  }\n}\n"}
{"id": "6367670a1a6d9265ec0179e7", "code": "public Converter lookup(final Class<?> clazz){\n  Converter conv=(Converter)this.converters.get(clazz);\n  if (conv != null) {\n    return conv;\n  }\n  for (  Object regType : this.converters.keySet()) {\n    if (((Class<?>)regType).isAssignableFrom(clazz)) {\n      return (Converter)this.converters.get(regType);\n    }\n  }\n  return null;\n}\n"}
{"id": "636767a41a6d9265ec018572", "code": "public long readRawVarint64() throws IOException {\n  int shift=0;\n  long result=0;\n  while (shift < 64) {\n    final byte b=readRawByte();\n    result|=(long)(b & 0x7F) << shift;\n    if ((b & 0x80) == 0) {\n      return result;\n    }\n    shift+=7;\n  }\n  throw ProtobufException.malformedVarint();\n}\n"}
{"id": "636767021a6d9265ec0178bb", "code": "public static Double[] nullToEmpty(final Double[] array){\n  if (array == null || array.length == 0) {\n    return ArrayUtils.EMPTY_DOUBLE_OBJECT_ARRAY;\n  }\n  return array;\n}\n"}
{"id": "636767021a6d9265ec0178b2", "code": "private void pop(final String descriptor){\n  char firstDescriptorChar=descriptor.charAt(0);\n  if (firstDescriptorChar == '(') {\n    pop((Type.getArgumentsAndReturnSizes(descriptor) >> 2) - 1);\n  }\n else   if (firstDescriptorChar == 'J' || firstDescriptorChar == 'D') {\n    pop(2);\n  }\n else {\n    pop(1);\n  }\n}\n"}
{"id": "636766f91a6d9265ec01776e", "code": "@Override public void write(final byte b[],final int off,final int len) throws IOException {\n  if (off < 0 || off > b.length || len < 0 || off + len > b.length || off + len < 0) {\n    throw new IndexOutOfBoundsException();\n  }\n else   if (len == 0) {\n    return;\n  }\n  if (this.count + len > this.buf.length) {\n    this.encodePendingBytes(false);\n  }\n  System.arraycopy(b,off,this.buf,this.count,len);\n  this.count+=len;\n}\n"}
{"id": "636767551a6d9265ec017f3f", "code": "public static final <V>void swap(V[] arr,int i,int j){\n  V tmp=arr[j];\n  arr[j]=arr[i];\n  arr[i]=tmp;\n}\n"}
{"id": "636766ae1a6d9265ec0175dc", "code": "public Boolean isPartialContentResponse(){\n  Integer limit=drc.getLimit() == null ? 0 : drc.getLimit();\n  Long count=drc.getCount() == null ? 0 : drc.getCount();\n  return !((limit + 1) >= count);\n}\n"}
{"id": "636766f01a6d9265ec01762e", "code": "public static boolean isEmpty(final double[] array){\n  return array == null || array.length == 0;\n}\n"}
{"id": "6367667e1a6d9265ec01743a", "code": "public long lastWriteTimeStampInMilliseconds(){\n  return lastWrite == -1 ? System.currentTimeMillis() : lastWrite;\n}\n"}
{"id": "636767601a6d9265ec0180fd", "code": "protected void addToIndex(V sourceVertex,V targetVertex,E e){\n  Pair<V,V> vertexPair=new Pair<>(sourceVertex,targetVertex);\n  Set<E> edgeSet=touchingVerticesToEdgeMap.get(vertexPair);\n  if (edgeSet != null)   edgeSet.add(e);\n else {\n    edgeSet=edgeSetFactory.createEdgeSet(sourceVertex);\n    edgeSet.add(e);\n    touchingVerticesToEdgeMap.put(vertexPair,edgeSet);\n  }\n}\n"}
{"id": "636766821a6d9265ec0174c9", "code": "private static File[] classPath(){\n  final String[] fileNames=System.getProperty(\"java.class.path\").split(File.pathSeparator);\n  final File[] files=new File[fileNames.length];\n  for (int i=0; i < files.length; ++i) {\n    files[i]=new File(fileNames[i]);\n  }\n  return files;\n}\n"}
{"id": "636767041a6d9265ec0178f8", "code": "private static String[] copyStrings(final String[] src){\n  String[] dst=new String[src.length];\n  for (int i=0; i < src.length; ++i) {\n    dst[i]=src[i].toLowerCase();\n  }\n  return dst;\n}\n"}
{"id": "636767521a6d9265ec017ecc", "code": "public static Pair<Box2D,Box2D> splitAlongXAxis(Box2D box){\n  double newWidth=box.getWidth() / 2d;\n  double height=box.getHeight();\n  return Pair.of(Box2D.of(box.getMinX(),box.getMinY(),newWidth,height),Box2D.of(box.getMinX() + newWidth,box.getMinY(),newWidth,height));\n}\n"}
{"id": "636766a91a6d9265ec0175c1", "code": "private void enlarge(final int size){\n  int doubleCapacity=2 * data.length;\n  int minimalCapacity=length + size;\n  byte[] newData=new byte[doubleCapacity > minimalCapacity ? doubleCapacity : minimalCapacity];\n  System.arraycopy(data,0,newData,0,length);\n  data=newData;\n}\n"}
{"id": "636767781a6d9265ec018238", "code": "public boolean isAttached(Appender appender){\n  if (appenderList == null || appender == null)   return false;\n  int size=appenderList.size();\n  Appender a;\n  for (int i=0; i < size; i++) {\n    a=(Appender)appenderList.elementAt(i);\n    if (a == appender)     return true;\n  }\n  return false;\n}\n"}
{"id": "6367674a1a6d9265ec017dab", "code": "@Override public int compare(Double o1,Double o2){\n  if (Math.abs(o1 - o2) < epsilon) {\n    return 0;\n  }\n else {\n    return Double.compare(o1,o2);\n  }\n}\n"}
{"id": "6367672d1a6d9265ec017c78", "code": "public boolean insert(int val){\n  if (!map.containsKey(val)) {\n    map.put(val,val);\n    values.add(val);\n    return true;\n  }\n else {\n    return false;\n  }\n}\n"}
{"id": "636767dc1a6d9265ec0186c6", "code": "private boolean containsAllFields(Fields fields){\n  if (this.properties.size() < fields.properties.size()) {\n    return false;\n  }\n  boolean isContains=fields.properties.entrySet().stream().allMatch(item -> Objects.equals(properties.get(item.getKey()),item.getValue()));\n  if (!isContains) {\n    return false;\n  }\n  return fields.source.getExcludes().containsAll(this.source.getExcludes());\n}\n"}
{"id": "636766821a6d9265ec0174bf", "code": "public static String capitalize(String name){\n  if (name == null || name.length() == 0) {\n    return name;\n  }\n  char chars[]=name.toCharArray();\n  chars[0]=Character.toUpperCase(chars[0]);\n  return new String(chars);\n}\n"}
{"id": "636767aa1a6d9265ec01865a", "code": "public static int writeTo(final DataOutput out,LinkedBuffer node) throws IOException {\n  int contentSize=0, len;\n  do {\n    if ((len=node.offset - node.start) > 0) {\n      out.write(node.buffer,node.start,len);\n      contentSize+=len;\n    }\n  }\n while ((node=node.next) != null);\n  return contentSize;\n}\n"}
{"id": "636766f21a6d9265ec017677", "code": "public static boolean isNotTrue(Boolean bool){\n  return !isTrue(bool);\n}\n"}
{"id": "6367674f1a6d9265ec017e74", "code": "public String toString(){\n  StringBuilder s=new StringBuilder();\n  for (int j=i; j < n; j++)   s.append(vs[j]).append(\" \");\n  return s.toString();\n}\n"}
{"id": "6367675c1a6d9265ec018058", "code": "@SuppressWarnings(\"unchecked\") public static Supplier<String> createStringSupplier(int start){\n  int[] container=new int[]{start};\n  return (Supplier<String> & Serializable)() -> String.valueOf(container[0]++);\n}\n"}
{"id": "6367677b1a6d9265ec0182bd", "code": "public String format(final LoggingEvent event){\n  StringBuffer buf=new StringBuffer();\n  for (PatternConverter c=head; c != null; c=c.next) {\n    c.format(buf,event);\n  }\n  return buf.toString();\n}\n"}
{"id": "636766ff1a6d9265ec017842", "code": "public static double[] toPrimitive(final Double[] array){\n  if (array == null) {\n    return null;\n  }\n else   if (array.length == 0) {\n    return ArrayUtils.EMPTY_DOUBLE_ARRAY;\n  }\n  final double[] result=new double[array.length];\n  for (int i=0; i < array.length; i++) {\n    result[i]=array[i].doubleValue();\n  }\n  return result;\n}\n"}
{"id": "636766fa1a6d9265ec0177a9", "code": "private void addInitializedType(final int abstractType){\n  if (initializations == null) {\n    initializations=new int[2];\n  }\n  int initializationsLength=initializations.length;\n  if (initializationCount >= initializationsLength) {\n    int[] newInitializations=new int[Math.max(initializationCount + 1,2 * initializationsLength)];\n    System.arraycopy(initializations,0,newInitializations,0,initializationsLength);\n    initializations=newInitializations;\n  }\n  initializations[initializationCount++]=abstractType;\n}\n"}
{"id": "6367670a1a6d9265ec0179dc", "code": "private void putAbstractTypes(final int start,final int end){\n  for (int i=start; i < end; ++i) {\n    Frame.putAbstractType(symbolTable,currentFrame[i],stackMapTableEntries);\n  }\n}\n"}
{"id": "636766801a6d9265ec017482", "code": "public void readFrom(final InputStream in) throws IOException {\n  pointer=0;\n  size=0;\n  int n;\n  do {\n    n=in.read(buffer,size,buffer.length - size);\n    if (n > 0) {\n      size+=n;\n    }\n    resizeIfNeeded();\n  }\n while (n >= 0);\n}\n"}
{"id": "6367670a1a6d9265ec0179d8", "code": "@Override public void write(final byte[] b) throws IOException {\n  if (this.encoding == null) {\n    this.writer.write(new String(b));\n  }\n else {\n    this.writer.write(new String(b,this.encoding));\n  }\n}\n"}
{"id": "636766a81a6d9265ec01757b", "code": "@SuppressWarnings(\"unchecked\") public String toString(JSONWriter.Feature... features){\n  try (JSONWriter writer=JSONWriter.of(features)){\n    if ((writer.context.features & NONE_DIRECT_FEATURES) == 0) {\n      writer.write(this);\n    }\n else {\n      writer.setRootObject(this);\n      if (arrayWriter == null) {\n        arrayWriter=writer.getObjectWriter(JSONArray.class,JSONArray.class);\n      }\n      arrayWriter.write(writer,this,null,null,0);\n    }\n    return writer.toString();\n  }\n }\n"}
{"id": "636767021a6d9265ec0178bf", "code": "@Override protected Object convertToType(final Class<?> type,final Object value) throws Exception {\n  String string=value.toString();\n  if (string.length() == 0) {\n    return BeanUtils.getDefaultValue(type);\n  }\n else {\n    return string.charAt(0);\n  }\n}\n"}
{"id": "6367670b1a6d9265ec017a0f", "code": "public static boolean containsAnyIgnoreCase(String str,List<String> searchStrArray){\n  if (StringUtils.isEmpty(str) || searchStrArray == null || searchStrArray.isEmpty()) {\n    return false;\n  }\n  for (  String item : searchStrArray) {\n    if (containsIgnoreCase(str,item)) {\n      return true;\n    }\n  }\n  return false;\n}\n"}
{"id": "636766a81a6d9265ec01758e", "code": "public static int nextPrime(int desiredCapacity){\n  if (desiredCapacity >= largestPrime) {\n    return largestPrime;\n  }\n  int i=Arrays.binarySearch(primeCapacities,desiredCapacity);\n  if (i < 0) {\n    i=-i - 1;\n  }\n  return primeCapacities[i];\n}\n"}
{"id": "6367670a1a6d9265ec0179cf", "code": "public static char toChar(final Character ch,final char defaultValue){\n  if (ch == null) {\n    return defaultValue;\n  }\n  return ch.charValue();\n}\n"}
{"id": "6367676b1a6d9265ec0181e2", "code": "public static Object findFirstMatch(Collection source,Collection candidates){\n  if (isEmpty(source) || isEmpty(candidates)) {\n    return null;\n  }\n  for (  Object candidate : candidates) {\n    if (source.contains(candidate)) {\n      return candidate;\n    }\n  }\n  return null;\n}\n"}
{"id": "6367676b1a6d9265ec0181ee", "code": "public static String trimTrailingWhitespace(String str){\n  if (!hasLength(str)) {\n    return str;\n  }\n  StringBuilder sb=new StringBuilder(str);\n  while (sb.length() > 0 && Character.isWhitespace(sb.charAt(sb.length() - 1))) {\n    sb.deleteCharAt(sb.length() - 1);\n  }\n  return sb.toString();\n}\n"}
{"id": "636767dc1a6d9265ec0186cb", "code": "public void init(){\n  File dist=new File(analyzeResultDist);\n  if (!dist.exists()) {\n    dist.mkdirs();\n    return;\n  }\n  if (dist.isFile()) {\n    throw new IllegalArgumentException(analyzeResultDist + \" must be a directory\");\n  }\n}\n"}
{"id": "636767a31a6d9265ec018552", "code": "@Override public String readString() throws IOException {\n  final int size=readRawVarint32();\n  if (size <= (bufferSize - bufferPos) && size > 0) {\n    final String result=STRING.deser(buffer,bufferPos,size);\n    bufferPos+=size;\n    return result;\n  }\n else {\n    return STRING.deser(readRawBytes(size));\n  }\n}\n"}
{"id": "636767a61a6d9265ec0185b7", "code": "private static int digitValue(final char c){\n  if ('0' <= c && c <= '9') {\n    return c - '0';\n  }\n else   if ('a' <= c && c <= 'z') {\n    return c - 'a' + 10;\n  }\n else {\n    return c - 'A' + 10;\n  }\n}\n"}
{"id": "636767e01a6d9265ec018755", "code": "private Map<String,Object> buildContent(JsonObject jsonObject){\n  Map<String,Object> content=new HashMap<>();\n  content.put(\"msg_type\",jsonObject.get(\"msg_type\").getAsString());\n  if (jsonObject.get(\"ats\") != null) {\n    String ats=jsonObject.get(\"ats\").getAsString();\n    String text=jsonObject.get(\"content\").getAsJsonObject().get(\"text\").getAsString();\n    List<String> collect=Arrays.stream(ats.split(\",\")).map(String::trim).collect(Collectors.toList());\n    for (    String userId : collect) {\n      text+=\"<at user_id=\\\"\" + userId + \"\\\"></at>\";\n    }\n    jsonObject.get(\"content\").getAsJsonObject().addProperty(\"text\",text);\n  }\n  content.put(\"content\",jsonObject.get(\"content\").getAsJsonObject());\n  return content;\n}\n"}
{"id": "6367667f1a6d9265ec017458", "code": "public AtmosphereFramework removeAtmosphereHandler(String mapping){\n  if (mapping.endsWith(\"/\")) {\n    mapping+=mappingRegex;\n  }\n  atmosphereHandlers.remove(mapping);\n  return this;\n}\n"}
{"id": "636767a21a6d9265ec018517", "code": "public final byte[] toByteArray(){\n  LinkedBuffer node=head;\n  int offset=0, len;\n  final byte[] buf=new byte[size];\n  do {\n    if ((len=node.offset - node.start) > 0) {\n      System.arraycopy(node.buffer,node.start,buf,offset,len);\n      offset+=len;\n    }\n  }\n while ((node=node.next) != null);\n  return buf;\n}\n"}
{"id": "6367667d1a6d9265ec017401", "code": "public static String unescapeJava(String str) throws Exception {\n  if (str == null) {\n    return null;\n  }\n  StringWriter writer=new StringWriter(str.length());\n  unescapeJava(writer,str);\n  return writer.toString();\n}\n"}
{"id": "636766f01a6d9265ec01763e", "code": "private static String javaCharset(String charset){\n  if (charset == null) {\n    return null;\n  }\n  String mappedCharset=MIME2JAVA.get(charset.toLowerCase(Locale.ENGLISH));\n  if (mappedCharset == null) {\n    return charset;\n  }\n  return mappedCharset;\n}\n"}
{"id": "6367676a1a6d9265ec0181bf", "code": "public static Object quoteIfString(Object obj){\n  return (obj instanceof String ? quote((String)obj) : obj);\n}\n"}
{"id": "636767501a6d9265ec017e86", "code": "@Override public ListNode<E> previousNode(){\n  checkForComodification();\n  if (!hasPrevious()) {\n    throw new NoSuchElementException();\n  }\n  last=next=next.prev;\n  nextIndex--;\n  return last;\n}\n"}
{"id": "636766f21a6d9265ec017667", "code": "public short readShort(final int offset){\n  byte[] classBuffer=classFileBuffer;\n  return (short)(((classBuffer[offset] & 0xFF) << 8) | (classBuffer[offset + 1] & 0xFF));\n}\n"}
{"id": "636767031a6d9265ec0178ef", "code": "private static Object copyArrayGrow1(final Object array,final Class<?> newArrayComponentType){\n  if (array != null) {\n    int arrayLength=Array.getLength(array);\n    Object newArray=Array.newInstance(array.getClass().getComponentType(),arrayLength + 1);\n    System.arraycopy(array,0,newArray,0,arrayLength);\n    return newArray;\n  }\n  return Array.newInstance(newArrayComponentType,1);\n}\n"}
{"id": "636767431a6d9265ec017c8d", "code": "private int computeBinaryLog(int n){\n  assert n >= 0;\n  int result=0;\n  while (n > 0) {\n    n>>=1;\n    ++result;\n  }\n  return result;\n}\n"}
{"id": "636767611a6d9265ec018116", "code": "private Set<V> intersection(Set<V> set1,Set<V> set2){\n  Set<V> a;\n  Set<V> b;\n  if (set1.size() <= set2.size()) {\n    a=set1;\n    b=set2;\n  }\n else {\n    a=set2;\n    b=set1;\n  }\n  return a.stream().filter(b::contains).collect(Collectors.toSet());\n}\n"}
{"id": "636766f71a6d9265ec017730", "code": "static String[] toNoNullStringArray(Collection<?> collection){\n  if (collection == null) {\n    return ArrayUtils.EMPTY_STRING_ARRAY;\n  }\n  return toNoNullStringArray(collection.toArray());\n}\n"}
{"id": "636767081a6d9265ec0179a2", "code": "private static boolean isAllZeros(String s){\n  if (s == null) {\n    return true;\n  }\n  for (int i=s.length() - 1; i >= 0; i--) {\n    if (s.charAt(i) != '0') {\n      return false;\n    }\n  }\n  return s.length() > 0;\n}\n"}
{"id": "636766821a6d9265ec0174b3", "code": "protected Object filter(Object msg){\n  BroadcastAction a=bc.filter(msg);\n  if (a.action() == BroadcastAction.ACTION.ABORT || msg == null)   return null;\n else   return a.message();\n}\n"}
{"id": "636767e01a6d9265ec018764", "code": "private JsonObject convertProperties(List<KeyStringValuePair> properties){\n  final JsonObject result=new JsonObject();\n  for (  KeyStringValuePair kv : properties) {\n    result.addProperty(kv.getKey(),kv.getValue());\n  }\n  return result;\n}\n"}
{"id": "6367677e1a6d9265ec018314", "code": "protected int removeUnusedNodes(){\n  int count=0;\n  CategoryNode root=_categoryModel.getRootCategoryNode();\n  Enumeration enumeration=root.depthFirstEnumeration();\n  while (enumeration.hasMoreElements()) {\n    CategoryNode node=(CategoryNode)enumeration.nextElement();\n    if (node.isLeaf() && node.getNumberOfContainedRecords() == 0 && node.getParent() != null) {\n      _categoryModel.removeNodeFromParent(node);\n      count++;\n    }\n  }\n  return count;\n}\n"}
{"id": "636766ff1a6d9265ec017853", "code": "protected Label readLabel(final int bytecodeOffset,final Label[] labels){\n  if (labels[bytecodeOffset] == null) {\n    labels[bytecodeOffset]=new Label();\n  }\n  return labels[bytecodeOffset];\n}\n"}
{"id": "6367677d1a6d9265ec0182fd", "code": "public static boolean toBoolean(String value,boolean dEfault){\n  if (value == null)   return dEfault;\n  String trimmedVal=value.trim();\n  if (\"true\".equalsIgnoreCase(trimmedVal))   return true;\n  if (\"false\".equalsIgnoreCase(trimmedVal))   return false;\n  return dEfault;\n}\n"}
{"id": "6367676a1a6d9265ec0181cd", "code": "public static String trimLeadingWhitespace(String str){\n  if (!hasLength(str)) {\n    return str;\n  }\n  StringBuilder sb=new StringBuilder(str);\n  while (sb.length() > 0 && Character.isWhitespace(sb.charAt(0))) {\n    sb.deleteCharAt(0);\n  }\n  return sb.toString();\n}\n"}
{"id": "636766fe1a6d9265ec01782a", "code": "final String readUtf(final int constantPoolEntryIndex,final char[] charBuffer){\n  String value=constantUtf8Values[constantPoolEntryIndex];\n  if (value != null) {\n    return value;\n  }\n  int cpInfoOffset=cpInfoOffsets[constantPoolEntryIndex];\n  return constantUtf8Values[constantPoolEntryIndex]=readUtf(cpInfoOffset + 2,readUnsignedShort(cpInfoOffset),charBuffer);\n}\n"}
{"id": "636766851a6d9265ec01751b", "code": "private static char decodeHexNibble(final char c){\n  if ('0' <= c && c <= '9') {\n    return (char)(c - '0');\n  }\n else   if ('a' <= c && c <= 'f') {\n    return (char)(c - 'a' + 10);\n  }\n else   if ('A' <= c && c <= 'F') {\n    return (char)(c - 'A' + 10);\n  }\n else {\n    return Character.MAX_VALUE;\n  }\n}\n"}
{"id": "636766f21a6d9265ec01767d", "code": "public static String toString(Object object){\n  return (object == null) ? null : object.toString();\n}\n"}
{"id": "636767581a6d9265ec017fc4", "code": "public static long factorial(int n){\n  long multi=1;\n  for (int i=1; i <= n; i++) {\n    multi=multi * i;\n  }\n  return multi;\n}\n"}
{"id": "636767511a6d9265ec017eb6", "code": "private OuterFaceCirculator selectOnOuterFace(Predicate<Node> predicate,Node start,Node stop,int dir){\n  OuterFaceCirculator circulator=start.iterator(dir);\n  Node current=circulator.next();\n  while (current != stop && !predicate.test(current)) {\n    current=circulator.next();\n  }\n  return circulator;\n}\n"}
{"id": "636767841a6d9265ec0183e8", "code": "public void add(LoggingEvent event){\n  ea[last]=event;\n  if (++last == maxSize)   last=0;\n  if (numElems < maxSize)   numElems++;\n else   if (++first == maxSize)   first=0;\n}\n"}
{"id": "636767a41a6d9265ec01857e", "code": "private static int compareSigned(long a,long b){\n  return (a < b) ? -1 : ((a > b) ? 1 : 0);\n}\n"}
{"id": "636767691a6d9265ec0181ae", "code": "public static String[] toStringArray(Enumeration<String> enumeration){\n  if (enumeration == null) {\n    return null;\n  }\n  List<String> list=java.util.Collections.list(enumeration);\n  return list.toArray(new String[list.size()]);\n}\n"}
{"id": "636766a91a6d9265ec0175ae", "code": "public ByteVector putByteArray(final byte[] byteArrayValue,final int byteOffset,final int byteLength){\n  if (length + byteLength > data.length) {\n    enlarge(byteLength);\n  }\n  if (byteArrayValue != null) {\n    System.arraycopy(byteArrayValue,byteOffset,data,length,byteLength);\n  }\n  length+=byteLength;\n  return this;\n}\n"}
{"id": "636766f11a6d9265ec01764f", "code": "public Collection<Object> values(){\n  ArrayList<Object> answer=new ArrayList<>(readMethods.size());\n  for (Iterator<Object> iter=valueIterator(); iter.hasNext(); ) {\n    answer.add(iter.next());\n  }\n  return Collections.unmodifiableList(answer);\n}\n"}
{"id": "636766f81a6d9265ec017758", "code": "@Override public int hashCode(){\n  int hashCode=13 * (sort == INTERNAL ? OBJECT : sort);\n  if (sort >= ARRAY) {\n    for (int i=valueBegin, end=valueEnd; i < end; i++) {\n      hashCode=17 * (hashCode + valueBuffer.charAt(i));\n    }\n  }\n  return hashCode;\n}\n"}
{"id": "6367676c1a6d9265ec01820b", "code": "public static String deleteAny(String inString,String charsToDelete){\n  if (!hasLength(inString) || !hasLength(charsToDelete)) {\n    return inString;\n  }\n  StringBuilder sb=new StringBuilder();\n  for (int i=0; i < inString.length(); i++) {\n    char c=inString.charAt(i);\n    if (charsToDelete.indexOf(c) == -1) {\n      sb.append(c);\n    }\n  }\n  return sb.toString();\n}\n"}
{"id": "636766861a6d9265ec01755a", "code": "public final MatchResult match(CharSequence uri){\n  if (uri == null || uri.length() == 0)   return (regexPattern == null) ? EMPTY_STRING_MATCH_RESULT : null;\n else   if (regexPattern == null)   return null;\n  Matcher m=regexPattern.matcher(uri);\n  if (!m.matches())   return null;\n  return (groupIndexes.length > 0) ? new GroupIndexMatchResult(m) : m;\n}\n"}
{"id": "636766f91a6d9265ec01777d", "code": "public static byte convertHexDigit(byte b){\n  if ((b >= '0') && (b <= '9'))   return (byte)(b - '0');\n  if ((b >= 'a') && (b <= 'f'))   return (byte)(b - 'a' + 10);\n  if ((b >= 'A') && (b <= 'F'))   return (byte)(b - 'A' + 10);\n  throw new IllegalArgumentException(\"!hex:\" + Integer.toHexString(0xff & b));\n}\n"}
{"id": "636766801a6d9265ec017477", "code": "private void addReverse(final InputStream[] files){\n  for (int i=files.length - 1; i >= 0; --i) {\n    stack.add(files[i]);\n  }\n}\n"}
{"id": "636767de1a6d9265ec01871e", "code": "private void check(String modelName) throws IllegalStateException {\n  for (int i=0; i < keys.size(); i++) {\n    final ModelColumn modelColumn=keys.get(i);\n    if (modelColumn == null) {\n      throw new IllegalStateException(\"Sharding key index=\" + i + \" is missing in \"+ modelName);\n    }\n  }\n}\n"}
{"id": "636766f81a6d9265ec01774b", "code": "public byte readByte() throws IOException {\n  if (head == tail) {\n    head=0;\n    tail=input.read(buffer,head,bufSize);\n    if (tail == -1) {\n      throw new IOException(\"No more data is available\");\n    }\n  }\n  return buffer[head++];\n}\n"}
{"id": "636766851a6d9265ec017515", "code": "@Override public Action inspect(AtmosphereResource r){\nswitch (r.transport()) {\ncase JSONP:\ncase AJAX:\ncase LONG_POLLING:\n    r.resumeOnBroadcast(true);\n  break;\ndefault :\nbreak;\n}\nreturn Action.CONTINUE;\n}\n"}
{"id": "636767611a6d9265ec018106", "code": "public double vertexWeight(Set<V> v){\n  double wsum=0.0;\n  for (  DefaultWeightedEdge e : workingGraph.edgesOf(v)) {\n    wsum+=workingGraph.getEdgeWeight(e);\n  }\n  return wsum;\n}\n"}
{"id": "636767841a6d9265ec0183f2", "code": "public int compare(Object aObj1,Object aObj2){\n  if ((aObj1 == null) && (aObj2 == null)) {\n    return 0;\n  }\n else   if (aObj1 == null) {\n    return -1;\n  }\n else   if (aObj2 == null) {\n    return 1;\n  }\n  final EventDetails le1=(EventDetails)aObj1;\n  final EventDetails le2=(EventDetails)aObj2;\n  if (le1.getTimeStamp() < le2.getTimeStamp()) {\n    return 1;\n  }\n  return -1;\n}\n"}
{"id": "636767861a6d9265ec01844c", "code": "public void removeAppender(String name){\n  if (name == null || appenderList == null)   return;\n  int size=appenderList.size();\n  for (int i=0; i < size; i++) {\n    if (name.equals(((Appender)appenderList.elementAt(i)).getName())) {\n      appenderList.removeElementAt(i);\n      break;\n    }\n  }\n}\n"}
{"id": "636767781a6d9265ec018242", "code": "public int appendLoopOnAppenders(LoggingEvent event){\n  int size=0;\n  Appender appender;\n  if (appenderList != null) {\n    size=appenderList.size();\n    for (int i=0; i < size; i++) {\n      appender=(Appender)appenderList.elementAt(i);\n      appender.doAppend(event);\n    }\n  }\n  return size;\n}\n"}
{"id": "6367670c1a6d9265ec017a2a", "code": "public static int[] toPrimitive(final Integer[] array){\n  if (array == null) {\n    return null;\n  }\n else   if (array.length == 0) {\n    return ArrayUtils.EMPTY_INT_ARRAY;\n  }\n  final int[] result=new int[array.length];\n  for (int i=0; i < array.length; i++) {\n    result[i]=array[i].intValue();\n  }\n  return result;\n}\n"}
{"id": "636767041a6d9265ec017911", "code": "static void register(Object value){\n  if (value != null) {\n    Map m=getRegistry();\n    if (m == null) {\n      m=new WeakHashMap();\n      REGISTRY.set(m);\n    }\n    m.put(value,null);\n  }\n}\n"}
{"id": "636767511a6d9265ec017eb0", "code": "public int nonZeros(int row){\n  assert row >= 0 && row < rowOffsets.length;\n  return rowOffsets[row + 1] - rowOffsets[row];\n}\n"}
{"id": "6367676c1a6d9265ec018223", "code": "public static boolean containsInstance(Collection collection,Object element){\n  if (collection != null) {\n    for (    Object candidate : collection) {\n      if (candidate == element) {\n        return true;\n      }\n    }\n  }\n  return false;\n}\n"}
{"id": "636766fa1a6d9265ec01779d", "code": "public static boolean isAsciiControl(final char ch){\n  return ch < 32 || ch == 127;\n}\n"}
{"id": "6367670b1a6d9265ec0179f2", "code": "@Override public boolean containsKey(final Object key){\n  if (this.fast) {\n    return this.map.containsKey(key);\n  }\n else {\nsynchronized (this.map) {\n      return this.map.containsKey(key);\n    }\n  }\n}\n"}
{"id": "636766fa1a6d9265ec017796", "code": "public static Boolean[] toObject(final boolean[] array){\n  if (array == null) {\n    return null;\n  }\n else   if (array.length == 0) {\n    return ArrayUtils.EMPTY_BOOLEAN_OBJECT_ARRAY;\n  }\n  final Boolean[] result=new Boolean[array.length];\n  for (int i=0; i < array.length; i++) {\n    result[i]=array[i] ? Boolean.TRUE : Boolean.FALSE;\n  }\n  return result;\n}\n"}
{"id": "636767aa1a6d9265ec01864a", "code": "public byte[] toByteArray(){\n  final int size=bytes.length;\n  final byte[] copy=new byte[size];\n  System.arraycopy(bytes,0,copy,0,size);\n  return copy;\n}\n"}
{"id": "636767561a6d9265ec017f7c", "code": "protected GraphPath<V,E> edgeSetToTour(Set<E> tour,Graph<V,E> graph){\n  List<V> vertices=new ArrayList<>(tour.size() + 1);\n  MaskSubgraph<V,E> tourGraph=new MaskSubgraph<>(graph,v -> false,e -> !tour.contains(e));\n  new DepthFirstIterator<>(tourGraph).forEachRemaining(vertices::add);\n  return vertexListToTour(vertices,graph);\n}\n"}
{"id": "6367670a1a6d9265ec0179f1", "code": "public static Short[] toObject(final short[] array){\n  if (array == null) {\n    return null;\n  }\n else   if (array.length == 0) {\n    return ArrayUtils.EMPTY_SHORT_OBJECT_ARRAY;\n  }\n  final Short[] result=new Short[array.length];\n  for (int i=0; i < array.length; i++) {\n    result[i]=new Short(array[i]);\n  }\n  return result;\n}\n"}
{"id": "636766fe1a6d9265ec017823", "code": "int addConstantNameAndType(final String name,final String descriptor){\n  final int tag=Symbol.CONSTANT_NAME_AND_TYPE_TAG;\n  int hashCode=hash(tag,name,descriptor);\n  Entry entry=get(hashCode);\n  while (entry != null) {\n    if (entry.tag == tag && entry.hashCode == hashCode && entry.name.equals(name) && entry.value.equals(descriptor)) {\n      return entry.index;\n    }\n    entry=entry.next;\n  }\n  constantPool.put122(tag,addConstantUtf8(name),addConstantUtf8(descriptor));\n  return put(new Entry(constantPoolCount++,tag,name,descriptor,hashCode)).index;\n}\n"}
{"id": "636767461a6d9265ec017d17", "code": "private String unescapeId(String input){\n  final char quote='\"';\n  if (input.charAt(0) != quote || input.charAt(input.length() - 1) != quote) {\n    return input;\n  }\n  String noQuotes=input.subSequence(1,input.length() - 1).toString();\n  String unescaped=unescapeId.translate(noQuotes);\n  return unescaped;\n}\n"}
{"id": "6367676c1a6d9265ec018204", "code": "public static String[] concatenateStringArrays(String[] array1,String[] array2){\n  if (Objects.isEmpty(array1)) {\n    return array2;\n  }\n  if (Objects.isEmpty(array2)) {\n    return array1;\n  }\n  String[] newArr=new String[array1.length + array2.length];\n  System.arraycopy(array1,0,newArr,0,array1.length);\n  System.arraycopy(array2,0,newArr,array1.length,array2.length);\n  return newArr;\n}\n"}
{"id": "636767641a6d9265ec018190", "code": "private void reload(List<Set<Integer>> bucketsByLabel,List<Integer> labels,int minLabel){\n  if (minLabel != 0 && minLabel < bucketsByLabel.size()) {\n    Set<Integer> bucket=bucketsByLabel.get(minLabel);\n    for (    Integer vertex : bucket) {\n      labels.set(vertex,0);\n      bucketsByLabel.get(0).add(vertex);\n    }\n    bucket.clear();\n  }\n}\n"}
{"id": "6367676a1a6d9265ec0181d4", "code": "public static String[] addStringToArray(String[] array,String str){\n  if (Objects.isEmpty(array)) {\n    return new String[]{str};\n  }\n  String[] newArr=new String[array.length + 1];\n  System.arraycopy(array,0,newArr,0,array.length);\n  newArr[array.length]=str;\n  return newArr;\n}\n"}
{"id": "6367676b1a6d9265ec0181dd", "code": "public static int countOccurrencesOf(String str,String sub){\n  if (str == null || sub == null || str.length() == 0 || sub.length() == 0) {\n    return 0;\n  }\n  int count=0;\n  int pos=0;\n  int idx;\n  while ((idx=str.indexOf(sub,pos)) != -1) {\n    ++count;\n    pos=idx + sub.length();\n  }\n  return count;\n}\n"}
{"id": "636766811a6d9265ec017499", "code": "private boolean checkDuplicate(final List<AtmosphereInterceptor> interceptorList,Class<? extends AtmosphereInterceptor> c){\n  for (  final AtmosphereInterceptor i : interceptorList) {\n    if (i.getClass().equals(c)) {\n      return true;\n    }\n  }\n  return false;\n}\n"}
{"id": "636766fe1a6d9265ec017821", "code": "protected void appendDetail(StringBuffer buffer,String fieldName,byte[] array){\n  buffer.append(arrayStart);\n  for (int i=0; i < array.length; i++) {\n    if (i > 0) {\n      buffer.append(arraySeparator);\n    }\n    appendDetail(buffer,fieldName,array[i]);\n  }\n  buffer.append(arrayEnd);\n}\n"}
{"id": "636767561a6d9265ec017f63", "code": "@Override public boolean hasNext(){\n  if (current != null) {\n    return true;\n  }\n  current=advance();\n  if (current != null && nListeners != 0) {\n    fireVertexTraversed(createVertexTraversalEvent(current));\n  }\n  return current != null;\n}\n"}
{"id": "636766a81a6d9265ec017586", "code": "private void pop(final int elements){\n  if (outputStackTop >= elements) {\n    outputStackTop-=elements;\n  }\n else {\n    outputStackStart-=elements - outputStackTop;\n    outputStackTop=0;\n  }\n}\n"}
{"id": "636767e11a6d9265ec018795", "code": "public boolean isCompatible(DataTable dataset){\n  final List<String> sortedKeys=dataset.sortedKeys(new HeatMap.KeyComparator(true));\n  long[] existedBuckets=new long[sortedKeys.size()];\n  for (int i=0; i < sortedKeys.size(); i++) {\n    String key=sortedKeys.get(i);\n    if (key.equals(Bucket.INFINITE_NEGATIVE)) {\n      existedBuckets[i]=Long.MIN_VALUE;\n    }\n else {\n      if (key.contains(\":\")) {\n        key=StringUtils.substringAfterLast(key,\":\");\n      }\n      existedBuckets[i]=Long.parseLong(key);\n    }\n  }\n  return Arrays.equals(buckets,existedBuckets);\n}\n"}
{"id": "636767791a6d9265ec018263", "code": "private Class findClass(final String className) throws ClassNotFoundException {\n  try {\n    return Thread.currentThread().getContextClassLoader().loadClass(className);\n  }\n catch (  ClassNotFoundException e) {\n    try {\n      return Class.forName(className);\n    }\n catch (    ClassNotFoundException e1) {\n      return getClass().getClassLoader().loadClass(className);\n    }\n  }\n}\n"}
{"id": "636767611a6d9265ec018112", "code": "@Override protected V provideNextVertex(){\n  V v=super.provideNextVertex();\n  for (int i=path.size() - 1; i >= 0; --i) {\n    if (graph.containsEdge(path.get(i),v)) {\n      break;\n    }\n    path.remove(i);\n  }\n  path.add(v);\n  return v;\n}\n"}
{"id": "636767131a6d9265ec017b23", "code": "final void addLineNumber(final int lineNumber){\n  if (this.lineNumber == 0) {\n    this.lineNumber=(short)lineNumber;\n  }\n else {\n    if (otherLineNumbers == null) {\n      otherLineNumbers=new int[LINE_NUMBERS_CAPACITY_INCREMENT];\n    }\n    int otherLineNumberIndex=++otherLineNumbers[0];\n    if (otherLineNumberIndex >= otherLineNumbers.length) {\n      int[] newLineNumbers=new int[otherLineNumbers.length + LINE_NUMBERS_CAPACITY_INCREMENT];\n      System.arraycopy(otherLineNumbers,0,newLineNumbers,0,otherLineNumbers.length);\n      otherLineNumbers=newLineNumbers;\n    }\n    otherLineNumbers[otherLineNumberIndex]=lineNumber;\n  }\n}\n"}
{"id": "6367675a1a6d9265ec018010", "code": "void removeSelf(){\n  if (next != null) {\n    next.prev=prev;\n  }\n  if (prev != null) {\n    prev.next=next;\n  }\n}\n"}
{"id": "636767dd1a6d9265ec0186f3", "code": "public void overrideName(String oldName,String newName){\n  for (int i=0; i < columns.length; i++) {\n    if (columns[i].equals(oldName)) {\n      columns[i]=newName;\n    }\n  }\n}\n"}
{"id": "636767631a6d9265ec018171", "code": "private boolean unlink(ListNodeImpl<E> node){\n  ListNodeImpl<E> prev=node.prev;\n  ListNodeImpl<E> next=node.next;\n  if (removeListNode(node)) {\n    if (size == 0) {\n      head=null;\n    }\n else {\n      link(prev,next);\n      if (head == node) {\n        head=next;\n      }\n    }\n    return true;\n  }\n  return false;\n}\n"}
{"id": "636767de1a6d9265ec018726", "code": "public List<SequenceRange> buildSequenceRanges(){\n  ArrayList<SequenceRange> ranges=new ArrayList<>();\n  do {\n    int batchMax=Math.min(minSequence + SEQUENCE_RANGE_BATCH_SIZE,maxSequence);\n    ranges.add(new SequenceRange(minSequence,batchMax));\n    minSequence=batchMax;\n  }\n while (minSequence < maxSequence);\n  return ranges;\n}\n"}
{"id": "6367667c1a6d9265ec0173f7", "code": "public boolean hasBytes(){\n  return dataBytes != null;\n}\n"}
{"id": "6367676c1a6d9265ec018220", "code": "public static String stripFilenameExtension(String path){\n  if (path == null) {\n    return null;\n  }\n  int extIndex=path.lastIndexOf(EXTENSION_SEPARATOR);\n  if (extIndex == -1) {\n    return path;\n  }\n  int folderIndex=path.lastIndexOf(FOLDER_SEPARATOR);\n  if (folderIndex > extIndex) {\n    return path;\n  }\n  return path.substring(0,extIndex);\n}\n"}
{"id": "636766fe1a6d9265ec017838", "code": "public static char[] toPrimitive(final Character[] array){\n  if (array == null) {\n    return null;\n  }\n else   if (array.length == 0) {\n    return ArrayUtils.EMPTY_CHAR_ARRAY;\n  }\n  final char[] result=new char[array.length];\n  for (int i=0; i < array.length; i++) {\n    result[i]=array[i].charValue();\n  }\n  return result;\n}\n"}
{"id": "636766fa1a6d9265ec01779c", "code": "private String parseToken(final char[] terminators){\n  char ch;\n  i1=pos;\n  i2=pos;\n  while (hasChar()) {\n    ch=chars[pos];\n    if (isOneOf(ch,terminators)) {\n      break;\n    }\n    i2++;\n    pos++;\n  }\n  return getToken(false);\n}\n"}
{"id": "636767691a6d9265ec0181a7", "code": "public static String trimLeadingCharacter(String str,char leadingCharacter){\n  if (!hasLength(str)) {\n    return str;\n  }\n  StringBuilder sb=new StringBuilder(str);\n  while (sb.length() > 0 && sb.charAt(0) == leadingCharacter) {\n    sb.deleteCharAt(0);\n  }\n  return sb.toString();\n}\n"}
{"id": "636767041a6d9265ec01790f", "code": "public static Integer[] toObject(final int[] array){\n  if (array == null) {\n    return null;\n  }\n else   if (array.length == 0) {\n    return ArrayUtils.EMPTY_INTEGER_OBJECT_ARRAY;\n  }\n  final Integer[] result=new Integer[array.length];\n  for (int i=0; i < array.length; i++) {\n    result[i]=new Integer(array[i]);\n  }\n  return result;\n}\n"}
{"id": "636766fa1a6d9265ec0177a4", "code": "public static Double[] toObject(final double[] array){\n  if (array == null) {\n    return null;\n  }\n else   if (array.length == 0) {\n    return ArrayUtils.EMPTY_DOUBLE_OBJECT_ARRAY;\n  }\n  final Double[] result=new Double[array.length];\n  for (int i=0; i < array.length; i++) {\n    result[i]=new Double(array[i]);\n  }\n  return result;\n}\n"}
{"id": "636767461a6d9265ec017d0e", "code": "private Pair<List<Integer>,Long> computeSuffixSum(List<Integer> bounds){\n  List<Integer> suffixSum=new ArrayList<>(Collections.nCopies(bounds.size(),0));\n  long sum=0;\n  for (int i=bounds.size() - 1; i >= 0; i--) {\n    suffixSum.set(i,(int)Math.min(Integer.MAX_VALUE,sum));\n    sum+=bounds.get(i);\n  }\n  return Pair.of(suffixSum,sum);\n}\n"}
{"id": "636767491a6d9265ec017d90", "code": "public static final <V>void reverse(V[] arr,int from,int to){\n  for (int i=from, j=to; i < j; ++i, --j) {\n    swap(arr,i,j);\n  }\n}\n"}
{"id": "6367674a1a6d9265ec017da9", "code": "private void moveAllListNodes(DoublyLinkedList<E> list){\n  for (ListNodeIteratorImpl it=list.new ListNodeIteratorImpl(0); it.hasNext(); ) {\n    ListNodeImpl<E> node=it.nextNode();\n    assert node.list == list;\n    node.list=this;\n  }\n  size+=list.size;\n  list.size=0;\n  modCount++;\n  list.modCount++;\n}\n"}
{"id": "636767151a6d9265ec017b6b", "code": "private static boolean startsWith(final String str,final String prefix,final boolean ignoreCase){\n  if (str == null || prefix == null) {\n    return str == null && prefix == null;\n  }\n  if (prefix.length() > str.length()) {\n    return false;\n  }\n  return str.regionMatches(ignoreCase,0,prefix,0,prefix.length());\n}\n"}
{"id": "636766fe1a6d9265ec01781c", "code": "public static Character toCharacterObject(final char ch){\n  if (ch < CharUtils.CHAR_ARRAY.length) {\n    return CharUtils.CHAR_ARRAY[ch];\n  }\n  return new Character(ch);\n}\n"}
{"id": "636766fb1a6d9265ec0177c1", "code": "public static boolean isAsciiAlphaUpper(final char ch){\n  return ch >= 'A' && ch <= 'Z';\n}\n"}
{"id": "636767781a6d9265ec018250", "code": "public int decide(LoggingEvent event){\n  String msg=event.getRenderedMessage();\n  if (msg == null || stringToMatch == null)   return Filter.NEUTRAL;\n  if (msg.indexOf(stringToMatch) == -1) {\n    return Filter.NEUTRAL;\n  }\n else {\n    if (acceptOnMatch) {\n      return Filter.ACCEPT;\n    }\n else {\n      return Filter.DENY;\n    }\n  }\n}\n"}
{"id": "636766861a6d9265ec017553", "code": "public final boolean isTemplateVariablePresent(String name){\n  for (  String s : templateVariables) {\n    if (s.equals(name))     return true;\n  }\n  return false;\n}\n"}
{"id": "636767071a6d9265ec017962", "code": "public void putAllWriteable(BeanMap map){\n  Iterator<String> readableKeys=map.readMethods.keySet().iterator();\n  while (readableKeys.hasNext()) {\n    String key=readableKeys.next();\n    if (getWriteMethod(key) != null) {\n      this.put(key,map.get(key));\n    }\n  }\n}\n"}
{"id": "6367670a1a6d9265ec0179d9", "code": "public static int length(final String str){\n  return str == null ? 0 : str.length();\n}\n"}
{"id": "636767ab1a6d9265ec018676", "code": "private static boolean isHex(final char c){\n  return ('0' <= c && c <= '9') || ('a' <= c && c <= 'f') || ('A' <= c && c <= 'F');\n}\n"}
{"id": "636766f81a6d9265ec017748", "code": "public static String base64Decode(final String s){\n  byte[] b=Base64.base64DecodeToArray(s);\n  if (b == null) {\n    return null;\n  }\n  if (b.length == 0) {\n    return \"\";\n  }\n  return new String(b,StandardCharsets.UTF_8);\n}\n"}
{"id": "636766f11a6d9265ec017663", "code": "public static boolean isSameLength(final double[] array1,final double[] array2){\n  if (array1 == null && array2 != null && array2.length > 0 || array2 == null && array1 != null && array1.length > 0 || array1 != null && array2 != null && array1.length != array2.length) {\n    return false;\n  }\n  return true;\n}\n"}
{"id": "6367667d1a6d9265ec0173ff", "code": "public static Meteor lookup(HttpServletRequest r){\n  Object o=r.getAttribute(METEOR);\n  return o == null ? null : Meteor.class.isAssignableFrom(o.getClass()) ? (Meteor)o : null;\n}\n"}
{"id": "636767691a6d9265ec0181a6", "code": "public static String[] split(String toSplit,String delimiter){\n  if (!hasLength(toSplit) || !hasLength(delimiter)) {\n    return null;\n  }\n  int offset=toSplit.indexOf(delimiter);\n  if (offset < 0) {\n    return null;\n  }\n  String beforeDelimiter=toSplit.substring(0,offset);\n  String afterDelimiter=toSplit.substring(offset + delimiter.length());\n  return new String[]{beforeDelimiter,afterDelimiter};\n}\n"}
{"id": "636767601a6d9265ec0180e2", "code": "private List<Pair<List<Pair<Integer,Integer>>,E>> computeGlobalSeparatorList(){\n  List<Pair<List<Pair<Integer,Integer>>,E>> globalSeparatorList=new ArrayList<>();\n  for (  E edge : graph.edgeSet()) {\n    V source=graph.getEdgeSource(edge);\n    V target=graph.getEdgeTarget(edge);\n    if (source != target) {\n      List<Set<V>> edgeSeparators=findSeparators(graph,edge);\n      globalSeparatorList.addAll(reformatSeparatorList(edgeSeparators,edge));\n    }\n  }\n  return globalSeparatorList;\n}\n"}
{"id": "636766f31a6d9265ec01768f", "code": "public static char[] clone(final char[] array){\n  if (array == null) {\n    return null;\n  }\n  return array.clone();\n}\n"}
{"id": "636766831a6d9265ec0174eb", "code": "private void addReverse(final File[] files){\n  if (files == null)   return;\n  for (int i=files.length - 1; i >= 0; --i) {\n    stack.add(files[i]);\n  }\n}\n"}
{"id": "636767841a6d9265ec0183ff", "code": "public static void selectRow(int row,JTable table,JScrollPane pane){\n  if (table == null || pane == null) {\n    return;\n  }\n  if (contains(row,table.getModel()) == false) {\n    return;\n  }\n  moveAdjustable(row * table.getRowHeight(),pane.getVerticalScrollBar());\n  selectRow(row,table.getSelectionModel());\n  repaintLater(table);\n}\n"}
{"id": "636766a81a6d9265ec017596", "code": "public ByteVector putInt(final int intValue){\n  int currentLength=length;\n  if (currentLength + 4 > data.length) {\n    enlarge(4);\n  }\n  byte[] currentData=data;\n  currentData[currentLength++]=(byte)(intValue >>> 24);\n  currentData[currentLength++]=(byte)(intValue >>> 16);\n  currentData[currentLength++]=(byte)(intValue >>> 8);\n  currentData[currentLength++]=(byte)intValue;\n  length=currentLength;\n  return this;\n}\n"}
{"id": "636766fd1a6d9265ec017814", "code": "public static boolean arrayequals(byte[] a,byte[] b,int count){\n  for (int i=0; i < count; i++) {\n    if (a[i] != b[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n"}
{"id": "636767861a6d9265ec018440", "code": "public void abbreviate(final int nameStart,final StringBuffer buf){\n  int i=count;\n  for (int pos=buf.indexOf(\".\",nameStart); pos != -1; pos=buf.indexOf(\".\",pos + 1)) {\n    if (--i == 0) {\n      buf.delete(nameStart,pos + 1);\n      break;\n    }\n  }\n}\n"}
{"id": "6367667d1a6d9265ec01741d", "code": "public static Type resolveBound(TypeVariable<?> typeVariable){\n  Type[] bounds=typeVariable.getBounds();\n  if (bounds.length == 0)   return Unknown.class;\n  Type bound=bounds[0];\n  if (bound instanceof TypeVariable)   bound=resolveBound((TypeVariable<?>)bound);\n  return bound == Object.class ? Unknown.class : bound;\n}\n"}
{"id": "6367675f1a6d9265ec0180cf", "code": "private static <V,E>boolean isClique(Graph<V,E> graph,Set<V> vertices){\n  for (  V v1 : vertices) {\n    for (    V v2 : vertices) {\n      if (!v1.equals(v2) && (graph.getEdge(v1,v2) == null)) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n"}
{"id": "636767431a6d9265ec017c88", "code": "private List<Integer> computeLowerBounds(List<K> keys){\n  List<Integer> keyLowerBounds=new ArrayList<>(keys.size());\n  for (  K key : keys) {\n    int lowerBound=0;\n    for (    Function<K,Integer> lowerBoundFunction : lowerBounds) {\n      lowerBound=Math.max(lowerBound,lowerBoundFunction.apply(key));\n    }\n    keyLowerBounds.add(lowerBound);\n  }\n  return keyLowerBounds;\n}\n"}
{"id": "636766a91a6d9265ec0175c4", "code": "private void pop(final String descriptor){\n  char firstDescriptorChar=descriptor.charAt(0);\n  if (firstDescriptorChar == '(') {\n    pop((Type.getArgumentsAndReturnSizes(descriptor) >> 2) - 1);\n  }\n else   if (firstDescriptorChar == 'J' || firstDescriptorChar == 'D') {\n    pop(2);\n  }\n else {\n    pop(1);\n  }\n}\n"}
{"id": "636766fb1a6d9265ec0177c3", "code": "public static boolean isAscii(final char ch){\n  return ch < 128;\n}\n"}
{"id": "636767581a6d9265ec017fb4", "code": "private List<Integer> computeUpperBounds(List<K> keys){\n  List<Integer> keyUpperBounds=new ArrayList<>(keys.size());\n  for (  K key : keys) {\n    int upperBound=Integer.MAX_VALUE;\n    for (    Function<K,Integer> upperBoundFunction : upperBounds) {\n      upperBound=Math.min(upperBound,upperBoundFunction.apply(key));\n    }\n    keyUpperBounds.add(upperBound);\n  }\n  return keyUpperBounds;\n}\n"}
{"id": "636766801a6d9265ec017487", "code": "public static String encodeTemplateNames(String s){\n  int i=s.indexOf('{');\n  if (i != -1)   s=s.replace(\"{\",\"%7B\");\n  i=s.indexOf('}');\n  if (i != -1)   s=s.replace(\"}\",\"%7D\");\n  return s;\n}\n"}
{"id": "636767531a6d9265ec017ef1", "code": "public static boolean equals(Point2D p1,Point2D p2){\n  int xEquals=TOLERANCE_DOUBLE_COMPARATOR.compare(p1.getX(),p2.getX());\n  if (xEquals != 0) {\n    return false;\n  }\n  return TOLERANCE_DOUBLE_COMPARATOR.compare(p1.getY(),p2.getY()) == 0;\n}\n"}
{"id": "6367667c1a6d9265ec0173fb", "code": "@Override public AtmosphereResource addEventListener(AtmosphereResourceEventListener e){\n  if (listeners.contains(e))   return this;\n  listeners.add(e);\n  return this;\n}\n"}
{"id": "636767691a6d9265ec0181ac", "code": "public static String applyRelativePath(String path,String relativePath){\n  int separatorIndex=path.lastIndexOf(FOLDER_SEPARATOR);\n  if (separatorIndex != -1) {\n    String newPath=path.substring(0,separatorIndex);\n    if (!relativePath.startsWith(FOLDER_SEPARATOR)) {\n      newPath+=FOLDER_SEPARATOR;\n    }\n    return newPath + relativePath;\n  }\n else {\n    return relativePath;\n  }\n}\n"}
{"id": "636767021a6d9265ec0178bc", "code": "public static int indexOf(String str,String searchStr){\n  if (str == null || searchStr == null) {\n    return StringUtils.INDEX_NOT_FOUND;\n  }\n  return str.indexOf(searchStr);\n}\n"}
{"id": "636766fc1a6d9265ec0177ef", "code": "static String[] toNoNullStringArray(Object[] array){\n  ArrayList<String> list=new ArrayList<String>(array.length);\n  for (int i=0; i < array.length; i++) {\n    Object e=array[i];\n    if (e != null) {\n      list.add(e.toString());\n    }\n  }\n  return (String[])list.toArray(ArrayUtils.EMPTY_STRING_ARRAY);\n}\n"}
{"id": "636767061a6d9265ec01794a", "code": "public static int indexOfExtension(String filename){\n  if (filename == null) {\n    return -1;\n  }\n  int extensionPos=filename.lastIndexOf(EXTENSION_SEPARATOR);\n  int lastSeparator=indexOfLastSeparator(filename);\n  return lastSeparator > extensionPos ? -1 : extensionPos;\n}\n"}
{"id": "636767dd1a6d9265ec0186de", "code": "public boolean isExpired(long timestamp,long expiredThreshold){\n  return timestamp - lastUpdateTimestamp > expiredThreshold;\n}\n"}
{"id": "6367675d1a6d9265ec018082", "code": "Edge edgeToNext(){\n  Edge edge=prev.embedded.getFirst();\n  Node target=toExistingNode(current);\n  Node source=toExistingNode(prev);\n  if (edge.getOpposite(source) == target) {\n    return edge;\n  }\n else {\n    return prev.embedded.getLast();\n  }\n}\n"}
{"id": "6367676b1a6d9265ec0181e9", "code": "public static boolean substringMatch(CharSequence str,int index,CharSequence substring){\n  for (int j=0; j < substring.length(); j++) {\n    int i=index + j;\n    if (i >= str.length() || str.charAt(i) != substring.charAt(j)) {\n      return false;\n    }\n  }\n  return true;\n}\n"}
{"id": "636767781a6d9265ec01823e", "code": "protected void append(LoggingEvent event){\n  if (sh != null) {\n    sh.send(layout.format(event));\n    if (layout.ignoresThrowable()) {\n      String[] s=event.getThrowableStrRep();\n      if (s != null) {\n        StringBuffer buf=new StringBuffer();\n        for (int i=0; i < s.length; i++) {\n          buf.append(s[i]);\n          buf.append(\"\\r\\n\");\n        }\n        sh.send(buf.toString());\n      }\n    }\n  }\n}\n"}
{"id": "6367670b1a6d9265ec017a05", "code": "public static String toString(final char ch){\n  if (ch < 128) {\n    return CharUtils.CHAR_STRING_ARRAY[ch];\n  }\n  return new String(new char[]{ch});\n}\n"}
{"id": "636767a31a6d9265ec01854f", "code": "private void checkIfPackedField() throws IOException {\n  if (packedLimit == 0 && WireFormat.getTagWireType(lastTag) == WIRETYPE_LENGTH_DELIMITED) {\n    final int length=readRawVarint32();\n    if (length < 0)     throw ProtobufException.negativeSize();\n    this.packedLimit=getTotalBytesRead() + length;\n  }\n}\n"}
{"id": "636767a81a6d9265ec0185fc", "code": "public int readTag() throws IOException {\n  if (!buffer.hasRemaining()) {\n    lastTag=0;\n    return 0;\n  }\n  final int tag=readRawVarint32();\n  if (tag >>> TAG_TYPE_BITS == 0) {\n    throw ProtobufException.invalidTag();\n  }\n  lastTag=tag;\n  return tag;\n}\n"}
{"id": "636766a81a6d9265ec017595", "code": "final ByteVector put11(final int byteValue1,final int byteValue2){\n  int currentLength=length;\n  if (currentLength + 2 > data.length) {\n    enlarge(2);\n  }\n  byte[] currentData=data;\n  currentData[currentLength++]=(byte)byteValue1;\n  currentData[currentLength++]=(byte)byteValue2;\n  length=currentLength;\n  return this;\n}\n"}
{"id": "636766ae1a6d9265ec0175d8", "code": "private String buildContentRange(){\n  Integer limit=drc.getLimit() == null ? getDefaultNumberPagination() - 1 : drc.getLimit();\n  Integer offset=drc.getOffset() == null ? 0 : drc.getOffset();\n  Long count=drc.getCount() == null ? 0 : drc.getCount();\n  return offset + \"-\" + (limit.equals(0) ? count - 1 : limit)+ \"/\"+ count;\n}\n"}
{"id": "636767e11a6d9265ec018790", "code": "public static List<ThreadSnapshot> parseFromFileWithTimeRange(File file,List<ProfileAnalyzeTimeRange> timeRanges) throws IOException {\n  try (final FileInputStream fileInputStream=new FileInputStream(file)){\n    ThreadSnapshot snapshot;\n    final ArrayList<ThreadSnapshot> data=new ArrayList<>();\n    while ((snapshot=ThreadSnapshot.parseDelimitedFrom(fileInputStream)) != null) {\n      ThreadSnapshot finalSnapshot=snapshot;\n      if (timeRanges.stream().filter(t -> finalSnapshot.getTime() >= t.getStart() && finalSnapshot.getTime() <= t.getEnd()).findFirst().isPresent()) {\n        data.add(snapshot);\n      }\n    }\n    return data;\n  }\n }\n"}
