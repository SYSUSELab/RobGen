{"_id": "6367676d1a6d9265ec018229", "generate_results": ["public static String[] trimArrayElements(String[] array){\n    if(array == null || array.length == 0) {\n        return array;\n    }\n    String[] trimmedArray = new String[array.length];\n    for(int i = 0; i < array.length; i++) {\n        trimmedArray[i] = array[i].trim();\n    }\n    return trimmedArray;\n}"]}
{"_id": "6367670b1a6d9265ec017a00", "generate_results": ["public static boolean isSameLength(final byte[] array1,final byte[] array2){\n    return array1.length == array2.length;\n}"]}
{"_id": "636766a91a6d9265ec0175c2", "generate_results": ["private int pop(){\n    if(outputStack.length == 0){\n        throw new RuntimeException(\"Attempt to pop from empty output stack\");\n    }\n    int result = outputStack[outputStack.length - 1];\n    outputStack = Arrays.copyOfRange(outputStack, 0, outputStack.length - 1);\n    return result;\n}"]}
{"_id": "636767081a6d9265ec017989", "generate_results": ["public static boolean[] toPrimitive(final Boolean[] array){\n    if(array == null) return null;\n    if(array.length == 0) return EMPTY_BOOLEAN_ARRAY;\n    final boolean[] result = new boolean[array.length];\n    for(int i=0;i<result.length;i++){\n        result[i] = array[i].booleanValue();\n    }\n    return result;\n}"]}
{"_id": "6367672d1a6d9265ec017c73", "generate_results": ["public boolean shouldPrintMessage(int timestamp,String message){\n    if(messages.containsKey(message)){\n        if(timestamp-messages.get(message)<10)\n            return false;\n    }\n    messages.put(message,timestamp);\n    return true;\n}"]}
{"_id": "636766f81a6d9265ec01775c", "generate_results": ["public static String toString(Object obj){\n    if(obj==null) return \"\";\n    return obj.toString();\n}"]}
{"_id": "6367667f1a6d9265ec017457", "generate_results": ["private static int decodeOctets(int i,ByteBuffer bb,StringBuilder sb){\n    // Your implementation here\n}"]}
{"_id": "636766aa1a6d9265ec0175ce", "generate_results": ["int visitFrameStart(final int offset,final int numLocal,final int numStack){\n    //1. Create a new Frame object\n    Frame frame = new Frame(offset, numLocal, numStack);\n\n    //2. Add the frame to the current frame array\n    currentFrame = Arrays.copyOf(currentFrame, currentFrame.length + 1);\n    currentFrame[currentFrame.length - 1] = frame;\n\n    //3. Return 3\n    return 3;\n}"]}
{"_id": "636767191a6d9265ec017c0f", "generate_results": ["private void enlarge(final int size){\n    if(size <= 0) return;\n\n    final int newCapacity = capacity + size;\n    if(newCapacity > MAX_CAPACITY) throw new IllegalArgumentException(\"Byte vector is too large\");\n\n    final byte[] newData = new byte[newCapacity];\n    System.arraycopy(data, 0, newData, 0, capacity);\n    data = newData;\n}"]}
{"_id": "636767821a6d9265ec0183a0", "generate_results": ["protected static void deleteFile(String fileName){\n    File f = new File(fileName);\n    if(f.exists()){\n        f.delete();\n    }\n}"]}
{"_id": "636767691a6d9265ec0181aa", "generate_results": ["public static int nullSafeHashCode(long[] array){\n    if(array == null) return 0;\n    int result = INITIAL_HASH;\n    for (long value : array) {\n        result = MULTIPLIER * result + Objects.hashCode(value);\n    }\n    return result;\n}"]}
{"_id": "636767441a6d9265ec017cc1", "generate_results": ["private TreeNode<T> rotateRight(TreeNode<T> node){\n    if(node == null) return null;\n\n    TreeNode<T> temp = node.left;\n    node.left = temp.right;\n    temp.right = node;\n\n    updateHeightAndSubtreeSize(node);\n    updateHeightAndSubtreeSize(temp);\n\n    return temp;\n}"]}
{"_id": "6367667f1a6d9265ec01745c", "generate_results": ["@SuppressWarnings(\"unchecked\") public static void addToClassPath(Vector<URL> cpV,String dir){\n    File f = new File(dir);\n    if(f.exists() && f.isDirectory()){\n        String[] files = f.list(new FilenameFilter(){\n            @Override\n            public boolean accept(File dir, String name) {\n                return name.endsWith(\".jar\");\n            }\n        });\n        for(String file : files){\n            try{\n                URL url = new URL(\"file:\" + dir + \"/\" + file);\n                cpV.add(url);\n            }catch(MalformedURLException e){\n                e.printStackTrace();\n            }\n        }\n    }\n}"]}
{"_id": "6367677e1a6d9265ec01830f", "generate_results": ["public String format(LoggingEvent event){\n    if (event == null) {\n        throw new IllegalArgumentException(\"event is null\");\n    }\n    if (sbuf == null) {\n        sbuf = new StringBuffer(BUF_SIZE);\n    }\n    if (pattern == null) {\n        pattern = getConversionPattern();\n    }\n    if (head == null) {\n        head = createPatternParser(pattern).getHead();\n    }\n    head.format(sbuf, event);\n    return sbuf.toString();\n}"]}
{"_id": "636767031a6d9265ec0178dd", "generate_results": ["public long contentLength(){\n    try{\n        return Long.parseLong(getHeader(\"Content-Length\"));\n    }catch(NumberFormatException e){\n        return 0L;\n    }\n}"]}
{"_id": "636766f11a6d9265ec017658", "generate_results": ["public static int indexOfLastSeparator(String filename){\n    if(filename==null) return -1;\n    int len=filename.length();\n    if(len==0) return -1;\n    char ch=filename.charAt(len-1);\n    if(ch=='/') return len-1;\n    if(ch=='\\\\') return len-2;\n    return -1;\n}"]}
{"_id": "636767121a6d9265ec017b0a", "generate_results": ["private int parseEndOfLine(String headerPart,int end){\n    if(headerPart == null || headerPart.length() == 0) {\n        throw new IllegalArgumentException(\"headerPart is empty\");\n    }\n    if(end < 0 || end >= headerPart.length()) {\n        throw new IllegalArgumentException(\"end is out of range\");\n    }\n    int i = end - 1;\n    while(i >= 0 && headerPart.charAt(i) != '\\n') {\n        i--;\n    }\n    if(i < 0) {\n        throw new IllegalArgumentException(\"no newline found in header part\");\n    }\n    return i + 1;\n}"]}
{"_id": "636766f61a6d9265ec017701", "generate_results": ["public static int lastIndexOf(String str,String searchStr){\n    if(StringUtils.isEmpty(str)){\n        return INDEX_NOT_FOUND;\n    }\n    return str.lastIndexOf(searchStr);\n}"]}
{"_id": "6367670b1a6d9265ec0179fe", "generate_results": ["@Override public void write(byte b[]) throws IOException {\n    if (b == null) throw new NullPointerException(\"b\");\n    if (written >= threshold) {\n        thresholdExceeded = true;\n        return;\n    }\n    out.write(b, 0, b.length);\n    written += b.length;\n}"]}
{"_id": "636767df1a6d9265ec01873c", "generate_results": ["public String id(String entityId){\n    return Const.ID_CONNECTOR + point + entityId;\n}"]}
{"_id": "636766f91a6d9265ec01777f", "generate_results": ["public static boolean toBoolean(Boolean bool){\n    if(bool == null) return false;\n    return bool.booleanValue();\n}"]}
{"_id": "6367675f1a6d9265ec0180d3", "generate_results": ["public static <V,E>IsomorphicGraphMapping<V,E> identity(Graph<V,E> graph){\nreturn new IsomorphicGraphMapping<>(graph,graph,null,null);\n}"]}
{"_id": "636766fe1a6d9265ec017833", "generate_results": ["public static void forceDeleteOnExit(File file) throws IOException {\n    if (file.isDirectory()) {\n        deleteDirectoryOnExit(file);\n    }\n    file.deleteOnExit();\n}"]}
{"_id": "636767791a6d9265ec018257", "generate_results": ["public void addMessage(final LogRecord lr){\n    if(_lock == null) return;\n    SwingUtilities.invokeLater(new Runnable(){\n        public void run(){\n            synchronized(_lock){\n                if(_table != null && !_table.isDisposed()){\n                    _table.addMessage(lr);\n                }\n            }\n        }\n    });\n}"]}
{"_id": "636767641a6d9265ec01817d", "generate_results": ["@Override public void generateGraph(Graph<V,E> target,Map<String,V> resultMap){\n    Set<V> vertices = new HashSet<>();\n    for(V v : partitionA) {\n        vertices.add(v);\n    }\n    for(V v : partitionB) {\n        vertices.add(v);\n    }\n    target.addAll(vertices);\n\n    int sizeA = partitionA.size();\n    int sizeB = partitionB.size();\n\n    // Create edges between vertices in partition A and partition B\n    for (V vertexA : partitionA) {\n        for (V vertexB : partitionB) {\n            if (!vertexA.equals(vertexB)) {\n                E edge = target.addEdge(vertexA, vertexB);\n                resultMap.put(edge.toString(), vertexA + \" -> \" + vertexB);\n            }\n        }\n    }\n\n    // Optionally, you can add more edges or customize the graph structure as needed\n}"]}
{"_id": "636766ff1a6d9265ec017851", "generate_results": ["protected int findByte(byte value,int pos){\n    if(pos >= bufSize) return -1;\n    for(int i = pos; i < bufSize; i++){\n        if(buffer[i] == value) return i;\n    }\n    return -1;\n}"]}
{"_id": "636767a41a6d9265ec018582", "generate_results": ["public static <T>int writeDelimitedTo(OutputStream out,T message,Schema<T> schema,LinkedBuffer buffer) throws IOException {\n    if (buffer == null) {\n        buffer = new LinkedBuffer();\n    }\n    int size = schema.writeDelimited(out, message, buffer);\n    buffer.reset();\n    return size;\n}"]}
{"_id": "636767001a6d9265ec01787e", "generate_results": ["public String toString(){\n    return sb.toString();\n}"]}
{"_id": "636767781a6d9265ec01823d", "generate_results": ["protected void subAppend(LoggingEvent event){\n    try{\n        //Get the logger name\n        String loggerName = OptionConverter.toString(event.getLoggerName(),null);\n        //Create a new temp file\n        File tempFile = new File(dir,loggerName + \".log\");\n        //Create a writer to write the message into the temp file\n        Writer writer = new BufferedWriter(new FileWriter(tempFile));\n        //Write the message into the temp file\n        writer.write(event.getMessage());\n        //Close the writer\n        writer.close();\n    }catch(Exception e){\n        //Log the exception\n        errorHandler.error(\"Error writing log message\",e,null);\n    }\n}"]}
{"_id": "636766ef1a6d9265ec01761a", "generate_results": ["int addType(final String value){\nreturn 0;\n}"]}
{"_id": "636766821a6d9265ec0174b6", "generate_results": ["public static Class<?>[] resolveArguments(Type genericType,Class<?> targetType){\n    if(genericType instanceof ParameterizedType){\n        ParameterizedType pt = (ParameterizedType)genericType;\n        Type[] actualTypes = pt.getActualTypeArguments();\n        Map<TypeVariable<?>,Type> typeVariableMap = getTypeVariableMap(targetType);\n        if(typeVariableMap != null){\n            Class<?>[] resolvedArgs = new Class[actualTypes.length];\n            for(int i=0;i<resolvedArgs.length;i++){\n                Type actualType = actualTypes[i];\n                if(actualType instanceof TypeVariable){\n                    TypeVariable<?> tv = (TypeVariable<?>)actualType;\n                    if(typeVariableMap.containsKey(tv)){\n                        resolvedArgs[i] = typeVariableMap.get(tv).getClass();\n                    }else{\n                        return null; // Argument cannot be resolved\n                    }\n                }else{\n                    resolvedArgs[i] = actualType.getClass();\n                }\n            }\n            return resolvedArgs;\n        }else{\n            return null; // No type variable map available\n        }\n    }else{\n        return null; // Generic type is not parameterized\n    }\n}"]}
{"_id": "636767e11a6d9265ec018781", "generate_results": ["@Override public void accept(final METRICS data){\n    String key = data.getId();\n    if(!buffer.containsKey(key)){\n        buffer.put(key,data);\n    }else{\n        METRICS oldData = buffer.get(key);\n        if(oldData.combine(data)){\n            buffer.remove(key);\n        }\n    }\n}"]}
{"_id": "636767531a6d9265ec017efb", "generate_results": ["void insertBefore(Bucket bucket){\n    //TODO\n}"]}
{"_id": "636766f11a6d9265ec017641", "generate_results": ["@Override public int available() throws IOException {\n    if (index >= length) {\n        return 0;\n    }\n    return length - index;\n}"]}
{"_id": "636767de1a6d9265ec018706", "generate_results": ["public Mappings diffStructure(String tableName,Mappings mappings){\n    return Objects.requireNonNull(mappings).stream()\n            .filter(mapping -> !structures.containsKey(mapping.getKey()))\n            .collect(Collectors.toMap(Mapping::getKey, Mapping::getValue));\n}"]}
{"_id": "636767dd1a6d9265ec0186e5", "generate_results": ["public void addNewTarget(Channels channels,IConsumer consumer){\n    if(consumeTargets==null) {\n        consumeTargets = new ArrayList<>();\n    }\n    consumeTargets.add(new Group(channels,consumer));\n}"]}
{"_id": "636767871a6d9265ec01846d", "generate_results": ["public static void createConfigurationDirectory(){\n    String configDir = System.getProperty(\"user.home\") + File.separator + \"lf5\";\n    if (!new File(configDir).exists()){\n        new File(configDir).mkdirs();\n    }\n}"]}
{"_id": "636766f81a6d9265ec01775b", "generate_results": ["public long readLong(final int offset){\n    return ((long)readInt(offset)) << 32 | (long)readInt(offset + 4);\n}"]}
{"_id": "636767a51a6d9265ec01859d", "generate_results": ["public boolean equals(final byte[] data,int offset,final int len){\n    if(data == null || len < 0 || data.length - offset < len) return false;\n    for(int i = 0; i < len; i++){\n        if(bytes[i + offset] != data[i]) return false;\n    }\n    return true;\n}"]}
{"_id": "6367670b1a6d9265ec0179ff", "generate_results": ["public static Byte[] nullToEmpty(final Byte[] array){\n    if(array == null || array.length == 0) return EMPTY_BYTE_OBJECT_ARRAY;\n    return array.clone();\n}"]}
{"_id": "6367677f1a6d9265ec018347", "generate_results": ["public synchronized void send(final String message){\n    if (connections != null) {\n        for (Iterator i = connections.iterator(); i.hasNext();) {\n            Socket socket = (Socket) i.next();\n            PrintWriter out = new PrintWriter(socket.getOutputStream(), true);\n            out.println(message);\n        }\n    }\n}"]}
{"_id": "6367670a1a6d9265ec0179e8", "generate_results": ["public static Boolean[] nullToEmpty(final Boolean[] array){\n    if(array == null || array.length == 0) return EMPTY_BOOLEAN_OBJECT_ARRAY;\n    return array.clone();\n}"]}
{"_id": "6367677f1a6d9265ec01834b", "generate_results": ["public void put(LoggingEvent o){\n    if (numElements >= maxSize) {\n        throw new IllegalStateException(\"Buffer is full\");\n    }\n    buf[numElements++] = o;\n}"]}
{"_id": "636767df1a6d9265ec018744", "generate_results": ["protected List<TimeRange> buildTimeRanges(long start,long end){\n    if (end - start > FETCH_DATA_DURATION) {\n        long half = (end - start) / 2;\n        return Stream.of(\n                new TimeRange(start, start + half),\n                new TimeRange(end - half, end)\n        ).collect(Collectors.toList());\n    }\n    return Collections.singletonList(new TimeRange(start, end));\n}"]}
{"_id": "636767031a6d9265ec0178e6", "generate_results": ["public static byte[] toPrimitive(final Byte[] array){\n    if(array == null) {\n        return null;\n    }\n    final byte[] result = new byte[array.length];\n    for (int i = 0; i < array.length; i++) {\n        result[i] = array[i].byteValue();\n    }\n    return result;\n}"]}
{"_id": "636767dc1a6d9265ec0186be", "generate_results": ["static long compressTimeBucket(long timeBucket,int dayStep){\n    return (timeBucket - timeBucket % dayStep) / dayStep;\n}"]}
{"_id": "636767a41a6d9265ec01856c", "generate_results": ["public static int computeUTF8Size(final CharSequence str,final int index,final int len){\n    if(str==null) throw new NullPointerException(\"str\");\n    if(index<0||index>=str.length()) throw new IndexOutOfBoundsException(\"index\");\n    if(len<=0||len>str.length()-index) throw new IllegalArgumentException(\"len\");\n    int size=0;\n    for(int i=index;i<len;++i){\n        char c=str.charAt(i);\n        if(c<=0x7F)size+=1;\n        else if(c<=0x7FF)size+=2;\n        else if(c<=0xFFFF)size+=3;\n        else if(c<=0x1FFFFF)size+=4;\n        else if(c<=0x3FFFFFF)size+=5;\n        else if(c<=0x7FFFFFFF)size+=6;\n        else{\n            if((c&0xF0)==0xE0)size+=4;\n            else if((c&0xF0)==0xF0)size+=5;\n            else if((c&0xF0)==0xF0)size+=6;\n        }\n    }\n    return size;\n}"]}
{"_id": "636766f01a6d9265ec017639", "generate_results": ["public static <T>List<T> asList(T[] a){\nif(a==null)return Collections.emptyList();\nreturn Arrays.asList(a);\n}"]}
{"_id": "6367672d1a6d9265ec017c74", "generate_results": ["public boolean remove(int val){\n    if(map.containsKey(val)){\n        int index = map.get(val);\n        values.set(index,values.get(values.size()-1));\n        map.put(values.get(index),index);\n        values.remove(values.size()-1);\n        return true;\n    }\n    return false;\n}"]}
{"_id": "6367676b1a6d9265ec0181df", "generate_results": ["public static boolean startsWithIgnoreCase(String str,String prefix){\n    return str != null && prefix != null && str.toLowerCase().startsWith(prefix.toLowerCase());\n}"]}
{"_id": "6367674b1a6d9265ec017dc0", "generate_results": ["private Set<V> initVisibleVertices(){\nSet<V> visibleVertices = new HashSet<>();\nfor (E edge : graph.edgeSet()){\nvisibleVertices.add(edge.getSource());\n}\nreturn visibleVertices;\n}"]}
{"_id": "636767001a6d9265ec017873", "generate_results": ["public static String reverse(final String str){\n    if(str == null || str.isEmpty()){\n        return str;\n    }\n    final StringBuilder sb = new StringBuilder(str.length());\n    for(int i=str.length()-1;i>=0;i--){\n        sb.append(str.charAt(i));\n    }\n    return sb.toString();\n}"]}
{"_id": "636766ff1a6d9265ec01783b", "generate_results": ["public static String sub(String str,int start,int end){\n    if(str==null) return null;\n    if(start<0 || end>str.length() || start>end) throw new IndexOutOfBoundsException();\n    return str.substring(start,end);\n}"]}
{"_id": "6367671a1a6d9265ec017c15", "generate_results": ["public ByteVector putByteArray(final byte[] byteArrayValue,final int byteOffset,final int byteLength){\n    if (byteArrayValue == null) {\n        throw new IllegalArgumentException(\"byteArrayValue cannot be null\");\n    }\n    if (byteOffset < 0 || byteOffset >= byteArrayValue.length) {\n        throw new IllegalArgumentException(\"byteOffset must be within the range [0, byteArrayValue.length)\");\n    }\n    if (byteLength < 0 || byteOffset + byteLength > byteArrayValue.length) {\n        throw new IllegalArgumentException(\"byteLength must be within the range [0, byteArrayValue.length - byteOffset)\");\n    }\n\n    final int oldSize = this.size;\n    this.ensureCapacity(oldSize + byteLength);\n\n    System.arraycopy(byteArrayValue, byteOffset, this.data, oldSize, byteLength);\n\n    return this;\n}"]}
{"_id": "636766821a6d9265ec0174d2", "generate_results": ["public static AtmosphereRequest wrap(HttpServletRequest request){\n    return new AtmosphereRequestImpl(new Builder(request));\n}"]}
{"_id": "636767ab1a6d9265ec01867b", "generate_results": ["public static LinkedBuffer writeUTF8(final CharSequence str,final WriteSession session,final LinkedBuffer lb){\n    if(str==null) throw new NullPointerException(\"str\");\n    int length=str.length();\n    if(length>0){\n        byte[] buffer=new byte[length*3];\n        int offset=0;\n        for(int i=0;i<length;i++){\n            char c=str.charAt(i);\n            if(c>=MIN_SUPPLEMENTARY_CODE_POINT){\n                buffer[offset++]=c>>16&0xFF;\n                buffer[offset++]=c&0xFF;\n            }else{\n                buffer[offset++]=c;\n            }\n        }\n        session.write(buffer,offset,length);\n    }\n    return lb;\n}"]}
{"_id": "6367675c1a6d9265ec01805b", "generate_results": ["public void removeFromTreeEdgeList(){\n    if(this.prev != null){\n        this.prev.next = this.next;\n    }\n    if(this.next != null){\n        this.next.prev = this.prev;\n    }\n}"]}
{"_id": "636767791a6d9265ec01826d", "generate_results": ["public static String findAndSubst(String key,Properties props){\n    try{\n        return substVars(props.getProperty(key),props);\n    }catch(Exception e){\n        return props.getProperty(key);\n    }\n}"]}
{"_id": "636767001a6d9265ec01787f", "generate_results": ["protected void appendDetail(StringBuffer buffer,String fieldName,int[] array){\n    if(array == null || array.length == 0) {\n        return;\n    }\n    buffer.append(arrayStart).append('[');\n    for(int i = 0; i < array.length; i++) {\n        if(i > 0) {\n            buffer.append(arraySeparator);\n        }\n        buffer.append(array[i]);\n    }\n    buffer.append(']').append(arrayEnd);\n}"]}
{"_id": "636766fe1a6d9265ec017834", "generate_results": ["public static String sessionId(){\n    return ServletUtil.getSessionId();\n}"]}
{"_id": "636766ff1a6d9265ec01784b", "generate_results": ["public static boolean isDigits(String str){\n    if(str==null||str.length()==0)\n        return false;\n    for(int i=0;i<str.length();i++){\n        if(!Character.isDigit(str.charAt(i)))\n            return false;\n    }\n    return true;\n}"]}
{"_id": "636766fc1a6d9265ec0177da", "generate_results": ["private static boolean isParameterSeparator(final char c){\n    return PARAMETER_SEPARATORS[c];\n}"]}
{"_id": "6367670c1a6d9265ec017a35", "generate_results": ["private static boolean endsWith(final String str,final String suffix,final boolean ignoreCase){\n    if(str == null || suffix == null) return false;\n    if(suffix.length() > str.length()) return false;\n    if(ignoreCase){\n        return str.regionMatches(true,suffix.length(),suffix,0);\n    }else{\n        return str.endsWith(suffix);\n    }\n}"]}
{"_id": "6367667f1a6d9265ec01745d", "generate_results": ["public static List<PathSegmentImpl> decodePath(URI u,boolean decode){\n    if(decode) {\n        return new ArrayList<>(Arrays.asList(PathSegmentImpl.decode(u.getPath(),true)));\n    } else {\n        return new ArrayList<>();\n    }\n}"]}
{"_id": "636766f11a6d9265ec017651", "generate_results": ["public static Character[] nullToEmpty(final Character[] array){\n    if(array == null || array.length == 0) {\n        return EMPTY_CHARACTER_OBJECT_ARRAY;\n    }\n    return array;\n}"]}
{"_id": "636767821a6d9265ec0183ab", "generate_results": ["public boolean hasThrown(){\n    return _thrown != null;\n}"]}
{"_id": "636767831a6d9265ec0183c9", "generate_results": ["public static String peek(){\nreturn null;\n}"]}
{"_id": "636767de1a6d9265ec01871c", "generate_results": ["public void valueAccumulation(String key,Long value){\n    if(data.containsKey(key)){\n        data.put(key,data.get(key)+value);\n    }else{\n        data.put(key,value);\n    }\n}"]}
{"_id": "636766811a6d9265ec017496", "generate_results": ["public InputStream next() throws IOException {\n    if (stack.isEmpty()) return null;\n    return stack.pop();\n}"]}
{"_id": "6367677e1a6d9265ec01832e", "generate_results": ["public Logger exists(String name){\n    if(ht.containsKey(name)){\n        return (Logger)ht.get(name);\n    }\n    return null;\n}"]}
{"_id": "6367670a1a6d9265ec0179e7", "generate_results": ["public Converter lookup(final Class<?> clazz){\n    if(clazz == null) return null;\n    synchronized(converters){\n        Converter converter = converters.get(clazz);\n        if(converter != null) return converter;\n        for(Map.Entry<Class<?>,Converter> entry : converters.entrySet()){\n            if(entry.getKey().isAssignableFrom(clazz)){\n                converter = entry.getValue();\n                break;\n            }\n        }\n        return converter;\n    }\n}"]}
{"_id": "636767a41a6d9265ec018572", "generate_results": ["public long readRawVarint64() throws IOException {\n    return readRawVarint64(input);\n}"]}
{"_id": "636767021a6d9265ec0178bb", "generate_results": ["public static Double[] nullToEmpty(final Double[] array){\n    if(array == null || array.length == 0) {\n        return EMPTY_DOUBLE_OBJECT_ARRAY;\n    }\n    return array;\n}"]}
{"_id": "636767021a6d9265ec0178b2", "generate_results": ["private void pop(final String descriptor){\n    if(descriptor.charAt(0)=='B'){\n        popByte();\n    }else if(descriptor.charAt(0)=='C'){\n        popChar();\n    }else if(descriptor.charAt(0)=='D'){\n        popDouble();\n    }else if(descriptor.charAt(0)=='F'){\n        popFloat();\n    }else if(descriptor.charAt(0)=='I'){\n        popInt();\n    }else if(descriptor.charAt(0)=='J'){\n        popLong();\n    }else if(descriptor.charAt(0)=='L'){\n        popObject();\n    }else if(descriptor.charAt(0)=='N'){\n        popNull();\n    }else if(descriptor.charAt(0)=='O'){\n        popObject();\n    }else if(descriptor.charAt(0)=='Z'){\n        popBoolean();\n    }\n}"]}
{"_id": "636766f91a6d9265ec01776e", "generate_results": ["@Override public void write(final byte b[],final int off,final int len) throws IOException {\n    if (len == 0) return;\n    if (buf.length < len) {\n        buf = new byte[len];\n    }\n    System.arraycopy(b, off, buf, 0, len);\n    flush();\n}"]}
{"_id": "636767551a6d9265ec017f3f", "generate_results": ["public static final <V>void swap(V[] arr,int i,int j){\n    V temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n}"]}
{"_id": "636766ae1a6d9265ec0175dc", "generate_results": ["public Boolean isPartialContentResponse(){\n    if (response.getStatus() == 206){\n        return true;\n    }\n    return false;\n}"]}
{"_id": "636766f01a6d9265ec01762e", "generate_results": ["public static boolean isEmpty(final double[] array){\n    return array == null || array.length == 0;\n}"]}
{"_id": "6367667e1a6d9265ec01743a", "generate_results": ["public long lastWriteTimeStampInMilliseconds(){\n    if(lastWrite == -1){\n        return -1;\n    }else{\n        return System.currentTimeMillis();\n    }\n}"]}
{"_id": "636767601a6d9265ec0180fd", "generate_results": ["protected void addToIndex(V sourceVertex,V targetVertex,E e){\n    if(touchingVerticesToEdgeMap.containsKey(Pair.of(sourceVertex,targetVertex))){\n        Set<E> edges = touchingVerticesToEdgeMap.get(Pair.of(sourceVertex,targetVertex));\n        edges.add(e);\n    }else{\n        Set<E> edges = new HashSet<>();\n        edges.add(e);\n        touchingVerticesToEdgeMap.put(Pair.of(sourceVertex,targetVertex),edges);\n    }\n}"]}
{"_id": "636766821a6d9265ec0174c9", "generate_results": ["private static File[] classPath(){\n    String[] paths = System.getProperty(\"java.class.path\").split(\":\");\n    File[] files = new File[paths.length];\n    for(int i=0;i<files.length;i++){\n        files[i] = new File(paths[i]);\n    }\n    return files;\n}"]}
{"_id": "636767041a6d9265ec0178f8", "generate_results": ["private static String[] copyStrings(final String[] src){\n    if(src == null || src.length == 0) return new String[0];\n    final String[] dest = new String[src.length];\n    for(int i=0;i<src.length;i++){\n        dest[i] = src[i].toLowerCase();\n    }\n    return dest;\n}"]}
{"_id": "636767521a6d9265ec017ecc", "generate_results": ["public static Pair<Box2D,Box2D> splitAlongXAxis(Box2D box){\n    double mid = (box.getMinX() + box.getMaxX()) / 2;\n    return new Pair<>(new Box2D(box.getMinX(),mid,box.getHeight()),new Box2D(mid,box.getMaxX(),box.getHeight()));\n}"]}
{"_id": "636766a91a6d9265ec0175c1", "generate_results": ["private void enlarge(final int size){\n    if(size > 0){\n        final int newLength = this.data.length + size;\n        final byte[] newData = new byte[newLength];\n        System.arraycopy(this.data, 0, newData, 0, this.data.length);\n        this.data = newData;\n    }\n}"]}
{"_id": "636767781a6d9265ec018238", "generate_results": ["public boolean isAttached(Appender appender){\n    if(appenderList.contains(appender)){\n        return true;\n    }\n    else{\n        return false;\n    }\n}"]}
{"_id": "6367674a1a6d9265ec017dab", "generate_results": ["@Override public int compare(Double o1,Double o2){\n    if(Math.abs(o1-o2)<epsilon) return 0;\n    else return Double.compare(o1,o2);\n}"]}
{"_id": "6367672d1a6d9265ec017c78", "generate_results": ["public boolean insert(int val){\n    if(map.containsKey(val)){\n        return false;\n    }\n    map.put(val,val);\n    return true;\n}"]}
{"_id": "636767dc1a6d9265ec0186c6", "generate_results": ["private boolean containsAllFields(Fields fields){\n    if (fields == null || fields.isEmpty()) {\n        return true;\n    }\n    for (String fieldName : fields.keySet()) {\n        if (!properties.containsKey(fieldName)) {\n            return false;\n        }\n    }\n    return true;\n}"]}
{"_id": "636766821a6d9265ec0174bf", "generate_results": ["public static String capitalize(String name){\n    if(name==null||name.length()==0)return \"\";\n    char[] chars=name.toCharArray();\n    chars[0]=Character.toUpperCase(chars[0]);\n    return new String(chars);\n}"]}
{"_id": "636767aa1a6d9265ec01865a", "generate_results": ["public static int writeTo(final DataOutput out,LinkedBuffer node) throws IOException {\n    if (node == null) {\n        return 0;\n    }\n    final byte[] buffer = node.buffer;\n    if (buffer == null) {\n        return 0;\n    }\n    final int start = node.start;\n    final int offset = node.offset;\n    if (start < 0 || offset < 0 || start + offset > buffer.length) {\n        throw new IllegalArgumentException(\"Invalid start or offset\");\n    }\n    out.write(buffer, start, offset);\n    return offset;\n}"]}
{"_id": "636766f21a6d9265ec017677", "generate_results": ["public static boolean isNotTrue(Boolean bool){\n    return !bool;\n}"]}
{"_id": "6367674f1a6d9265ec017e74", "generate_results": ["public String toString(){\n    return Arrays.toString(vs);\n}"]}
{"_id": "6367675c1a6d9265ec018058", "generate_results": ["@SuppressWarnings(\"unchecked\") public static Supplier<String> createStringSupplier(int start){\nreturn new Supplier<String>() {\n    private int current = start;\n\n    @Override\n    public String get() {\n        return Integer.toString(current++);\n    }\n};\n}"]}
{"_id": "6367677b1a6d9265ec0182bd", "generate_results": ["public String format(final LoggingEvent event){\n    if(event==null) return null;\n    StringBuffer buffer=new StringBuffer(BUF_SIZE);\n    //convert the date to a string\n    buffer.append(PatternConverter.convert(event.getMillis(),TTCC_CONVERSION_PATTERN));\n    //append the logger name\n    buffer.append(\" \");\n    buffer.append(PatternConverter.convert(event.getLoggerName(),DEFAULT_CONVERSION_PATTERN));\n    //append the thread name\n    buffer.append(\" \");\n    buffer.append(PatternConverter.convert(event.getThreadName(),DEFAULT_CONVERSION_PATTERN));\n    //append the level of the log message\n    buffer.append(\" \");\n    buffer.append(PatternConverter.convert(event.getLevel().toString(),DEFAULT_CONVERSION_PATTERN));\n    //append the message of the log event\n    buffer.append(\" \");\n    buffer.append(PatternConverter.convert(event.getMessage(),conversionPattern));\n    //if there is an exception, append it\n    if(handlesExceptions && event.getThrowableInformation()!=null){\n        Throwable throwable=event.getThrowableInformation().getThrowable();\n        if(throwable!=null){\n            buffer.append(\" \");\n            PatternConverter.convert(throwable.toString(),DEFAULT_CONVERSION_PATTERN);\n            if(throwable instanceof java.lang.Throwable[]){\n                buffer.append(\" \");\n                PatternConverter.convert(((java.lang.Throwable)throwable).getMessage(),DEFAULT_CONVERSION_PATTERN);\n            }\n        }\n    }\n    return buffer.toString();\n}"]}
{"_id": "636766ff1a6d9265ec017842", "generate_results": ["public static double[] toPrimitive(final Double[] array){\n    if(array.length == 0) {\n        return EMPTY_DOUBLE_ARRAY;\n    }\n    final double[] result = new double[array.length];\n    for (int i = 0; i < array.length; i++) {\n        result[i] = array[i].doubleValue();\n    }\n    return result;\n}"]}
{"_id": "636766fa1a6d9265ec0177a9", "generate_results": ["private void addInitializedType(final int abstractType){\n    if(initializationCount == 0){\n        initializations = new int[1];\n        initializations[0] = abstractType;\n    }else{\n        int[] newInitializations = new int[initializationCount + 1];\n        System.arraycopy(initializations, 0, newInitializations, 0, initializationCount);\n        newInitializations[initializationCount] = abstractType;\n        initializations = newInitializations;\n    }\n}"]}
{"_id": "6367670a1a6d9265ec0179dc", "generate_results": ["private void putAbstractTypes(final int start,final int end){\n    if(start >= end) return;\n    final Object[] newFrame = new Object[end - start];\n    System.arraycopy(currentFrame,start,newFrame,0,end - start);\n    currentFrame = newFrame;\n}"]}
{"_id": "636766801a6d9265ec017482", "generate_results": ["public void readFrom(final InputStream in) throws IOException {\n    if (in == null) {\n        throw new NullPointerException(\"input stream is null\");\n    }\n    int bytesRead = 0;\n    while ((bytesRead = in.read(buffer, pointer, buffer.length - pointer)) != -1) {\n        pointer += bytesRead;\n        if (pointer >= buffer.length) {\n            resizeIfNeeded();\n        }\n    }\n}"]}
{"_id": "6367670a1a6d9265ec0179d8", "generate_results": ["@Override public void write(final byte[] b) throws IOException {\n    if (b == null) {\n        throw new NullPointerException(\"Buffer cannot be null\");\n    }\n    this.write(b, 0, b.length);\n}"]}
{"_id": "636766a81a6d9265ec01757b", "generate_results": ["@SuppressWarnings(\"unchecked\") public String toString(JSONWriter.Feature... features){\n    if(features==null||features.length==0) return this.toJSONString();\n    StringBuilder sb = new StringBuilder();\n    for (int i = 0; i < features.length; i++) {\n        if(i!=0)sb.append(\",\");\n        if(features[i]==DEFAULT) continue;\n        if(features[i]==PRETTY_PRINT) sb.append(PRETTY_PRINT);\n        else if(features[i]==MINIMIZE_QUOTES) sb.append(MINIMIZE_QUOTES);\n        else if(features[i]==WRITE_NUMBERS_AS_STRINGS) sb.append(WRITE_NUMBERS_AS_STRINGS);\n        else if(features[i]==WRITE_DATE_TIMESTAMPS_AS_STRING) sb.append(WRITE_DATE_TIMESTAMPS_AS_STRING);\n        else if(features[i]==WRITE_BIGDECIMAL_AS_STRING) sb.append(WRITE_BIGDECIMAL_AS_STRING);\n        else if(features[i]==WRITE_NULL_AS_EMPTY_STRING) sb.append(WRITE_NULL_AS_EMPTY_STRING);\n        else if(features[i]==WRITE_EMPTY_ARRAY_AS_SINGLE_ELEMENT) sb.append(WRITE_EMPTY_ARRAY_AS_SINGLE_ELEMENT);\n        else if(features[i]==WRITE_EMPTY_OBJECT_AS_SINGLE_ELEMENT) sb.append(WRITE_EMPTY_OBJECT_AS_SINGLE_ELEMENT);\n        else if(features[i]==WRITE_MAP_KEYS_IN_ORDER) sb.append(WRITE_MAP_KEYS_IN_ORDER);\n        else if(features[i]==WRITE_NON_NULL_VALUES_ONLY) sb.append(WRITE_NON_NULL_VALUES_ONLY);\n        else if(features[i]==WRITE_PRETTY_PRINT_FOR_PRIMITIVE_TYPES) sb.append(WRITE_PRETTY_PRINT_FOR_PRIMITIVE_TYPES);\n        else if(features[i]==WRITE_PRETTY_PRINT_FOR_NON_PRIMITIVE_TYPES) sb.append(WRITE_PRETTY_PRINT_FOR_NON_PRIMITIVE_TYPES);\n        else if(features[i]==WRITE_PRETTY_PRINT_FOR_PRIMITIVES_AND_NON_PRIMITIVES) sb.append(WRITE_PRETTY_PRINT_FOR_PRIMITIVES_AND_NON_PRIMITIVES);\n        else if(features[i]==WRITE_PRETTY_PRINT_FOR_PRIMITIVES_AND_NON_PRIMITIVES_AND_NULLS) sb.append(WRITE_PRETTY_PRINT_FOR_PRIMITIVES_AND_NON_PRIMITIVES_AND_NULLS);\n        else if(features[i]==WRITE_PRETTY_PRINT_FOR_PRIMITIVES_AND_NON_PRIMITIVES_AND_NULLS_AND_EMPTY) sb.append(WRITE_PRETTY_PRINT_FOR_PRIMITIVES_AND_NON_PRIMITIVES_AND_NULLS_AND_EMPTY);\n        else if(features[i]==WRITE_PRETTY_PRINT_FOR_PRIMITIVES_AND_NON_PRIMITIVES_AND_NULLS_AND_EMPTY_AND_NULLS) sb.append(WRITE_PRETTY_PRINT_FOR_PRIMITIVES_AND_NON_PRIMITIVES_AND_NULLS_AND_EMPTY_AND_NULLS);\n        else if(features[i]==WRITE_PRETTY_PRINT_FOR_PRIMITIVES_AND_NON_PRIMITIVES_AND_NULLS_AND_EMPTY_AND_NULLS_AND_EMPTY) sb.append(WRITE_PRETTY_PRINT_FOR_PRIMITIVES_AND_NON_PRIMITIVES_AND_NULLS_AND_EMPTY_AND_NULLS_AND_EMPTY);\n        else if(features[i]==WRITE_PRETTY_PRINT_FOR_PRIMITIVES_AND_NON_PRIMITIVES_AND_NULLS_AND_EMPTY_AND_NULLS_AND_EMPTY_AND_NULLS) sb.append(WRITE_PRETTY_PRINT_FOR_PRIMITIVES_AND_NON_PRIMITIVES_AND_NULLS_AND_EMPTY_AND_NULLS_AND_EMPTY_AND_NULLS);\n        else if(features[i]==WRITE_PRETTY_PRINT_FOR_PRIMITIVES_AND_NON_PRIMITIVES_AND_NULLS_AND_EMPTY_AND_NULLS_AND_EMPTY_AND_NULLS) sb.append(WRITE_PRETTY_PRINT_FOR_PRIMITIVES_AND_NON_PRIMITIVES_AND_NULLS_AND_EMPTY_AND_NULLS_AND_EMPTY_AND_NULLS);\n        else if(features[i]==WRITE_PRETTY_PRINT_FOR_PRIMITIVES_AND_NON_PRIMITIVES_AND_NULLS_AND_EMPTY_AND_NULLS_AND_EMPTY_AND_NULLS) sb.append(WRITE_PRETTY_PRINT_FOR_PRIMITIVES_AND_NON_PRIMITIVES_AND_NULLS_AND_EMPTY_AND_NULLS_AND_EMPTY_AND_NULLS);\n        else if(features[i]==WRITE_PRETTY_PRINT_FOR_PRIMITIVES_AND_NON_PRIMITIVES_AND_NULLS_AND_EMPTY_AND_NULLS_AND_EMPTY_AND_NULLS) sb.append(WRITE_PRETTY_PRINT_FOR_PRIMITIVES_AND_NON_PRIMITIVES_AND_NULLS_AND_EMPTY_AND_NULLS_AND_EMPTY_AND_NULLS);\n        else if(features[i]==WRITE_PRETTY_PRINT_FOR_PRIMITIVES_AND_NON_PRIMITIVES_AND_NULLS_AND_EMPTY_AND_NULLS_AND_EMPTY_AND_NULLS) sb.append(WRITE_PRETTY_PRINT_FOR_PRIMITIVES_AND_NON_PRIMITIVES_AND_NULLS_AND_EMPTY_AND_NULLS_AND_EMPTY_AND_NULLS);\n        else if(features[i]==WRITE_PRETTY_PRINT_FOR_PRIMITIVES_AND_NON_PRIMITIVES_AND_NULLS_AND_EMPTY_AND_NULLS_AND_EMPTY_AND_NULLS) sb.append(WRITE_PRETTY_PRINT_FOR_PRIMITIVES_AND_NON_PRIMITIVES_AND_NULLS_AND_EMPTY_AND_NULLS_AND_EMPTY_AND_NULLS);\n        else if(features[i]==WRITE_PRETTY_PRINT_FOR_PRIMITIVES_AND_NON_PRIMITIVES_AND_NULLS_AND_EMPTY_AND_NULLS_AND_EMPTY_AND_NULLS) sb.append(WRITE_PRETTY_PRINT_FOR_PRIMITIVES_AND_NON_PRIMITIVES_AND_NULLS_AND_EMPTY_AND_NULLS_AND_EMPTY_AND_NULLS);\n        else if(features[i]==WRITE_PRETTY_PRINT_FOR_PRIMITIVES_AND_NON_PRIMITIVES"]}
{"_id": "636767021a6d9265ec0178bf", "generate_results": ["@Override protected Object convertToType(final Class<?> type,final Object value) throws Exception {\n    if (value == null || \"\".equals(value.toString())) {\n        return getDefaultType(type);\n    }\n    final String[] values = value.toString().split(\",\");\n    if (values.length > 0) {\n        return values[0];\n    }\n    return getDefaultType(type);\n}"]}
{"_id": "6367670b1a6d9265ec017a0f", "generate_results": ["public static boolean containsAnyIgnoreCase(String str,List<String> searchStrArray){\n    if(str==null||searchStrArray==null||searchStrArray.isEmpty()){\n        return false;\n    }\n    for(String searchStr:searchStrArray){\n        if(StringUtils.equalsIgnoreCase(searchStr,str)){\n            return true;\n        }\n    }\n    return false;\n}"]}
{"_id": "636766a81a6d9265ec01758e", "generate_results": ["public static int nextPrime(int desiredCapacity){\n    if(desiredCapacity < 2) return 2;\n    for(int i = desiredCapacity; i >= 2; i--){\n        if(isPrime(i)) return i;\n    }\n    throw new IllegalArgumentException(\"No prime found\");\n}"]}
{"_id": "6367670a1a6d9265ec0179cf", "generate_results": ["public static char toChar(final Character ch,final char defaultValue){\n    if(ch == null){\n        return defaultValue;\n    }\n    return ch.charValue();\n}"]}
{"_id": "6367676b1a6d9265ec0181e2", "generate_results": ["public static Object findFirstMatch(Collection source,Collection candidates){\n    Iterator it = candidates.iterator();\n    while(it.hasNext()){\n        if(source.contains(it.next())){\n            return it.next();\n        }\n    }\n    return null;\n}"]}
{"_id": "6367676b1a6d9265ec0181ee", "generate_results": ["public static String trimTrailingWhitespace(String str){\n    if(str==null) return null;\n    int len=str.length();\n    while(len>0 && Character.isWhitespace(str.charAt(len-1))){\n        len--;\n    }\n    return str.substring(0,len);\n}"]}
{"_id": "636767dc1a6d9265ec0186cb", "generate_results": ["public void init(){\n    File dir = new File(analyzeResultDist);\n    if (!dir.exists()) {\n        dir.mkdirs();\n    }\n}"]}
{"_id": "636767a31a6d9265ec018552", "generate_results": ["@Override public String readString() throws IOException {\n    int length = readRawVarint32();\n    if (length == 0) return \"\";\n    byte[] bytes = new byte[length];\n    readRawBytes(bytes);\n    return new String(bytes, StandardCharsets.UTF_8);\n}"]}
{"_id": "636767a61a6d9265ec0185b7", "generate_results": ["private static int digitValue(final char c){\n    if(c >= '0' && c <= '9'){\n        return c - '0';\n    }\n    throw new IllegalArgumentException(\"Illegal digit: \" + c);\n}"]}
{"_id": "636767e01a6d9265ec018755", "generate_results": ["private Map<String,Object> buildContent(JsonObject jsonObject){\n    Map<String,Object> content = new HashMap<>();\n    for (Map.Entry<String, Object> entry : jsonObject.entrySet()) {\n        if (entry.getValue() instanceof JsonObject) {\n            content.put(entry.getKey(), buildContent((JsonObject) entry.getValue()));\n        } else if (entry.getValue() instanceof List) {\n            content.put(entry.getKey(), ((List<?>) entry.getValue()).stream().map(item -> item.toString()).collect(Collectors.toList()));\n        } else {\n            content.put(entry.getKey(), entry.getValue());\n        }\n    }\n    return content;\n}"]}
{"_id": "6367667f1a6d9265ec017458", "generate_results": ["public AtmosphereFramework removeAtmosphereHandler(String mapping){\n    if (atmosphereHandlers.containsKey(mapping)) {\n        atmosphereHandlers.remove(mapping);\n    }\n    return this;\n}"]}
{"_id": "636767a21a6d9265ec018517", "generate_results": ["public final byte[] toByteArray(){\n    if(head==null){\n        throw new IllegalStateException(\"head is null\");\n    }\n    int size=head.size();\n    if(size>0){\n        byte[] b=new byte[size];\n        System.arraycopy(head.array(),head.offset(),b,0,size);\n        return b;\n    }else{\n        return new byte[0];\n    }\n}"]}
{"_id": "6367667d1a6d9265ec017401", "generate_results": ["public static String unescapeJava(String str) throws Exception {\n    if (str == null)\n        return null;\n\n    StringWriter sw = new StringWriter(str.length());\n    char c;\n    int i = 0;\n    while ((c = str.charAt(i)) != '\\0') {\n        if (c == '\\\\') {\n            switch (str.charAt(++i)) {\n                case 'n':\n                    sw.write('\\n');\n                    break;\n                case 't':\n                    sw.write('\\t');\n                    break;\n                case 'r':\n                    sw.write('\\r');\n                    break;\n                case '\\\"':\n                    sw.write('\"');\n                    break;\n                case '\\'':\n                    sw.write('\\'');\n                    break;\n                case '\\\\':\n                    sw.write('\\\\');\n                    break;\n                default:\n                    throw new IllegalArgumentException(\"Invalid escape sequence: \\\\\");\n            }\n        } else {\n            sw.write(c);\n        }\n        i++;\n    }\n\n    return sw.toString();\n}"]}
{"_id": "636766f01a6d9265ec01763e", "generate_results": ["private static String javaCharset(String charset){\n    if(charset == null) return null;\n    if(charset.equals(\"US-ASCII\")) return \"ISO-8859-1\";\n    if(charset.equals(\"UTF-8\")) return \"UTF-8\";\n    if(charset.equals(\"ISO-8859-15\")) return \"ISO-8859-15\";\n    if(charset.equals(\"Windows-1252\")) return \"windows-1252\";\n    if(charset.equals(\"GBK\")) return \"gbk\";\n    if(charset.equals(\"GB2312\")) return \"gb2312\";\n    if(charset.equals(\"BIG5\")) return \"big5\";\n    if(charset.equals(\"EUC-JP\")) return \"euc-jp\";\n    if(charset.equals(\"Shift_JIS\")) return \"shift_jis\";\n    if(charset.equals(\"KOI8-R\")) return \"koi8-r\";\n    if(charset.equals(\"ISO-2022-JP\")) return \"iso-2022-jp\";\n    if(charset.equals(\"ISO-2022-KR\")) return \"iso-2022-kr\";\n    if(charset.equals(\"ISO-8859-7\")) return \"iso-8859-7\";\n    if(charset.equals(\"ISO-8859-9\")) return \"iso-8859-9\";\n    if(charset.equals(\"ISO-8859-10\")) return \"iso-8859-10\";\n    if(charset.equals(\"ISO-8859-11\")) return \"iso-8859-11\";\n    if(charset.equals(\"ISO-8859-12\")) return \"iso-8859-12\";\n    if(charset.equals(\"ISO-8859-13\")) return \"iso-8859-13\";\n    if(charset.equals(\"ISO-8859-14\")) return \"iso-8859-14\";\n    if(charset.equals(\"ISO-8859-15\")) return \"iso-8859-15\";\n    if(charset.equals(\"ISO-8859-16\")) return \"iso-8859-16\";\n    if(charset.equals(\"ISO-8859-17\")) return \"iso-8859-17\";\n    if(charset.equals(\"ISO-8859-18\")) return \"iso-8859-18\";\n    if(charset.equals(\"ISO-8859-19\")) return \"iso-8859-19\";\n    if(charset.equals(\"ISO-8859-20\")) return \"iso-8859-20\";\n    if(charset.equals(\"ISO-8859-21\")) return \"iso-8859-21\";\n    if(charset.equals(\"ISO-8859-22\")) return \"iso-8859-22\";\n    if(charset.equals(\"ISO-8859-23\")) return \"iso-8859-23\";\n    if(charset.equals(\"ISO-8859-24\")) return \"iso-8859-24\";\n    if(charset.equals(\"ISO-8859-25\")) return \"iso-8859-25\";\n    if(charset.equals(\"ISO-8859-26\")) return \"iso-8859-26\";\n    if(charset.equals(\"ISO-8859-27\")) return \"iso-8859-27\";\n    if(charset.equals(\"ISO-8859-28\")) return \"iso-8859-28\";\n    if(charset.equals(\"ISO-8859-29\")) return \"iso-8859-29\";\n    if(charset.equals(\"ISO-8859-30\")) return \"iso-8859-30\";\n    if(charset.equals(\"ISO-8859-31\")) return \"iso-8859-31\";\n    if(charset.equals(\"ISO-8859-32\")) return \"iso-8859-32\";\n    if(charset.equals(\"ISO-8859-33\")) return \"iso-8859-33\";\n    if(charset.equals(\"ISO-8859-34\")) return \"iso-8859-34\";\n    if(charset.equals(\"ISO-8859-35\")) return \"iso-8859"]}
{"_id": "6367676a1a6d9265ec0181bf", "generate_results": ["public static Object quoteIfString(Object obj){\n    if(obj instanceof String)\n        return \"\\\"\" + obj.toString() + \"\\\"\";\n    else\n        return obj;\n}"]}
{"_id": "636767501a6d9265ec017e86", "generate_results": ["@Override public ListNode<E> previousNode(){\nreturn null;\n}"]}
{"_id": "636766f21a6d9265ec017667", "generate_results": ["public short readShort(final int offset){\n    if(offset < 0 || offset + 2 > classFileBuffer.length)\n        throw new IndexOutOfBoundsException(\"offset: \" + offset + \", length: \" + classFileBuffer.length);\n    return (short)(classFileBuffer[offset] << 8 | classFileBuffer[offset+1]);\n}"]}
{"_id": "636767031a6d9265ec0178ef", "generate_results": ["private static Object copyArrayGrow1(final Object array,final Class<?> newArrayComponentType){\n    if(array == null) return null;\n\n    final int length = Array.getLength(array);\n    final Object result = Array.newInstance(newArrayComponentType,length+1);\n\n    System.arraycopy(array,0,result,0,length);\n    Array.set(result,length,newArrayComponentType.getConstructor().newInstance());\n\n    return result;\n}"]}
{"_id": "636767431a6d9265ec017c8d", "generate_results": ["private int computeBinaryLog(int n){\n    if(n == 0) return -1;\n    int log = 0;\n    while(n > 1){\n        n /= 2;\n        log++;\n    }\n    return log;\n}"]}
{"_id": "636767611a6d9265ec018116", "generate_results": ["private Set<V> intersection(Set<V> set1,Set<V> set2){\n    if(set1==null || set2==null) return null;\n    Set<V> result = new HashSet<>();\n    for(V v : set1){\n        if(set2.contains(v)) result.add(v);\n    }\n    return result;\n}"]}
{"_id": "636766f71a6d9265ec017730", "generate_results": ["static String[] toNoNullStringArray(Collection<?> collection){\n    if(collection == null){\n        return EMPTY_STRING_ARRAY;\n    }else{\n        return (String[])collection.toArray(new String[0]);\n    }\n}"]}
{"_id": "636767081a6d9265ec0179a2", "generate_results": ["private static boolean isAllZeros(String s){\n    if(s==null || s.length()==0) return true;\n    for(int i=0;i<s.length();i++){\n        if(s.charAt(i)!='0') return false;\n    }\n    return true;\n}"]}
{"_id": "636766821a6d9265ec0174b3", "generate_results": ["protected Object filter(Object msg){\n    if(msg==null||msg.equals(AbortMessage.INSTANCE)){\n        return null;\n    }\n    return msg;\n}"]}
{"_id": "636767e01a6d9265ec018764", "generate_results": ["private JsonObject convertProperties(List<KeyStringValuePair> properties){\n    JsonObject jsonObject = new JsonObject();\n    for(KeyStringValuePair property : properties){\n        jsonObject.addProperty(property.getKey(),property.getValue());\n    }\n    return jsonObject;\n}"]}
{"_id": "6367677e1a6d9265ec018314", "generate_results": ["protected int removeUnusedNodes(){\n    // Your implementation here\n}"]}
{"_id": "636766ff1a6d9265ec017853", "generate_results": ["protected Label readLabel(final int bytecodeOffset,final Label[] labels){\n    for (Label label : labels) {\n        if (label.getBytecodeOffset() == bytecodeOffset) {\n            return label;\n        }\n    }\n    final Label label = createLabel(bytecodeOffset,labels);\n    labels[label.getBytecodeOffset()] = label;\n    return label;\n}"]}
{"_id": "6367677d1a6d9265ec0182fd", "generate_results": ["public static boolean toBoolean(String value,boolean dEfault){\n    if(value==null)return dEfault;\n    String v=value.trim().toLowerCase();\n    return \"true\".equals(v) || \"false\".equals(v);\n}"]}
{"_id": "6367676a1a6d9265ec0181cd", "generate_results": ["public static String trimLeadingWhitespace(String str){\n    if(str==null) return null;\n    int i=0;\n    while(i<str.length() && Character.isWhitespace(str.charAt(i))){\n        i++;\n    }\n    return (i>0)?str.substring(i):str;\n}"]}
{"_id": "636766fe1a6d9265ec01782a", "generate_results": ["final String readUtf(final int constantPoolEntryIndex,final char[] charBuffer){\n    if(constantPoolEntryIndex < 0 || constantPoolEntryIndex >= this.cpInfoOffsets.length){\n        throw new IllegalArgumentException(\"Invalid constant pool entry index: \" + constantPoolEntryIndex);\n    }\n    final int utfOffset = this.cpInfoOffsets[constantPoolEntryIndex];\n    if(utfOffset < 0 || utfOffset >= this.classFileBuffer.length){\n        throw new IllegalArgumentException(\"Invalid UTF-8 offset: \" + utfOffset);\n    }\n    final int utfLength = this.readShort(utfOffset);\n    if(utfLength < 1 || utfLength > this.classFileBuffer.length - utfOffset){\n        throw new IllegalArgumentException(\"Invalid UTF-8 length: \" + utfLength);\n    }\n    System.arraycopy(this.classFileBuffer,utfOffset, charBuffer, 0, utfLength);\n    return new String(charBuffer, 0, utfLength);\n}"]}
{"_id": "636766851a6d9265ec01751b", "generate_results": ["private static char decodeHexNibble(final char c){\n    if(c >= '0' && c <= '9'){\n        return (char)(c - '0');\n    }else if(c >= 'A' && c <= 'F'){\n        return (char)(c - 'A' + 10);\n    }else if(c >= 'a' && c <= 'f'){\n        return (char)(c - 'a' + 10);\n    }\n    throw new IllegalArgumentException(\"Invalid hex nibble: \" + c);\n}"]}
{"_id": "636766f21a6d9265ec01767d", "generate_results": ["public static String toString(Object object){\n    return object == null ? null : object.toString();\n}"]}
{"_id": "636767581a6d9265ec017fc4", "generate_results": ["public static long factorial(int n){\n    if(n==0 || n==1)\n        return 1;\n    else\n        return n*factorial(n-1);\n}"]}
{"_id": "636767511a6d9265ec017eb6", "generate_results": ["private OuterFaceCirculator selectOnOuterFace(Predicate<Node> predicate,Node start,Node stop,int dir){\nreturn null;\n}"]}
{"_id": "636767841a6d9265ec0183e8", "generate_results": ["public void add(LoggingEvent event){\n    if (numElems >= maxSize) {\n        resize(maxSize * 2);\n    }\n    events[numElems++] = event;\n}"]}
{"_id": "636767a41a6d9265ec01857e", "generate_results": ["private static int compareSigned(long a,long b){\n    if(a==b) return 0;\n    if(a>b) return -1;\n    else return 1;\n}"]}
{"_id": "636767691a6d9265ec0181ae", "generate_results": ["public static String[] toStringArray(Enumeration<String> enumeration){\n    if (enumeration == null) {\n        return new String[0];\n    }\n    List<String> list = new ArrayList<>();\n    while (enumeration.hasMoreElements()) {\n        list.add(enumeration.nextElement());\n    }\n    return list.toArray(new String[0]);\n}"]}
{"_id": "636766a91a6d9265ec0175ae", "generate_results": ["public ByteVector putByteArray(final byte[] byteArrayValue,final int byteOffset,final int byteLength){\n    if (byteArrayValue == null) {\n        throw new IllegalArgumentException(\"byteArrayValue cannot be null\");\n    }\n    if (byteOffset < 0 || byteOffset >= byteArrayValue.length) {\n        throw new IllegalArgumentException(\"byteOffset must be within the bounds of byteArrayValue\");\n    }\n    if (byteLength < 0 || byteOffset + byteLength > byteArrayValue.length) {\n        throw new IllegalArgumentException(\"byteLength must be within the bounds of byteArrayValue\");\n    }\n\n    // Calculate the new capacity\n    final int newCapacity = this.capacity + byteLength;\n\n    // Ensure that the new capacity is at least twice the current capacity\n    if (newCapacity < this.capacity * 2) {\n        newCapacity = this.capacity * 2;\n    }\n\n    // Resize the byte array if necessary\n    if (this.data.length < newCapacity) {\n        this.data = Arrays.copyOf(this.data, newCapacity);\n    }\n\n    // Copy the bytes from the byte array to the byte vector\n    System.arraycopy(byteArrayValue, byteOffset, this.data, this.size, byteLength);\n\n    // Update the size of the byte vector\n    this.size += byteLength;\n\n    return this;\n}"]}
{"_id": "636766f11a6d9265ec01764f", "generate_results": ["public Collection<Object> values(){\nreturn Collections.unmodifiableCollection(this.writeMethods.values());\n}"]}
{"_id": "636766f81a6d9265ec017758", "generate_results": ["@Override public int hashCode(){\nreturn this.type.hashCode();\n}"]}
{"_id": "6367676c1a6d9265ec01820b", "generate_results": ["public static String deleteAny(String inString,String charsToDelete){\n    if (inString == null || charsToDelete == null) {\n        return inString;\n    }\n    StringBuilder sb = new StringBuilder(inString.length());\n    for (int i = 0; i < inString.length(); i++) {\n        char c = inString.charAt(i);\n        if (!charsToDelete.contains(c)) {\n            sb.append(c);\n        }\n    }\n    return sb.toString();\n}"]}
{"_id": "636766861a6d9265ec01755a", "generate_results": ["public final MatchResult match(CharSequence uri){\n    if (uri == null) {\n        throw new IllegalArgumentException(\"URI cannot be null\");\n    }\n    if (regexPattern == null) {\n        throw new IllegalStateException(\"Pattern has not been compiled yet\");\n    }\n    Matcher matcher = regexPattern.matcher(uri);\n    if (!matcher.find()) {\n        return null;\n    }\n    return new GroupIndexMatchResult(matcher);\n}"]}
{"_id": "636766f91a6d9265ec01777d", "generate_results": ["public static byte convertHexDigit(byte b){\n    if(b >= '0' && b <= '9') return (byte)(b - '0');\n    if(b >= 'A' && b <= 'F') return (byte)(b - 'A' + 10);\n    if(b >= 'a' && b <= 'f') return (byte)(b - 'a' + 10);\n    throw new IllegalArgumentException(\"Invalid hex digit: \" + b);\n}"]}
{"_id": "636766801a6d9265ec017477", "generate_results": ["private void addReverse(final InputStream[] files){\n    Deque<InputStream> stack = new LinkedList<>();\n    for(int i=files.length-1;i>=0;i--){\n        stack.push(files[i]);\n    }\n}"]}
{"_id": "636767de1a6d9265ec01871e", "generate_results": ["private void check(String modelName) throws IllegalStateException {\n    if (keys == null || keys.isEmpty()) {\n        throw new IllegalStateException(\"No key defined for model: \" + modelName);\n    }\n}"]}
{"_id": "636766f81a6d9265ec01774b", "generate_results": ["public byte readByte() throws IOException {\n    if (pos >= bufSize) {\n        fillBuffer();\n    }\n    return buffer[pos++];\n}"]}
{"_id": "636766851a6d9265ec017515", "generate_results": ["@Override public Action inspect(AtmosphereResource r){\n    if (r.getTransport() == UNDEFINED) {\n        return Action.CONTINUE;\n    }\n    // Your logic to suspend the resource\n    return Action.SUSPEND;\n}"]}
{"_id": "636767611a6d9265ec018106", "generate_results": ["public double vertexWeight(Set<V> v){\n    return 0;\n}"]}
{"_id": "636767841a6d9265ec0183f2", "generate_results": ["public int compare(Object aObj1,Object aObj2){\n    EventDetails e1=(EventDetails)aObj1;\n    EventDetails e2=(EventDetails)aObj2;\n    return e1.getTimeStamp().compareTo(e2.getTimeStamp());\n}"]}
{"_id": "636767861a6d9265ec01844c", "generate_results": ["public void removeAppender(String name){\n    if(name == null) return;\n    Enumeration e = getAllAppenders();\n    while(e.hasMoreElements()){\n        Appender a = (Appender)e.nextElement();\n        if(a.getName().equals(name)){\n            removeAppender(a);\n            break;\n        }\n    }\n}"]}
{"_id": "636767781a6d9265ec018242", "generate_results": ["public int appendLoopOnAppenders(LoggingEvent event){\n    Enumeration enumeration = getAllAppenders();\n    while(enumeration.hasMoreElements()){\n        Appender appender = (Appender) enumeration.nextElement();\n        if(appender instanceof AppenderAttachable){\n            ((AppenderAttachable)appender).doAppend(event);\n        }\n    }\n    return 0;\n}"]}
{"_id": "6367670c1a6d9265ec017a2a", "generate_results": ["public static int[] toPrimitive(final Integer[] array){\n    if(array == null) return null;\n    if(array.length == 0) return EMPTY_INT_ARRAY;\n    final int[] result = new int[array.length];\n    for(int i = 0; i < array.length; i++){\n        result[i] = array[i].intValue();\n    }\n    return result;\n}"]}
{"_id": "636767041a6d9265ec017911", "generate_results": ["static void register(Object value){\n    if(value != null){\n        REGISTRY.set(value);\n    }\n}"]}
{"_id": "636767511a6d9265ec017eb0", "generate_results": ["public int nonZeros(int row){\n    if(row < 0 || row >= this.rows()){\n        throw new IllegalArgumentException(\"row must be between 0 and \" + (this.rows() - 1));\n    }\n    return this.rowOffsets[row + 1] - this.rowOffsets[row];\n}"]}
{"_id": "6367676c1a6d9265ec018223", "generate_results": ["public static boolean containsInstance(Collection collection,Object element){\n    return collection.contains(element);\n}"]}
{"_id": "636766fa1a6d9265ec01779d", "generate_results": ["public static boolean isAsciiControl(final char ch){\n    return (ch & 0x80) == 0;\n}"]}
{"_id": "6367670b1a6d9265ec0179f2", "generate_results": ["@Override public boolean containsKey(final Object key){\n    return map.containsKey(key);\n}"]}
{"_id": "636766fa1a6d9265ec017796", "generate_results": ["public static Boolean[] toObject(final boolean[] array){\n    if(array == null) return null;\n    final Boolean[] result = new Boolean[array.length];\n    for(int i=0;i<result.length;i++){\n        result[i] = array[i];\n    }\n    return result;\n}"]}
{"_id": "636767aa1a6d9265ec01864a", "generate_results": ["public byte[] toByteArray(){\nreturn this.bytes;\n}"]}
{"_id": "636767561a6d9265ec017f7c", "generate_results": ["protected GraphPath<V,E> edgeSetToTour(Set<E> tour,Graph<V,E> graph){\n    List<E> edges = new ArrayList<>(tour);\n    return new DefaultEdgeIterator<>(edges.iterator(),graph);\n}"]}
{"_id": "6367670a1a6d9265ec0179f1", "generate_results": ["public static Short[] toObject(final short[] array){\n    if(array == null) return null;\n    final Short[] result = new Short[array.length];\n    for(int i=0;i<result.length;i++){\n        result[i] = array[i];\n    }\n    return result;\n}"]}
{"_id": "636766fe1a6d9265ec017823", "generate_results": ["int addConstantNameAndType(final String name,final String descriptor){\n    int index = putConstantPool(new ConstantNameAndType(name,descriptor));\n    if(index == -1) throw new RuntimeException(\"Unable to find a free slot in the constant pool\");\n    return index;\n}"]}
{"_id": "636767461a6d9265ec017d17", "generate_results": ["private String unescapeId(String input){\n    if(input == null) return null;\n    StringBuilder sb = new StringBuilder();\n    for(int i=0;i<input.length();i++){\n        char c = input.charAt(i);\n        if(c=='\\\\'){\n            if(i+1 < input.length()){\n                c = input.charAt(i+1);\n                switch(c){\n                    case 'n':sb.append('\\n');break;\n                    case 't':sb.append('\\t');break;\n                    case 'r':sb.append('\\r');break;\n                    case '\"':sb.append('\"');break;\n                    case '\\\\':sb.append('\\\\');break;\n                    default:throw new IllegalArgumentException(\"Invalid escape sequence\");\n                }\n                i++;\n            }else{\n                throw new IllegalArgumentException(\"Invalid escape sequence\");\n            }\n        }else{\n            sb.append(c);\n        }\n    }\n    return sb.toString();\n}"]}
{"_id": "6367676c1a6d9265ec018204", "generate_results": ["public static String[] concatenateStringArrays(String[] array1,String[] array2){\n    if(array1==null) return array2;\n    if(array2==null) return array1;\n    int length = array1.length + array2.length;\n    String[] result = new String[length];\n    System.arraycopy(array1,0,result,0,array1.length);\n    System.arraycopy(array2,0,result,array1.length,array2.length);\n    return result;\n}"]}
{"_id": "636767641a6d9265ec018190", "generate_results": ["private void reload(List<Set<Integer>> bucketsByLabel,List<Integer> labels,int minLabel){\n    for(int i=0;i<bucketsByLabel.size();i++){\n        if(labels.get(i)==minLabel){\n            bucketsByLabel.set(i,new HashSet<>());\n        }\n    }\n}"]}
{"_id": "6367676a1a6d9265ec0181d4", "generate_results": ["public static String[] addStringToArray(String[] array,String str){\n    if(array==null) return new String[]{str};\n    int len = array.length;\n    String[] result = new String[len+1];\n    System.arraycopy(array,0,result,0,len);\n    result[len] = str;\n    return result;\n}"]}
{"_id": "6367676b1a6d9265ec0181dd", "generate_results": ["public static int countOccurrencesOf(String str,String sub){\n    if(str==null||sub==null) return 0;\n    int count=0;\n    for(int i=0;i<str.length()-sub.length()+1;i++){\n        if(str.substring(i,i+sub.length()).equals(sub)){\n            count++;\n        }\n    }\n    return count;\n}"]}
{"_id": "636766811a6d9265ec017499", "generate_results": ["private boolean checkDuplicate(final List<AtmosphereInterceptor> interceptorList,Class<? extends AtmosphereInterceptor> c){\n    for (final AtmosphereInterceptor interceptor : interceptorList) {\n        if (c.isAssignableFrom(interceptor.getClass())) {\n            return true;\n        }\n    }\n    return false;\n}"]}
{"_id": "636766fe1a6d9265ec017821", "generate_results": ["protected void appendDetail(StringBuffer buffer,String fieldName,byte[] array){\n    if (array == null) {\n        return;\n    }\n    buffer.append(fieldNameValueSeparator).append(\"[\").append(array.length).append(\"]\");\n    for (int i = 0; i < array.length; i++) {\n        buffer.append(fieldNameValueSeparator).append(array[i]);\n    }\n}"]}
{"_id": "636767561a6d9265ec017f63", "generate_results": ["@Override public boolean hasNext(){\n    if(vertices.isEmpty()){\n        return false;\n    }\n    return true;\n}"]}
{"_id": "636766a81a6d9265ec017586", "generate_results": ["private void pop(final int elements){\n    if(elements > 0){\n        for(int i = 0; i < elements; i++){\n            pop();\n        }\n    }\n}"]}
{"_id": "636767e11a6d9265ec018795", "generate_results": ["public boolean isCompatible(DataTable dataset){\n    if(dataset == null || dataset.getMetrics() == null || dataset.getMetrics().getBuckets() == null){\n        return false;\n    }\n    long[] existingBuckets = dataset.getMetrics().getBuckets();\n    if(existingBuckets.length != buckets.length){\n        return false;\n    }\n    for(int i=0;i<existingBuckets.length;i++){\n        if(existingBuckets[i] != buckets[i]){\n            return false;\n        }\n    }\n    return true;\n}"]}
{"_id": "636767791a6d9265ec018263", "generate_results": ["private Class findClass(final String className) throws ClassNotFoundException {\n    return Thread.currentThread().getContextClassLoader().loadClass(className);\n}"]}
{"_id": "636767611a6d9265ec018112", "generate_results": ["@Override protected V provideNextVertex(){\n    if (vertexQueue.isEmpty()){\n        return null;\n    }\n    V current = vertexQueue.poll();\n    for (E e : graph.outgoingEdgesOf(current)){\n        if (!visited.contains(e.getDestination())){\n            visited.add(e.getDestination());\n            vertexQueue.offer(e.getDestination());\n        }\n    }\n    return current;\n}"]}
{"_id": "636767131a6d9265ec017b23", "generate_results": ["final void addLineNumber(final int lineNumber){\n    if(lineNumber < 0) throw new IllegalArgumentException(\"lineNumber must be non-negative\");\n    if(this.lineNumbers == null) this.lineNumbers = new ArrayList<>();\n    this.lineNumbers.add(lineNumber);\n}"]}
{"_id": "6367675a1a6d9265ec018010", "generate_results": ["void removeSelf(){\n    if(prev != null){\n        prev.next = next;\n    }\n    if(next != null){\n        next.prev = prev;\n    }\n}"]}
{"_id": "636767dd1a6d9265ec0186f3", "generate_results": ["public void overrideName(String oldName,String newName){\n    if(columns==null||columns.length==0) return;\n    for(int i=0;i<columns.length;i++){\n        if(columns[i].equals(oldName)){\n            columns[i]=newName;\n        }\n    }\n}"]}
{"_id": "636767631a6d9265ec018171", "generate_results": ["private boolean unlink(ListNodeImpl<E> node){\n    if(node == null) throw new IllegalArgumentException(\"Null node\");\n    if(node.prev == null || node.next == null) throw new IllegalArgumentException(\"Invalid node\");\n    ListNodeImpl<E> prev = node.prev;\n    ListNodeImpl<E> next = node.next;\n    if(prev != null) prev.next = next;\n    if(next != null) next.prev = prev;\n    node.prev = null;\n    node.next = null;\n    node.value = null;\n    expectedModCount++;\n    return true;\n}"]}
{"_id": "636767de1a6d9265ec018726", "generate_results": ["public List<SequenceRange> buildSequenceRanges(){\n    if(minSequence==maxSequence){\n        return Collections.singletonList(new SequenceRange(minSequence,maxSequence));\n    }\n    int sequenceRangeBatchSize=SEQUENCE_RANGE_BATCH_SIZE;\n    int totalSequenceCount=(maxSequence-minSequence+1)/sequenceRangeBatchSize;\n    List<SequenceRange> sequenceRanges=new ArrayList<>();\n    for(int i=0;i<totalSequenceCount;i++){\n        int start=minSequence+i*sequenceRangeBatchSize;\n        int end=Math.min(start+sequenceRangeBatchSize-1,maxSequence);\n        sequenceRanges.add(new SequenceRange(start,end));\n    }\n    return sequenceRanges;\n}"]}
{"_id": "6367667c1a6d9265ec0173f7", "generate_results": ["public boolean hasBytes(){\n    if(dataBytes == null){\n        return false;\n    }\n    return true;\n}"]}
{"_id": "6367676c1a6d9265ec018220", "generate_results": ["public static String stripFilenameExtension(String path){\n    if(path == null) return null;\n    int i = path.lastIndexOf('.');\n    if(i > 0 && i < path.length() - 1)\n        return path.substring(0, i);\n    else\n        return path;\n}"]}
{"_id": "636766fe1a6d9265ec017838", "generate_results": ["public static char[] toPrimitive(final Character[] array){\n    if(array == null) {\n        return null;\n    }\n    if(array.length == 0) {\n        return ArrayUtils.EMPTY_CHAR_ARRAY;\n    }\n\n    final char[] result = new char[array.length];\n    for (int i = 0; i < array.length; i++) {\n        result[i] = array[i].charValue();\n    }\n    return result;\n}"]}
{"_id": "636766fa1a6d9265ec01779c", "generate_results": ["private String parseToken(final char[] terminators){\n    int pos = 0;\n    while (pos < this.token.length && !MimeUtility.isTerminator(this.token[pos], terminators)) {\n        pos++;\n    }\n    if (pos == this.token.length) {\n        return null;\n    } else {\n        return new String(this.token, 0, pos);\n    }\n}"]}
{"_id": "636767691a6d9265ec0181a7", "generate_results": ["public static String trimLeadingCharacter(String str,char leadingCharacter){\n    if(str==null||str.length()==0)return str;\n    int i=0;\n    while(i<str.length()&&str.charAt(i)==leadingCharacter)i++;\n    return i==str.length()?str:str.substring(i);\n}"]}
{"_id": "636767041a6d9265ec01790f", "generate_results": ["public static Integer[] toObject(final int[] array){\n    if(array == null || array.length == 0)\n        return new Integer[0];\n    Integer[] result = new Integer[array.length];\n    for(int i=0;i<array.length;i++)\n        result[i] = array[i];\n    return result;\n}"]}
{"_id": "636766fa1a6d9265ec0177a4", "generate_results": ["public static Double[] toObject(final double[] array){\n    if(array == null)\n        return null;\n\n    final Double[] result = new Double[array.length];\n    for(int i = 0; i < array.length; i++)\n        result[i] = array[i];\n\n    return result;\n}"]}
{"_id": "636767461a6d9265ec017d0e", "generate_results": ["private Pair<List<Integer>,Long> computeSuffixSum(List<Integer> bounds){\n    List<Integer> suffixSum = new ArrayList<>();\n    long sum = 0;\n    for(int i=bounds.size()-1;i>=0;i--){\n        sum += bounds.get(i);\n        suffixSum.add(sum);\n    }\n    return new Pair<>(suffixSum,sum);\n}"]}
{"_id": "636767491a6d9265ec017d90", "generate_results": ["public static final <V>void reverse(V[] arr,int from,int to){\n    if(from<0||to>=arr.length||from>to)\n        throw new IllegalArgumentException(\"Invalid range\");\n    for(int i=from,j=to;i<j;i++,j--)\n        swap(arr,i,j);\n}"]}
{"_id": "6367674a1a6d9265ec017da9", "generate_results": ["private void moveAllListNodes(DoublyLinkedList<E> list){\n    if(list == null) return;\n    ListNodeImpl<E> current = list.head;\n    while(current != null){\n        addListNode(current);\n        current = current.next;\n    }\n}"]}
{"_id": "636767151a6d9265ec017b6b", "generate_results": ["private static boolean startsWith(final String str,final String prefix,final boolean ignoreCase){\n    if(str==null||prefix==null)return false;\n    if(ignoreCase)str=str.toLowerCase();\n    return str.startsWith(prefix);\n}"]}
{"_id": "636766fe1a6d9265ec01781c", "generate_results": ["public static Character toCharacterObject(final char ch){\n    return new Character(ch);\n}"]}
{"_id": "636766fb1a6d9265ec0177c1", "generate_results": ["public static boolean isAsciiAlphaUpper(final char ch){\n    if((ch >= 'A') && (ch <= 'Z')){\n        return true;\n    }\n    return false;\n}"]}
{"_id": "636767781a6d9265ec018250", "generate_results": ["public int decide(LoggingEvent event){\n    if(event.getMessage().toString().contains(getStringToMatch())){\n        return getAcceptOnMatch() ? 1 : -1;\n    }\n    return 0;\n}"]}
{"_id": "636766861a6d9265ec017553", "generate_results": ["public final boolean isTemplateVariablePresent(String name){\n    if(name==null) throw new IllegalArgumentException(\"name cannot be null\");\n    if(templateVariables==null) return false;\n    for(int i=0;i<templateVariables.size();i++){\n        if(templateVariables.get(i).equalsIgnoreCase(name)) return true;\n    }\n    return false;\n}"]}
{"_id": "636767071a6d9265ec017962", "generate_results": ["public void putAllWriteable(BeanMap map){\n    // Iterate over the keys in the given map\n    for (String key : map.keySet()) {\n        // Get the corresponding method from the given map\n        Method method = map.get(key);\n        // Check if the method is writable\n        if (method != null && method.isWritable()) {\n            // Add the method to this map\n            put(key, method);\n        }\n    }\n}"]}
{"_id": "6367670a1a6d9265ec0179d9", "generate_results": ["public static int length(final String str){\n    if(str==null) return 0;\n    return str.length();\n}"]}
{"_id": "636767ab1a6d9265ec018676", "generate_results": ["private static boolean isHex(final char c){\n    return (c >= '0' && c <= '9') || (c >= 'a' && c <= 'f') || (c >= 'A' && c <= 'F');\n}"]}
{"_id": "636766f81a6d9265ec017748", "generate_results": ["public static String base64Decode(final String s){\n    if(s == null || s.length() == 0) {\n        return \"\";\n    }\n    byte[] bytes = Base64.getDecoder().decode(s);\n    return new String(bytes, StandardCharsets.UTF_8);\n}"]}
{"_id": "636766f11a6d9265ec017663", "generate_results": ["public static boolean isSameLength(final double[] array1,final double[] array2){\n    if(array1 == null && array2 == null) return true;\n    if(array1 != null && array2 != null) return array1.length == array2.length;\n    return false;\n}"]}
{"_id": "6367667d1a6d9265ec0173ff", "generate_results": ["public static Meteor lookup(HttpServletRequest r){\n    return new Meteor(r);\n}"]}
{"_id": "636767691a6d9265ec0181a6", "generate_results": ["public static String[] split(String toSplit,String delimiter){\n    if(toSplit==null||delimiter==null)\n        throw new IllegalArgumentException(\"toSplit and delimiter cannot be null\");\n    int index=toSplit.indexOf(delimiter);\n    if(index==-1)\n        return new String[]{toSplit};\n    else\n        return new String[]{toSplit.substring(0,index),toSplit.substring(index+delimiter.length())};\n}"]}
{"_id": "636767601a6d9265ec0180e2", "generate_results": ["private List<Pair<List<Pair<Integer,Integer>>,E>> computeGlobalSeparatorList(){\n    List<Pair<List<Pair<Integer,Integer>>,E>> result = new ArrayList<>();\n    for (Edge<E> edge : graph.edges()) {\n        if (!isCircle(edge)) {\n            List<Pair<Integer,Integer>> separators = getMinimalSeparators(neighborhoodSetOf(graph,edge));\n            result.add(new Pair<>(separators, edge));\n        }\n    }\n    return result;\n}"]}
{"_id": "636766f31a6d9265ec01768f", "generate_results": ["public static char[] clone(final char[] array){\n    if(array == null) return null;\n    final char[] result = new char[array.length];\n    System.arraycopy(array, 0, result, 0, array.length);\n    return result;\n}"]}
{"_id": "636766831a6d9265ec0174eb", "generate_results": ["private void addReverse(final File[] files){\n    if(files == null || files.length == 0) return;\n    Deque<File> stack = new LinkedList<>();\n    for(int i = files.length - 1; i >= 0; i--){\n        stack.push(files[i]);\n    }\n}"]}
{"_id": "636767841a6d9265ec0183ff", "generate_results": ["public static void selectRow(int row,JTable table,JScrollPane pane){\n    if(table!=null && pane!=null){\n        table.setRowSelectionInterval(row,row);\n        int index = table.getRowBounds(row).y;\n        pane.getViewport().setViewPosition(new Point(0,index));\n    }\n}"]}
{"_id": "636766a81a6d9265ec017596", "generate_results": ["public ByteVector putInt(final int intValue){\n    if (intValue < 0 || intValue > 0xFFFFFFFFL) {\n        throw new IllegalArgumentException(\"value must be between 0 and 0xFFFFFFFF\");\n    }\n    final int high = intValue >>> 24;\n    final int mid = intValue >>> 16 & 0xFF;\n    final int low = intValue >>> 8 & 0xFF;\n    final int low2 = intValue & 0xFF;\n    if (data.length < 4) {\n        enlarge(4);\n    }\n    data[0] = (byte) high;\n    data[1] = (byte) mid;\n    data[2] = (byte) low;\n    data[3] = (byte) low2;\n    return this;\n}"]}
{"_id": "636766fd1a6d9265ec017814", "generate_results": ["public static boolean arrayequals(byte[] a,byte[] b,int count){\n    if(a==null&&b==null)return true;\n    if(a==null||b==null)return false;\n    if(count!=a.length||count!=b.length)return false;\n    for(int i=0;i<count;i++){\n        if(a[i]!=b[i])return false;\n    }\n    return true;\n}"]}
{"_id": "636767861a6d9265ec018440", "generate_results": ["public void abbreviate(final int nameStart,final StringBuffer buf){\n    if(buf == null || buf.length() < 1) return;\n    final String name = buf.substring(nameStart).toString();\n    if(name == null || name.length() < 1) return;\n    final String[] parts = name.split(\"\\\\.\");\n    if(parts == null || parts.length < 1) return;\n    for(int i = 0; i < parts.length; i++){\n        if(i > 0) buf.append(\".\");\n        if(i >= count) break;\n        buf.append(parts[i]);\n    }\n}"]}
{"_id": "6367667d1a6d9265ec01741d", "generate_results": ["public static Type resolveBound(TypeVariable<?> typeVariable){\n    if(typeVariable.getUpperBounds().length==0){\n        return Unknown.class;\n    }\n    Type upperBound = typeVariable.getUpperBounds()[0];\n    if(upperBound instanceof ParameterizedType){\n        return resolveBound((ParameterizedType)upperBound,typeVariable);\n    }else if(upperBound instanceof WildcardType){\n        WildcardType wildcardType = (WildcardType)upperBound;\n        if(wildcardType.getLowerBounds().length>0){\n            return resolveBound(wildcardType.getLowerBounds()[0],typeVariable);\n        }else{\n            return resolveBound(wildcardType.getSuperclass(),typeVariable);\n        }\n    }else if(upperBound instanceof Class){\n        return upperBound;\n    }else{\n        throw new IllegalArgumentException(\"Unsupported upper bound type: \" + upperBound.getClass());\n    }\n}"]}
{"_id": "6367675f1a6d9265ec0180cf", "generate_results": ["private static <V,E>boolean isClique(Graph<V,E> graph,Set<V> vertices){\n    for(V v:vertices){\n        if(!graph.containsEdge(v,v)){\n            return false;\n        }\n    }\n    return true;\n}"]}
{"_id": "636767431a6d9265ec017c88", "generate_results": ["private List<Integer> computeLowerBounds(List<K> keys){\n    List<Integer> lowerBounds = new ArrayList<>();\n    for (K key : keys) {\n        int maxLowerBound = 0;\n        for (Function<K, Integer> lowerBound : lowerBounds) {\n            maxLowerBound = Math.max(maxLowerBound, lowerBound.apply(key));\n        }\n        lowerBounds.add(maxLowerBound);\n    }\n    return lowerBounds;\n}"]}
{"_id": "636766a91a6d9265ec0175c4", "generate_results": ["private void pop(final String descriptor){\n    if(descriptor.charAt(0)=='B'){\n        popByte();\n    }else if(descriptor.charAt(0)=='C'){\n        popChar();\n    }else if(descriptor.charAt(0)=='D'){\n        popDouble();\n    }else if(descriptor.charAt(0)=='F'){\n        popFloat();\n    }else if(descriptor.charAt(0)=='I'){\n        popInt();\n    }else if(descriptor.charAt(0)=='J'){\n        popLong();\n    }else if(descriptor.charAt(0)=='L'){\n        popLong();\n    }else if(descriptor.charAt(0)=='N'){\n        popNull();\n    }else if(descriptor.charAt(0)=='O'){\n        popObject();\n    }else if(descriptor.charAt(0)=='Z'){\n        popBoolean();\n    }\n}"]}
{"_id": "636766fb1a6d9265ec0177c3", "generate_results": ["public static boolean isAscii(final char ch){\n    return (ch & 0x80) == 0;\n}"]}
{"_id": "636767581a6d9265ec017fb4", "generate_results": ["private List<Integer> computeUpperBounds(List<K> keys){\n    if(keys==null||keys.isEmpty()){\n        throw new IllegalArgumentException(\"Keys cannot be null or empty\");\n    }\n    List<Integer> upperBounds = new ArrayList<>();\n    for(K key:keys){\n        Function<K,Integer> upperBound = upperBounds.get(key);\n        if(upperBound!=null){\n            upperBounds.add(upperBound.apply(key));\n        }else{\n            throw new IllegalStateException(\"No upper bound found for key \" + key);\n        }\n    }\n    return upperBounds;\n}"]}
{"_id": "636766801a6d9265ec017487", "generate_results": ["public static String encodeTemplateNames(String s){\n    if(s==null) return null;\n    StringBuilder sb=new StringBuilder();\n    for(int i=0;i<s.length();i++){\n        char c=s.charAt(i);\n        if(c=='{') sb.append(templateChar);\n        else if(c=='}') sb.append(templateChar);\n        else sb.append(c);\n    }\n    return sb.toString();\n}"]}
{"_id": "636767531a6d9265ec017ef1", "generate_results": ["public static boolean equals(Point2D p1,Point2D p2){\n    if(TOLERANCE_DOUBLE_COMPARATOR.compare(p1,p2)==0)\n        return true;\n    else\n        return false;\n}"]}
{"_id": "6367667c1a6d9265ec0173fb", "generate_results": ["@Override public AtmosphereResource addEventListener(AtmosphereResourceEventListener e){\n    if (e == null) {\n        throw new IllegalArgumentException(\"event listener cannot be null\");\n    }\n    if (!listeners.contains(e)) {\n        listeners.add(e);\n    }\n    return this;\n}"]}
{"_id": "636767691a6d9265ec0181ac", "generate_results": ["public static String applyRelativePath(String path,String relativePath){\n    if(path==null||relativePath==null)\n        throw new IllegalArgumentException(\"Both path and relativePath must not be null\");\n    if(relativePath.startsWith(FOLDER_SEPARATOR))\n        return path+relativePath.substring(FOLDER_SEPARATOR.length());\n    else\n        return path+FOLDER_SEPARATOR+relativePath;\n}"]}
{"_id": "636767021a6d9265ec0178bc", "generate_results": ["public static int indexOf(String str,String searchStr){\n    if(str==null||searchStr==null) return -1;\n    return str.indexOf(searchStr);\n}"]}
{"_id": "636766fc1a6d9265ec0177ef", "generate_results": ["static String[] toNoNullStringArray(Object[] array){\n    if(array.length==0){\n        throw new IllegalArgumentException(\"array length must greater than 0\");\n    }\n    ArrayList<String> list=new ArrayList<>();\n    for(int i=0;i<array.length;i++){\n        Object obj=array[i];\n        if(obj!=null){\n            list.add(obj.toString());\n        }\n    }\n    return list.toArray(new String[0]);\n}"]}
{"_id": "636767061a6d9265ec01794a", "generate_results": ["public static int indexOfExtension(String filename){\n    if(filename==null||filename.length()==0)return -1;\n    char[] chars=filename.toCharArray();\n    for(int i=chars.length-1;i>=0;i--){\n        if(chars[i]==EXTENSION_SEPARATOR){\n            if(i>0&&chars[i-1]=='\\\\'||i>0&&chars[i-1]=='/'){\n                continue;\n            }\n            return i;\n        }\n    }\n    return -1;\n}"]}
{"_id": "636767dd1a6d9265ec0186de", "generate_results": ["public boolean isExpired(long timestamp,long expiredThreshold){\n    long duration = timestamp - this.lastUpdateTimestamp;\n    return duration > expiredThreshold;\n}"]}
{"_id": "6367675d1a6d9265ec018082", "generate_results": ["Edge edgeToNext(){\nreturn null;\n}"]}
{"_id": "6367676b1a6d9265ec0181e9", "generate_results": ["public static boolean substringMatch(CharSequence str,int index,CharSequence substring){\n    if(str==null||substring==null)\n        throw new IllegalArgumentException(\"str and substring cannot be null\");\n    if(index<0||index>str.length())\n        throw new IndexOutOfBoundsException(\"Index out of bounds: \"+index);\n    int len=substring.length();\n    if(len==0)\n        return true;\n    for(int i=index;i<len+index;i++){\n        if(str.charAt(i)!=substring.charAt(i-index))\n            return false;\n    }\n    return true;\n}"]}
{"_id": "636767781a6d9265ec01823e", "generate_results": ["protected void append(LoggingEvent event){\n    try{\n        if(layout != null && !layout.ignoresThrowable()){\n            PrintWriter out = new PrintWriter(socket.getOutputStream());\n            String strRep = layout.format(event);\n            out.println(strRep);\n            out.close();\n        }\n    }catch(IOException e){\n        LogLog.error(\"Could not write log event\",e);\n    }\n}"]}
{"_id": "6367670b1a6d9265ec017a05", "generate_results": ["public static String toString(final char ch){\n    return new String(new char[]{ch});\n}"]}
{"_id": "636767a31a6d9265ec01854f", "generate_results": ["private void checkIfPackedField() throws IOException {\n    if (packedLimit > 0 && !isAtEnd()) {\n        int tag = readTag();\n        if ((tag & TAG_TYPE_MASK) == WIRETYPE_LENGTH_DELIMITED) {\n            if (currentLimit - bufferPos < 1) {\n                refillBuffer(true);\n            }\n            int length = readRawVarint32(buffer, bufferPos);\n            if (length <= 0 || length + bufferPos > currentLimit) {\n                throw new InvalidProtocolBufferException(\"LengthDelimited field was too short or too long\");\n            }\n            if (length > packedLimit) {\n                throw new InvalidProtocolBufferException(\"LengthDelimited field exceeds the packed limit\");\n            }\n            if (!isAtEnd()) {\n                skipField(tag);\n            }\n            bufferPos += length;\n            return;\n        } else if ((tag & TAG_TYPE_MASK) == WIRETYPE_END_GROUP) {\n            if (lastTag != tag) {\n                throw new InvalidProtocolBufferException(\"Unexpected end group tag\");\n            }\n            lastTag = 0;\n            return;\n        }\n    }\n}"]}
{"_id": "636767a81a6d9265ec0185fc", "generate_results": ["public int readTag() throws IOException {\n    return (lastTag = currentOffset()) >>> TAG_TYPE_BITS;\n}"]}
{"_id": "636766a81a6d9265ec017595", "generate_results": ["final ByteVector put11(final int byteValue1,final int byteValue2){\n    if (this.data.length < this.size + 2) {\n        this.enlarge(2);\n    }\n    this.data[this.size++] = (byte) byteValue1;\n    this.data[this.size++] = (byte) byteValue2;\n    return this;\n}"]}
{"_id": "636766ae1a6d9265ec0175d8", "generate_results": ["private String buildContentRange(){\n    if(limit==0){\n        return \"bytes 0-\"+(count-1)+\"/\"+count;\n    }else{\n        return \"bytes \"+offset+\"-\"+limit+\"/\"+count;\n    }\n}"]}
{"_id": "636767e11a6d9265ec018790", "generate_results": ["public static List<ThreadSnapshot> parseFromFileWithTimeRange(File file,List<ProfileAnalyzeTimeRange> timeRanges) throws IOException {\n    // Create a new instance of ThreadSnapshotParser\n    ThreadSnapshotParser parser = new ThreadSnapshotParser();\n    \n    // Open a FileInputStream to read the file\n    FileInputStream fis = new FileInputStream(file);\n    \n    // Create a BufferedInputStream to improve performance\n    BufferedInputStream bis = new BufferedInputStream(fis);\n    \n    // Initialize an empty list to store the parsed thread snapshots\n    List<ThreadSnapshot> threadSnapshots = new ArrayList<>();\n    \n    // Loop through each time range\n    for (ProfileAnalyzeTimeRange timeRange : timeRanges) {\n        // Set the start and end times for the current time range\n        long startTime = timeRange.getStartTime();\n        long endTime = timeRange.getEndTime();\n        \n        // Parse the thread snapshots within the current time range\n        List<ThreadSnapshot> snapshotList = parser.parse(bis, startTime, endTime);\n        \n        // Add the parsed thread snapshots to the list\n        threadSnapshots.addAll(snapshotList);\n    }\n    \n    // Close the BufferedInputStream and FileInputStream\n    bis.close();\n    fis.close();\n    \n    // Return the list of parsed thread snapshots\n    return threadSnapshots;\n}"]}
