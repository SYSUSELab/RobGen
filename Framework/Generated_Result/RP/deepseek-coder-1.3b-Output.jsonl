{"_id": "6367676d1a6d9265ec018229", "generate_results": ["public static String[] trimArrayElements(String[] array){\n    String[] trimmedArray = new String[array.length];\n    for(int i=0; i<array.length; i++){\n        trimmedArray[i] = trimWhitespace(array[i]);\n    }\n    return trimmedArray;\n}"]}
{"_id": "6367670b1a6d9265ec017a00", "generate_results": ["public static boolean isSameLength(final byte[] array1,final byte[] array2){\n    if(array1 == null || array2 == null){\n        throw new IllegalArgumentException(\"Null arrays are not allowed\");\n    }\n    return array1.length == array2.length;\n}"]}
{"_id": "636766a91a6d9265ec0175c2", "generate_results": ["private int pop(){\n    int abstractType = outputStack[outputStackTop--];\n    return abstractType;\n}"]}
{"_id": "636767081a6d9265ec017989", "generate_results": ["public static boolean[] toPrimitive(final Boolean[] array){\n    if(array == null){\n        return EMPTY_BOOLEAN_ARRAY;\n    }\n    boolean[] primitiveArray = new boolean[array.length];\n    for(int i = 0; i < array.length; i++){\n        primitiveArray[i] = array[i];\n    }\n    return primitiveArray;\n}"]}
{"_id": "6367672d1a6d9265ec017c73", "generate_results": ["public boolean shouldPrintMessage(int timestamp,String message){\n    if(messages.containsKey(message)){\n        if(timestamp - messages.get(message) > 10){\n            messages.put(message, timestamp);\n            return true;\n        }\n        else{\n            return false;\n        }\n    }\n    else{\n        messages.put(message, timestamp);\n        return true;\n    }\n}"]}
{"_id": "636766f81a6d9265ec01775c", "generate_results": ["public static String toString(Object obj){\n    return obj == null ? \"\" : obj.toString();\n}"]}
{"_id": "6367667f1a6d9265ec017457", "generate_results": ["private static int decodeOctets(int i,ByteBuffer bb,StringBuilder sb){\n    int start = bb.position();\n    bb.position(i);\n    int octet = bb.get();\n    bb.position(start);\n    if((octet & 0x80) == 0){\n        sb.append((char)octet);\n    }else if((octet & 0xE0) == 0xC0){\n        sb.append((char)((octet & 0x1F) << 2));\n        octet = bb.get();\n        sb.append((char)((octet & 0xC3) << 2));\n    }else if((octet & 0xF0) == 0xE0){\n        sb.append((char)((octet & 0xF) << 3));\n        octet = bb.get();\n        sb.append((char)((octet & 0x1F) << 2));\n        octet = bb.get();\n        sb.append((char)((octet & 0xC3) << 2));\n    }else if((octet & 0xF8) == 0xF0){\n        sb.append((char)((octet & 0x7) << 3));\n        octet = bb.get();\n        sb.append((char)((octet & 0x1F) << 2));\n        octet = bb.get();\n        sb.append((char)((octet & 0xC3) << 2));\n        octet = bb.get();\n        sb.append((char)((octet & 0xC3) << 2));\n    }else{\n        sb.append((char)((octet & 0x3) << 3));\n        octet = bb.get();\n        sb.append((char)((octet & 0x1F) << 2));\n        octet = bb.get();\n        sb.append((char)((octet & 0xC3) << 2));\n        octet = bb.get();\n        sb.append((char)((octet & 0xC3) << 2));\n        octet = bb.get();\n        sb.append((char)((octet & 0xC3) << 2));\n    }\n    return bb.position();\n}"]}
{"_id": "636766aa1a6d9265ec0175ce", "generate_results": ["int visitFrameStart(final int offset,final int numLocal,final int numStack){\n    currentFrame = new int[3];\n    currentFrame[0] = offset;\n    currentFrame[1] = numLocal;\n    currentFrame[2] = numStack;\n    return 3;\n}"]}
{"_id": "636767191a6d9265ec017c0f", "generate_results": ["private void enlarge(final int size){\n    byte[] newData = new byte[data.length + size];\n    System.arraycopy(data, 0, newData, 0, data.length);\n    data = newData;\n}"]}
{"_id": "636767821a6d9265ec0183a0", "generate_results": ["protected static void deleteFile(String fileName){\n    File file = new File(fileName);\n    if(file.exists()){\n        file.delete();\n    }\n}"]}
{"_id": "636767691a6d9265ec0181aa", "generate_results": ["public static int nullSafeHashCode(long[] array){\n    int hash = INITIAL_HASH;\n    for(long l : array){\n        hash = (hash * MULTIPLIER) + (int)l;\n    }\n    return hash;\n}"]}
{"_id": "636767441a6d9265ec017cc1", "generate_results": ["private TreeNode<T> rotateRight(TreeNode<T> node){\n    TreeNode<T> temp = node.left;\n    node.left = temp.right;\n    temp.right = node;\n    node.parent = temp;\n    temp.parent = node;\n    return temp;\n}"]}
{"_id": "6367667f1a6d9265ec01745c", "generate_results": ["@SuppressWarnings(\"unchecked\") public static void addToClassPath(Vector<URL> cpV,String dir){\n    try{\n        File file = new File(dir);\n        File[] files = file.listFiles(new FilenameFilter(){\n            public boolean accept(File dir,String name){\n                return name.endsWith(\".jar\");\n            }\n        });\n        if(files != null){\n            for(int i = 0; i < files.length; i++){\n                cpV.add(files[i].toURI().toURL());\n            }\n        }\n    }catch(MalformedURLException e){\n        logger.error(\"Malformed URL Exception: \" + e.getMessage());\n    }catch(IOException e){\n        logger.error(\"IOException: \" + e.getMessage());\n    }\n}"]}
{"_id": "6367677e1a6d9265ec01830f", "generate_results": ["public String format(LoggingEvent event){\n    synchronized (this) {\n        if (pattern == null) {\n            pattern = DEFAULT_CONVERSION_PATTERN;\n        }\n        PatternParser pp = createPatternParser(pattern);\n        if (pp == null) {\n            return \"\";\n        }\n        StringBuffer buf = sbuf;\n        if (buf == null) {\n            buf = new StringBuffer();\n            sbuf = buf;\n        }\n        buf.setLength(0);\n        try {\n            pp.parse(buf, event);\n        } catch (PatternConverterNotFoundException e) {\n            return buf.toString();\n        } catch (PatternParseException e) {\n            return buf.toString();\n        }\n        return buf.toString();\n    }\n}"]}
{"_id": "636767031a6d9265ec0178dd", "generate_results": ["public long contentLength(){\n    try{\n        return Long.parseLong(request.getHeader(\"Content-Length\"));\n    }catch(NumberFormatException e){\n        return -1;\n    }\n}"]}
{"_id": "636766f11a6d9265ec017658", "generate_results": ["public static int indexOfLastSeparator(String filename){\n    int lastUnixSeparator = filename.lastIndexOf(UNIX_SEPARATOR);\n    int lastWindowsSeparator = filename.lastIndexOf(WINDOWS_SEPARATOR);\n    return Math.max(lastUnixSeparator, lastWindowsSeparator);\n}"]}
{"_id": "636767121a6d9265ec017b0a", "generate_results": ["private int parseEndOfLine(String headerPart,int end){\n    //TODO: Implement this method\n}"]}
{"_id": "636766f61a6d9265ec017701", "generate_results": ["public static int lastIndexOf(String str,String searchStr){\n    if(str == null || searchStr == null){\n        throw new IllegalArgumentException(\"Null arguments are not allowed\");\n    }\n    int lastIndex = str.lastIndexOf(searchStr);\n    if(lastIndex == -1){\n        return INDEXNOTFOUND;\n    }\n    return lastIndex;\n}"]}
{"_id": "6367670b1a6d9265ec0179fe", "generate_results": ["@Override public void write(byte b[]) throws IOException {\n    if (b == null) {\n        throw new NullPointerException();\n    }\n    checkThreshold(b.length);\n    out.write(b);\n    written += b.length;\n}"]}
{"_id": "636767df1a6d9265ec01873c", "generate_results": ["public String id(String entityId){\n    try{\n        if(entityId == null || entityId.isEmpty()){\n            throw new IllegalArgumentException(\"Entity id cannot be null or empty\");\n        }\n        return entityId + Const.ID_CONNECTOR + point;\n    }catch(IllegalArgumentException e){\n        //Handle the exception here\n        System.out.println(e.getMessage());\n    }\n    return null;\n}"]}
{"_id": "636766f91a6d9265ec01777f", "generate_results": ["public static boolean toBoolean(Boolean bool){\n    return bool != null ? bool.booleanValue() : false;\n}"]}
{"_id": "6367675f1a6d9265ec0180d3", "generate_results": ["public static <V,E>IsomorphicGraphMapping<V,E> identity(Graph<V,E> graph){\n    Map<V,V> forwardMapping = new HashMap<>();\n    Map<V,V> backwardMapping = new HashMap<>();\n    int i = 0;\n    for(V v : graph.getVertexSet()){\n        forwardMapping.put(v,i);\n        backwardMapping.put(i,v);\n        i++;\n    }\n    return new IsomorphicGraphMapping<>(forwardMapping,backwardMapping,graph,graph);\n}"]}
{"_id": "636766fe1a6d9265ec017833", "generate_results": ["public static void forceDeleteOnExit(File file) throws IOException {\n    if (file.exists()) {\n        if (file.isDirectory()) {\n            deleteDirectoryOnExit(file);\n        } else {\n            file.delete();\n        }\n    }\n}"]}
{"_id": "636767791a6d9265ec018257", "generate_results": ["public void addMessage(final LogRecord lr){\n    SwingUtilities.invokeLater(new Runnable() {\n        public void run() {\n            _table.addMessage(lr);\n        }\n    });\n}"]}
{"_id": "636767641a6d9265ec01817d", "generate_results": ["@Override public void generateGraph(Graph<V,E> target,Map<String,V> resultMap){\n    //Check if the partitions are valid\n    if(partitionA.size() != sizeA || partitionB.size() != sizeB){\n        throw new IllegalArgumentException(\"Invalid partition sizes\");\n    }\n    //Create a new graph\n    target.addVertex(resultMap.get(\"A\"+i));\n    target.addVertex(resultMap.get(\"B\"+i));\n    target.addEdge(resultMap.get(\"A\"+i), resultMap.get(\"B\"+i));\n    i++;\n}"]}
{"_id": "636766ff1a6d9265ec017851", "generate_results": ["protected int findByte(byte value,int pos){\n    for(int i=pos;i<buffer.length;i++){\n        if(buffer[i]==value){\n            return i;\n        }\n    }\n    return -1;\n}"]}
{"_id": "636767a41a6d9265ec018582", "generate_results": ["public static <T>int writeDelimitedTo(OutputStream out,T message,Schema<T> schema,LinkedBuffer buffer) throws IOException {\n    ProtobufOutput protobufOutput = new ProtobufOutput(out,schema,buffer);\n    protobufOutput.writeMessage(message);\n    return protobufOutput.getWrittenBytes();\n}"]}
{"_id": "636767001a6d9265ec01787e", "generate_results": ["public String toString(){\n    //...\n}"]}
{"_id": "636767781a6d9265ec01823d", "generate_results": ["protected void subAppend(LoggingEvent event){\n    try{\n        if(dir == null){\n            throw new IllegalStateException(\"Directory not set\");\n        }\n        if(!dir.exists()){\n            throw new IllegalArgumentException(\"Directory does not exist\");\n        }\n        if(!dir.isDirectory()){\n            throw new IllegalArgumentException(\"Given path is not a directory\");\n        }\n        String message = this.getLayout().format(event);\n        File tempFile = new File(dir, \"tempFile.log\");\n        if(!tempFile.createNewFile()){\n            throw new RuntimeException(\"Failed to create temp file\");\n        }\n        Writer writer = new FileWriter(tempFile, true);\n        writer.write(message);\n        writer.close();\n    }catch(Exception e){\n        e.printStackTrace();\n    }\n}"]}
{"_id": "636766ef1a6d9265ec01761a", "generate_results": ["int addType(final String value){\n    //...\n}"]}
{"_id": "636766821a6d9265ec0174b6", "generate_results": ["public static Class<?>[] resolveArguments(Type genericType,Class<?> targetType){\n    if(genericType instanceof ParameterizedType){\n        ParameterizedType parameterizedType = (ParameterizedType) genericType;\n        Type[] actualTypeArguments = parameterizedType.getActualTypeArguments();\n        Map<TypeVariable<?>,Type> typeVariableMap = getTypeVariableMap(targetType);\n        if(typeVariableMap == null){\n            typeVariableMap = buildTypeVariableMap(actualTypeArguments, new HashMap<>());\n        }\n        Class<?>[] resolvedArguments = new Class[actualTypeArguments.length];\n        for(int i = 0; i < actualTypeArguments.length; i++){\n            resolvedArguments[i] = resolveArgument(actualTypeArguments[i], targetType);\n        }\n        return resolvedArguments;\n    }\n    return null;\n}"]}
{"_id": "636767e11a6d9265ec018781", "generate_results": ["@Override public void accept(final METRICS data){\n    if(buffer.containsKey(data.getId())){\n        METRICS existing = buffer.get(data.getId());\n        METRICS combined = combine(existing, data);\n        if(isAbandoned(combined)){\n            buffer.remove(data.getId());\n        }else{\n            buffer.put(data.getId(), combined);\n        }\n    }else{\n        buffer.put(data.getId(), data);\n    }\n}"]}
{"_id": "636767531a6d9265ec017efb", "generate_results": ["void insertBefore(Bucket bucket){\n    // Implementation here\n}"]}
{"_id": "636766f11a6d9265ec017641", "generate_results": ["@Override public int available() throws IOException {\n    if (index < buffer.length) {\n        return buffer.length - index;\n    } else {\n        return 0;\n    }\n}"]}
{"_id": "636767de1a6d9265ec018706", "generate_results": ["public Mappings diffStructure(String tableName,Mappings mappings){\n    Mappings result = new Mappings();\n    Map<String,Fields> structures = getMapping(tableName);\n    for(Map.Entry<String,Fields> entry : structures.entrySet()){\n        Fields inputFields = entry.getValue();\n        if(!containsAllFields(inputFields)){\n            appendNewFields(inputFields);\n        }\n    }\n    return result;\n}"]}
{"_id": "636767dd1a6d9265ec0186e5", "generate_results": ["public void addNewTarget(Channels channels,IConsumer consumer){\n    consumeTargets.add(new Group(channels,consumer));\n}"]}
{"_id": "636767871a6d9265ec01846d", "generate_results": ["public static void createConfigurationDirectory(){\n    String os = System.getProperty(\"os.name\");\n    if (os.startsWith(\"Windows\")) {\n        String dir = System.getProperty(\"user.home\") + \"\\\\lf5\";\n        new File(dir).mkdirs();\n    } else {\n        String dir = System.getProperty(\"user.home\") + \"/lf5\";\n        new File(dir).mkdirs();\n    }\n}"]}
{"_id": "636766f81a6d9265ec01775b", "generate_results": ["public long readLong(final int offset){\n    return (long)readInt(offset);\n}"]}
{"_id": "636767a51a6d9265ec01859d", "generate_results": ["public boolean equals(final byte[] data,int offset,final int len){\n    if (data == null) {\n        return false;\n    }\n    if (offset < 0 || len < 0 || offset + len > data.length) {\n        throw new IndexOutOfBoundsException();\n    }\n    if (this.data.length != data.length) {\n        return false;\n    }\n    for (int i = 0; i < len; i++) {\n        if (this.data[offset + i] != data[offset + i]) {\n            return false;\n        }\n    }\n    return true;\n}"]}
{"_id": "6367670b1a6d9265ec0179ff", "generate_results": ["public static Byte[] nullToEmpty(final Byte[] array){\n    return array == null || array.length == 0 ? EMPTY_BYTE_OBJECT_ARRAY : array;\n}"]}
{"_id": "6367677f1a6d9265ec018347", "generate_results": ["public synchronized void send(final String message){\n    if(message == null){\n        throw new IllegalArgumentException(\"Message cannot be null\");\n    }\n    Iterator iterator = connections.iterator();\n    while(iterator.hasNext()){\n        SocketHandler sh = (SocketHandler)iterator.next();\n        try{\n            PrintWriter out = sh.getWriter();\n            out.println(message);\n            out.flush();\n        }catch(IOException e){\n            LogLog.error(\"IOException in send: \" + e.getMessage());\n        }\n    }\n}"]}
{"_id": "6367670a1a6d9265ec0179e8", "generate_results": ["public static Boolean[] nullToEmpty(final Boolean[] array){\n    return array == null || array.length == 0 ? EMPTY_BOOLEAN_OBJECT_ARRAY : array;\n}"]}
{"_id": "6367677f1a6d9265ec01834b", "generate_results": ["public void put(LoggingEvent o){\n    if(isFull()){\n        resize(maxSize*2);\n    }\n    buf[(next+numElements)%maxSize] = o;\n    numElements++;\n}"]}
{"_id": "636767df1a6d9265ec018744", "generate_results": ["protected List<TimeRange> buildTimeRanges(long start,long end){\n    List<TimeRange> timeRanges = new ArrayList<>();\n    long currentStart = start;\n    while(currentStart <= end){\n        long currentEnd = Math.min(currentStart + FETCH_DATA_DURATION, end);\n        timeRanges.add(new TimeRange(currentStart, currentEnd));\n        currentStart = currentEnd + 1;\n    }\n    return timeRanges;\n}"]}
{"_id": "636767031a6d9265ec0178e6", "generate_results": ["public static byte[] toPrimitive(final Byte[] array){\n    if(array == null){\n        return null;\n    }\n    byte[] primitiveArray = new byte[array.length];\n    for(int i = 0; i < array.length; i++){\n        primitiveArray[i] = (byte) array[i];\n    }\n    return primitiveArray;\n}"]}
{"_id": "636767dc1a6d9265ec0186be", "generate_results": ["static long compressTimeBucket(long timeBucket,int dayStep){\n    long compressedTimeBucket = timeBucket - (timeBucket % (1000 * 60 * 60 * 24 * dayStep));\n    return compressedTimeBucket;\n}"]}
{"_id": "636767a41a6d9265ec01856c", "generate_results": ["public static int computeUTF8Size(final CharSequence str,final int index,final int len){\n    int size = 0;\n    int i = index;\n    while(i < len){\n        final char c = str.charAt(i);\n        if((c & 0x80) == 0){\n            size++;\n            i++;\n        }else if((c & 0xE0) == 0xC0){\n            size++;\n            i++;\n        }else if((c & 0xF0) == 0xE0){\n            size++;\n            i++;\n        }else if((c & 0xF8) == 0xF0){\n            size++;\n            i++;\n        }else{\n            throw new IllegalArgumentException(\"Invalid character: \" + c);\n        }\n    }\n    return size;\n}"]}
{"_id": "636766f01a6d9265ec017639", "generate_results": ["public static <T>List<T> asList(T[] a){\n    return a == null ? Collections.emptyList() : Arrays.asList(a);\n}"]}
{"_id": "6367672d1a6d9265ec017c74", "generate_results": ["public boolean remove(int val){\n    if(map.containsKey(val)){\n        int index = map.get(val);\n        int lastElement = values.get(values.size()-1);\n        values.set(index, lastElement);\n        map.put(lastElement, index);\n        values.remove(values.size()-1);\n        map.remove(val);\n        if(values.size()==0){\n            return false;\n        }\n        return true;\n    }\n    return false;\n}"]}
{"_id": "6367676b1a6d9265ec0181df", "generate_results": ["public static boolean startsWithIgnoreCase(String str,String prefix){\n    if(str == null || prefix == null){\n        throw new IllegalArgumentException(\"Both input strings must be provided\");\n    }\n    return str.toLowerCase(Locale.ROOT).startsWith(prefix.toLowerCase(Locale.ROOT));\n}"]}
{"_id": "6367674b1a6d9265ec017dc0", "generate_results": ["private Set<V> initVisibleVertices(){\n    Set<V> visibleVertices = new HashSet<V>();\n    for(E e : graph.getEdgeSet()){\n        V v1 = graph.getEdgeSource(e);\n        V v2 = graph.getEdgeTarget(e);\n        visibleVertices.add(v1);\n        visibleVertices.add(v2);\n    }\n    return visibleVertices;\n}"]}
{"_id": "636767001a6d9265ec017873", "generate_results": ["public static String reverse(final String str){\n    if(str == null){\n        throw new IllegalArgumentException(\"Input string cannot be null\");\n    }\n    return new StringBuilder(str).reverse().toString();\n}"]}
{"_id": "636766ff1a6d9265ec01783b", "generate_results": ["public static String sub(String str,int start,int end){\n    if(str == null){\n        throw new IllegalArgumentException(\"Input string cannot be null\");\n    }\n    if(start < 0 || end > str.length()){\n        throw new IllegalArgumentException(\"Invalid range for substring\");\n    }\n    return str.substring(start,end);\n}"]}
{"_id": "6367671a1a6d9265ec017c15", "generate_results": ["public ByteVector putByteArray(final byte[] byteArrayValue,final int byteOffset,final int byteLength){\n    if(byteArrayValue == null){\n        throw new IllegalArgumentException(\"byteArrayValue cannot be null\");\n    }\n    if(byteOffset < 0 || byteOffset > data.length){\n        throw new IllegalArgumentException(\"byteOffset must be between 0 and the length of the array\");\n    }\n    if(byteLength < 0 || byteLength > byteArrayValue.length - byteOffset){\n        throw new IllegalArgumentException(\"byteLength must be between 0 and the remaining length of the array after offset\");\n    }\n    if(byteLength + byteOffset > data.length){\n        enlarge(byteLength + byteOffset);\n    }\n    System.arraycopy(byteArrayValue,byteOffset,data,byteOffset + length,byteLength);\n    length += byteLength;\n    return this;\n}"]}
{"_id": "636766821a6d9265ec0174d2", "generate_results": ["public static AtmosphereRequest wrap(HttpServletRequest request){\n    return new AtmosphereRequest(request);\n}"]}
{"_id": "636767ab1a6d9265ec01867b", "generate_results": ["public static LinkedBuffer writeUTF8(final CharSequence str,final WriteSession session,final LinkedBuffer lb){\n    if(str == null){\n        throw new IllegalArgumentException(\"Input string cannot be null\");\n    }\n    final int len = str.length();\n    final byte[] buf = new byte[len];\n    for(int i = 0; i < len; i++){\n        final char c = str.charAt(i);\n        if(c < 128){\n            buf[i] = (byte) c;\n        }else if(c < 2048){\n            buf[i] = (byte)((c >> 6) | 192);\n            buf[i + 1] = (byte)((c & 63) | 128);\n            i++;\n        }else if(c < 65536){\n            buf[i] = (byte)((c >> 12) | 224);\n            buf[i + 1] = (byte)(((c >> 6) & 63) | 128);\n            buf[i + 2] = (byte)((c & 63) | 128);\n            i += 2;\n        }else{\n            buf[i] = (byte)((c >> 18) | 240);\n            buf[i + 1] = (byte)(((c >> 12) & 63) | 128);\n            buf[i + 2] = (byte)(((c >> 6) & 63) | 128);\n            buf[i + 3] = (byte)((c & 63) | 128);\n            i += 3;\n        }\n    }\n    return lb.putBytes(buf,0,len);\n}"]}
{"_id": "6367675c1a6d9265ec01805b", "generate_results": ["public void removeFromTreeEdgeList(){\n    //Check if the edge is in the current minus plus heap\n    if(currentMinusPlusHeap.contains(edge)){\n        currentMinusPlusHeap.remove(edge);\n    }\n    //Check if the edge is in the current plus minus heap\n    if(currentPlusMinusHeap.contains(edge)){\n        currentPlusMinusHeap.remove(edge);\n    }\n    //Check if the edge is in the plus plus heap\n    if(plusPlusHeap.contains(edge)){\n        plusPlusHeap.remove(edge);\n    }\n}"]}
{"_id": "636767791a6d9265ec01826d", "generate_results": ["public static String findAndSubst(String key,Properties props){\n    String value = props.getProperty(key);\n    if(value != null){\n        try{\n            value = substVars(value,props);\n        }catch(Exception e){\n            //Handle exception here\n        }\n    }\n    return value;\n}"]}
{"_id": "636767001a6d9265ec01787f", "generate_results": ["protected void appendDetail(StringBuffer buffer,String fieldName,int[] array){\n    if(array == null){\n        appendNullText(buffer,fieldName);\n        return;\n    }\n    appendArrayDetail(buffer,fieldName,array);\n}"]}
{"_id": "636766fe1a6d9265ec017834", "generate_results": ["public static String sessionId(){\n    HttpSession session = (HttpSession) Singleton.getInstance(HttpSession.class);\n    return session.getId();\n}"]}
{"_id": "636766ff1a6d9265ec01784b", "generate_results": ["public static boolean isDigits(String str){\n    return str.matches(\"\\\\d+\");\n}"]}
{"_id": "636766fc1a6d9265ec0177da", "generate_results": ["private static boolean isParameterSeparator(final char c){\n    return c == ',' || c == ':' || c == ';' || c == '(' || c == ')' || c == '<' || c == '>' || c == '=' || c == '~' || c == '`' || c == '@' || c == '#';\n}"]}
{"_id": "6367670c1a6d9265ec017a35", "generate_results": ["private static boolean endsWith(final String str,final String suffix,final boolean ignoreCase){\n    if(str == null || suffix == null){\n        throw new IllegalArgumentException(\"Null arguments not allowed\");\n    }\n    if(ignoreCase){\n        return str.equalsIgnoreCase(suffix);\n    }else{\n        return str.endsWith(suffix);\n    }\n}"]}
{"_id": "6367667f1a6d9265ec01745d", "generate_results": ["public static List<PathSegmentImpl> decodePath(URI u,boolean decode){\n    List<PathSegmentImpl> segments = new ArrayList<>();\n    String path = u.getPath();\n    if(decode){\n        String[] pathSegments = path.split(\"/\");\n        for(String segment : pathSegments){\n            segments.add(new PathSegmentImpl(segment,true));\n        }\n    }else{\n        segments.add(new PathSegmentImpl(path,false));\n    }\n    return segments;\n}"]}
{"_id": "636766f11a6d9265ec017651", "generate_results": ["public static Character[] nullToEmpty(final Character[] array){\n    if(array == null || array.length == 0){\n        return EMPTY_CHARACTER_OBJECT_ARRAY;\n    }\n    return array;\n}"]}
{"_id": "636767821a6d9265ec0183ab", "generate_results": ["public boolean hasThrown(){\n    return _thrown != null;\n}"]}
{"_id": "636767831a6d9265ec0183c9", "generate_results": ["public static String peek(){\n    if(stack.isEmpty()){\n        throw new RuntimeException(\"Stack is empty\");\n    }\n    return stack.peek();\n}"]}
{"_id": "636767de1a6d9265ec01871c", "generate_results": ["public void valueAccumulation(String key,Long value){\n    if(data.containsKey(key)){\n        data.put(key,data.get(key)+value);\n    }else{\n        data.put(key,value);\n    }\n}"]}
{"_id": "636766811a6d9265ec017496", "generate_results": ["public InputStream next() throws IOException {\n    if (!stack.isEmpty()) {\n        current = stack.pop();\n    } else {\n        current = null;\n    }\n    return current;\n}"]}
{"_id": "6367677e1a6d9265ec01832e", "generate_results": ["public Logger exists(String name){\n    if(ht.containsKey(name)){\n        return ht.get(name);\n    }\n    return null;\n}"]}
{"_id": "6367670a1a6d9265ec0179e7", "generate_results": ["public Converter lookup(final Class<?> clazz){\n    return converters.get(clazz);\n}"]}
{"_id": "636767a41a6d9265ec018572", "generate_results": ["public long readRawVarint64() throws IOException {\n    int result = 0;\n    int shift = 0;\n    while (true) {\n        byte b = input.readByte();\n        result |= (b & 0x7F) << shift;\n        shift += 7;\n        if ((b & 0x80) == 0) {\n            return result;\n        }\n    }\n}"]}
{"_id": "636767021a6d9265ec0178bb", "generate_results": ["public static Double[] nullToEmpty(final Double[] array){\n    if(array == null || array.length == 0){\n        return EMPTY_DOUBLE_OBJECT_ARRAY;\n    }\n    return array;\n}"]}
{"_id": "636767021a6d9265ec0178b2", "generate_results": ["private void pop(final String descriptor){\n    if(descriptor.startsWith(\"L\")){\n        //long\n        pop(1);\n    }else if(descriptor.startsWith(\"D\")){\n        //double\n        pop(1);\n    }else if(descriptor.startsWith(\"F\")){\n        //float\n        pop(1);\n    }else if(descriptor.startsWith(\"C\")){\n        //char\n        pop(1);\n    }else if(descriptor.startsWith(\"B\")){\n        //boolean\n        pop(1);\n    }else if(descriptor.startsWith(\"S\")){\n        //short\n        pop(1);\n    }else if(descriptor.startsWith(\"I\")){\n        //int\n        pop(1);\n    }else if(descriptor.startsWith(\"J\")){\n        //long\n        pop(1);\n    }else if(descriptor.startsWith(\"Z\")){\n        //void\n        pop(1);\n    }else if(descriptor.startsWith(\"V\")){\n        //void\n        pop(1);\n    }else if(descriptor.startsWith(\"N\")){\n        //null\n        pop(1);\n    }else if(descriptor.startsWith(\"L\")){\n        //long\n        pop(1);\n    }else if(descriptor.startsWith(\"[\")){\n        //array\n        pop(1);\n    }else if(descriptor.startsWith(\"(\")){\n        //object\n        pop(1);\n    }\n}"]}
{"_id": "636766f91a6d9265ec01776e", "generate_results": ["@Override public void write(final byte b[],final int off,final int len) throws IOException {\n    if(b == null) {\n        throw new NullPointerException();\n    }\n    if(off < 0 || len < 0 || off > b.length || len > b.length - off) {\n        throw new IndexOutOfBoundsException();\n    }\n    if(len == 0) {\n        return;\n    }\n    ensureOpen();\n    try {\n        writer.write(b, off, len);\n    } finally {\n        writer.flush();\n    }\n}"]}
{"_id": "636767551a6d9265ec017f3f", "generate_results": ["public static final <V>void swap(V[] arr,int i,int j){\n    V temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n}"]}
{"_id": "636766ae1a6d9265ec0175dc", "generate_results": ["public Boolean isPartialContentResponse(){\n    //TODO: Implement the logic to determine if the actual response is a Partial Content\n    return false;\n}"]}
{"_id": "636766f01a6d9265ec01762e", "generate_results": ["public static boolean isEmpty(final double[] array){\n    return (array == null || array.length == 0);\n}"]}
{"_id": "6367667e1a6d9265ec01743a", "generate_results": ["public long lastWriteTimeStampInMilliseconds(){\n    if(lastWrite == -1){\n        return -1;\n    }else{\n        return System.currentTimeMillis();\n    }\n}"]}
{"_id": "636767601a6d9265ec0180fd", "generate_results": ["protected void addToIndex(V sourceVertex,V targetVertex,E e){\n    touchingVerticesToEdgeMap.compute(new Pair<>(sourceVertex, targetVertex), (k,v) -> {\n        if(v == null){\n            v = new HashSet<>();\n        }\n        v.add(e);\n        return v;\n    });\n}"]}
{"_id": "636766821a6d9265ec0174c9", "generate_results": ["private static File[] classPath(){\n    return sun.misc.Launcher.loadClassPath().getFiles();\n}"]}
{"_id": "636767041a6d9265ec0178f8", "generate_results": ["private static String[] copyStrings(final String[] src){\n    if(src == null){\n        throw new IllegalArgumentException(\"Source array cannot be null\");\n    }\n    String[] dest = new String[src.length];\n    for(int i = 0; i < src.length; i++){\n        dest[i] = src[i].toLowerCase();\n    }\n    return dest;\n}"]}
{"_id": "636767521a6d9265ec017ecc", "generate_results": ["public static Pair<Box2D,Box2D> splitAlongXAxis(Box2D box){\n    if(box.getWidth()<=0 || box.getHeight()<=0){\n        throw new IllegalArgumentException(\"Box dimensions must be positive\");\n    }\n    double midX = box.getX() + box.getWidth()/2;\n    Box2D box1 = new Box2D(box.getX(), box.getY(), box.getWidth()/2, box.getHeight());\n    Box2D box2 = new Box2D(midX, box.getY(), box.getWidth()/2, box.getHeight());\n    return new Pair<>(box1, box2);\n}"]}
{"_id": "636766a91a6d9265ec0175c1", "generate_results": ["private void enlarge(final int size){\n    byte[] oldData = data;\n    data = new byte[length + size];\n    System.arraycopy(oldData, 0, data, 0, length);\n    length += size;\n}"]}
{"_id": "636767781a6d9265ec018238", "generate_results": ["public boolean isAttached(Appender appender){\n    for(AppenderAttachable appenderAttachable : appenderList){\n        if(appenderAttachable == appender){\n            return true;\n        }\n    }\n    return false;\n}"]}
{"_id": "6367674a1a6d9265ec017dab", "generate_results": ["@Override public int compare(Double o1,Double o2){\n    if(o1 == null){\n        return (o2 == null) ? 0 : -1;\n    }\n    if(o2 == null){\n        return 1;\n    }\n    double diff = o1 - o2;\n    if(Math.abs(diff) < epsilon){\n        return 0;\n    }\n    return Double.compare(o1, o2);\n}"]}
{"_id": "6367672d1a6d9265ec017c78", "generate_results": ["public boolean insert(int val){\n    if(map.containsKey(val)){\n        return false;\n    }\n    map.put(val, val);\n    values.add(val);\n    return true;\n}"]}
{"_id": "636767dc1a6d9265ec0186c6", "generate_results": ["private boolean containsAllFields(Fields fields){\n    return properties.entrySet().stream()\n            .allMatch(entry -> fields.contains(entry.getKey()));\n}"]}
{"_id": "636766821a6d9265ec0174bf", "generate_results": ["public static String capitalize(String name){\n    char[] chars = name.toCharArray();\n    chars[0] = Character.toUpperCase(chars[0]);\n    return new String(chars);\n}"]}
{"_id": "636767aa1a6d9265ec01865a", "generate_results": ["public static int writeTo(final DataOutput out,LinkedBuffer node) throws IOException {\n    if(node == null) {\n        throw new IllegalArgumentException(\"node cannot be null\");\n    }\n    if(node.buffer == null) {\n        throw new IllegalStateException(\"buffer is not allocated\");\n    }\n    if(node.offset < 0 || node.offset > node.buffer.length) {\n        throw new IllegalArgumentException(\"offset is out of bounds\");\n    }\n    if(node.start < 0 || node.start > node.buffer.length) {\n        throw new IllegalArgumentException(\"start is out of bounds\");\n    }\n    if(node.next == null) {\n        throw new IllegalStateException(\"next is not allocated\");\n    }\n    int bytesWritten = 0;\n    if(node.start < node.offset) {\n        int copyLength = Math.min(node.buffer.length - node.offset, node.buffer.length - node.start);\n        System.arraycopy(node.buffer, node.offset, node.buffer, node.start, copyLength);\n        bytesWritten += copyLength;\n        node.offset += copyLength;\n    }\n    if(node.offset < node.next.offset) {\n        int copyLength = Math.min(node.buffer.length - node.offset, node.next.offset - node.offset);\n        System.arraycopy(node.buffer, node.offset, node.buffer, node.start + bytesWritten, copyLength);\n        bytesWritten += copyLength;\n        node.offset += copyLength;\n    }\n    if(node.offset < node.next.offset + node.next.buffer.length) {\n        int copyLength = Math.min(node.buffer.length - node.offset, node.next.buffer.length - (node.offset - node.next.offset));\n        System.arraycopy(node.next.buffer, 0, node.buffer, node.start + bytesWritten, copyLength);\n        bytesWritten += copyLength;\n    }\n    return bytesWritten;\n}"]}
{"_id": "636766f21a6d9265ec017677", "generate_results": ["public static boolean isNotTrue(Boolean bool){\n    return !bool;\n}"]}
{"_id": "6367674f1a6d9265ec017e74", "generate_results": ["public String toString(){\n    StringBuilder sb = new StringBuilder();\n    sb.append(\"[\");\n    for(int i = 0; i < size(); i++){\n        sb.append(vs[i]);\n        if(i < size() - 1){\n            sb.append(\", \");\n        }\n    }\n    sb.append(\"]\");\n    return sb.toString();\n}"]}
{"_id": "6367675c1a6d9265ec018058", "generate_results": ["@SuppressWarnings(\"unchecked\") public static Supplier<String> createStringSupplier(int start){\n    return (Supplier<String>) OBJECT_SUPPLIER.get();\n}"]}
{"_id": "6367677b1a6d9265ec0182bd", "generate_results": ["public String format(final LoggingEvent event){\n    if(conversionPattern == null){\n        conversionPattern = DEFAULT_CONVERSION_PATTERN;\n    }\n    return PatternConverter.convert(event, conversionPattern);\n}"]}
{"_id": "636766ff1a6d9265ec017842", "generate_results": ["public static double[] toPrimitive(final Double[] array){\n    if(array.length == 0){\n        return EMPTY_DOUBLE_ARRAY;\n    }\n    double[] result = new double[array.length];\n    for(int i = 0; i < array.length; i++){\n        result[i] = array[i].doubleValue();\n    }\n    return result;\n}"]}
{"_id": "636766fa1a6d9265ec0177a9", "generate_results": ["private void addInitializedType(final int abstractType){\n    initializations[initializationCount++] = abstractType;\n}"]}
{"_id": "6367670a1a6d9265ec0179dc", "generate_results": ["private void putAbstractTypes(final int start,final int end){\n    for(int i = start; i <= end; i++){\n        currentFrame[i] = abstractTypes.get(i);\n    }\n}"]}
{"_id": "636766801a6d9265ec017482", "generate_results": ["public void readFrom(final InputStream in) throws IOException {\n    if (in == null) {\n        throw new IllegalArgumentException(\"InputStream must not be null\");\n    }\n    byte[] buffer = this.buffer;\n    int size = this.size;\n    int pointer = this.pointer;\n    int bytesRead = 0;\n    while (bytesRead < size && pointer < buffer.length) {\n        int numBytesToRead = Math.min(size - bytesRead, buffer.length - pointer);\n        int bytesReadThisTime = in.read(buffer, pointer, numBytesToRead);\n        if (bytesReadThisTime == -1) {\n            throw new EOFException(\"Unexpected EOF\");\n        }\n        bytesRead += bytesReadThisTime;\n        pointer += bytesReadThisTime;\n    }\n    this.pointer = pointer;\n    this.size = size - bytesRead;\n}"]}
{"_id": "6367670a1a6d9265ec0179d8", "generate_results": ["@Override public void write(final byte[] b) throws IOException {\n    if (b == null) {\n        throw new IllegalArgumentException(\"Byte array is null\");\n    }\n    if (writer == null) {\n        throw new IllegalStateException(\"Writer is not initialized\");\n    }\n    writer.write(b);\n}"]}
{"_id": "636766a81a6d9265ec01757b", "generate_results": ["@SuppressWarnings(\"unchecked\") public String toString(JSONWriter.Feature... features){\n    JSONWriter writer = new JSONWriter(features);\n    writer.write(this);\n    return writer.toString();\n}"]}
{"_id": "636767021a6d9265ec0178bf", "generate_results": ["@Override protected Object convertToType(final Class<?> type,final Object value) throws Exception {\n    if (value == null) {\n        return null;\n    }\n    if (type == String.class) {\n        return ((String) value).length() == 0 ? getDefaultType() : ((String) value).charAt(0);\n    }\n    if (type == Character.class) {\n        return (Character) value;\n    }\n    if (type == int.class) {\n        return Integer.parseInt(value.toString());\n    }\n    if (type == long.class) {\n        return Long.parseLong(value.toString());\n    }\n    if (type == float.class) {\n        return Float.parseFloat(value.toString());\n    }\n    if (type == double.class) {\n        return Double.parseDouble(value.toString());\n    }\n    throw new Exception(\"Unsupported type: \" + type);\n}"]}
{"_id": "6367670b1a6d9265ec017a0f", "generate_results": ["public static boolean containsAnyIgnoreCase(String str,List<String> searchStrArray){\n    for(String searchStr : searchStrArray){\n        if(containsIgnoreCase(str,searchStr)){\n            return true;\n        }\n    }\n    return false;\n}"]}
{"_id": "636766a81a6d9265ec01758e", "generate_results": ["public static int nextPrime(int desiredCapacity){\n    if(desiredCapacity < 0 || desiredCapacity >= primeCapacities.length){\n        throw new IllegalArgumentException(\"desiredCapacity is out of bounds\");\n    }\n    int nextPrime = primeCapacities[desiredCapacity];\n    return nextPrime;\n}"]}
{"_id": "6367670a1a6d9265ec0179cf", "generate_results": ["public static char toChar(final Character ch,final char defaultValue){\n    return (ch == null) ? defaultValue : ch;\n}"]}
{"_id": "6367676b1a6d9265ec0181e2", "generate_results": ["public static Object findFirstMatch(Collection source,Collection candidates){\n    Iterator iterator = candidates.iterator();\n    while(iterator.hasNext()){\n        Object element = iterator.next();\n        if(source.contains(element)){\n            return element;\n        }\n    }\n    return null;\n}"]}
{"_id": "6367676b1a6d9265ec0181ee", "generate_results": ["public static String trimTrailingWhitespace(String str){\n    return str == null ? null : str.trim().replaceAll(\"\\\\s+$\", \"\");\n}"]}
{"_id": "636767dc1a6d9265ec0186cb", "generate_results": ["public void init(){\n    File directory = new File(\"analyzeResult\");\n    if (!directory.exists()) {\n        directory.mkdirs();\n    }\n}"]}
{"_id": "636767a31a6d9265ec018552", "generate_results": ["@Override public String readString() throws IOException {\n    int length = readInt32();\n    byte[] bytes = new byte[length];\n    readBytes(ByteBuffer.wrap(bytes));\n    return new String(bytes, \"UTF-8\");\n}"]}
{"_id": "636767a61a6d9265ec0185b7", "generate_results": ["private static int digitValue(final char c){\n    if(c >= '0' && c <= '9'){\n        return c - '0';\n    }\n    throw new IllegalArgumentException(\"Invalid character: \" + c);\n}"]}
{"_id": "636767e01a6d9265ec018755", "generate_results": ["private Map<String,Object> buildContent(JsonObject jsonObject){\n    Map<String,Object> content = new HashMap<>();\n    content.put(\"msg_type\", \"text\");\n    content.put(\"text\", \"Alarm Message\");\n    content.put(\"content\", jsonObject.toString());\n    return content;\n}"]}
{"_id": "6367667f1a6d9265ec017458", "generate_results": ["public AtmosphereFramework removeAtmosphereHandler(String mapping){\n    //...\n}"]}
{"_id": "636767a21a6d9265ec018517", "generate_results": ["public final byte[] toByteArray(){\n    byte[] array = new byte[getSize()];\n    int offset = 0;\n    for(LinkedBuffer buffer : this){\n        System.arraycopy(buffer.getBuffer(),0,array,offset,buffer.getSize());\n        offset += buffer.getSize();\n    }\n    return array;\n}"]}
{"_id": "6367667d1a6d9265ec017401", "generate_results": ["public static String unescapeJava(String str) throws Exception {\n    if (str == null) {\n        return null;\n    }\n    StringBuilder out = new StringBuilder();\n    for (int i = 0; i < str.length(); i++) {\n        char c = str.charAt(i);\n        if (c == '\\\\') {\n            if (i + 1 < str.length()) {\n                char next = str.charAt(i + 1);\n                if (next == 'u') {\n                    out.append(Character.toChars(Integer.parseInt(str.substring(i + 2, i + 6), 16)));\n                    i += 6;\n                } else {\n                    switch (next) {\n                        case 'n':\n                            c = '\\n';\n                            break;\n                        case 't':\n                            c = '\\t';\n                            break;\n                        case 'r':\n                            c = '\\r';\n                            break;\n                        case 'f':\n                            c = '\\f';\n                            break;\n                        case 'b':\n                            c = '\\b';\n                            break;\n                        case '\\'':\n                            c = '\\'';\n                            break;\n                        case '\\\"':\n                            c = '\\\"';\n                            break;\n                        case '\\\\':\n                            c = '\\\\';\n                            break;\n                        default:\n                            throw new Exception(\"Invalid escape sequence: \\\\\" + next);\n                    }\n                    i++;\n                }\n            } else {\n                throw new Exception(\"Invalid escape sequence: \\\\\");\n            }\n        } else {\n            out.append(c);\n        }\n    }\n    return out.toString();\n}"]}
{"_id": "636766f01a6d9265ec01763e", "generate_results": ["private static String javaCharset(String charset){\n    return MIME2JAVA.get(charset);\n}"]}
{"_id": "6367676a1a6d9265ec0181bf", "generate_results": ["public static Object quoteIfString(Object obj){\n    if(obj instanceof String){\n        return \"\\\"\" + obj + \"\\\"\";\n    }\n    return obj;\n}"]}
{"_id": "636767501a6d9265ec017e86", "generate_results": ["@Override public ListNode<E> previousNode(){\n    if(previousIndex<0)\n        throw new IllegalStateException(\"No previous node\");\n    return getNode(previousIndex);\n}"]}
{"_id": "636766f21a6d9265ec017667", "generate_results": ["public short readShort(final int offset){\n    return (short) ((classFileBuffer[offset] & 0xFF) << 8 | (classFileBuffer[offset + 1] & 0xFF));\n}"]}
{"_id": "636767031a6d9265ec0178ef", "generate_results": ["private static Object copyArrayGrow1(final Object array,final Class<?> newArrayComponentType){\n    //validate input\n    if(array==null){\n        throw new IllegalArgumentException(\"Input array cannot be null\");\n    }\n    if(!(array instanceof Object[])){\n        throw new IllegalArgumentException(\"Input array must be an array of Objects\");\n    }\n    if(newArrayComponentType==null){\n        throw new IllegalArgumentException(\"New array component type cannot be null\");\n    }\n    //copy array\n    Object[] newArray = (Object[]) Array.newInstance(newArrayComponentType, ((Object[]) array).length + 1);\n    System.arraycopy(array, 0, newArray, 0, ((Object[]) array).length);\n    //add default value\n    newArray[newArray.length - 1] = null;\n    return newArray;\n}"]}
{"_id": "636767431a6d9265ec017c8d", "generate_results": ["private int computeBinaryLog(int n){\n    if(n <= 0){\n        throw new IllegalArgumentException(\"Input must be greater than zero\");\n    }\n    return (int)Math.floor(Math.log(n) / Math.log(2));\n}"]}
{"_id": "636767611a6d9265ec018116", "generate_results": ["private Set<V> intersection(Set<V> set1,Set<V> set2){\n    Set<V> intersection = new HashSet<>(set1);\n    intersection.retainAll(set2);\n    return intersection;\n}"]}
{"_id": "636766f71a6d9265ec017730", "generate_results": ["static String[] toNoNullStringArray(Collection<?> collection){\n    return (collection == null ? EMPTY_STRING_ARRAY : collection.toArray(new String[0]));\n}"]}
{"_id": "636767081a6d9265ec0179a2", "generate_results": ["private static boolean isAllZeros(String s){\n    return s.equals(\"0\");\n}"]}
{"_id": "636766821a6d9265ec0174b3", "generate_results": ["protected Object filter(Object msg){\n    //TODO: Implement your logic here\n    return null;\n}"]}
{"_id": "636767e01a6d9265ec018764", "generate_results": ["private JsonObject convertProperties(List<KeyStringValuePair> properties){\n    JsonObject jsonObject = new JsonObject();\n    for(KeyStringValuePair pair : properties){\n        jsonObject.addProperty(pair.getKey(),pair.getValue());\n    }\n    return jsonObject;\n}"]}
{"_id": "6367677e1a6d9265ec018314", "generate_results": ["protected int removeUnusedNodes(){\n    int removedNodes = 0;\n    ArrayList<CategoryNode> nodes = _categoryModel.getNodes();\n    for(Enumeration<CategoryNode> e = nodes.elements(); e.hasMoreElements();){\n        CategoryNode node = e.nextElement();\n        if(!node.isActive()){\n            removedNodes++;\n            _categoryModel.removeNode(node);\n        }\n    }\n    return removedNodes;\n}"]}
{"_id": "636766ff1a6d9265ec017853", "generate_results": ["protected Label readLabel(final int bytecodeOffset,final Label[] labels){\n    for (final Label label : labels) {\n        if (label.getLabelIndex() == bytecodeOffset) {\n            return label;\n        }\n    }\n    final Label newLabel = new Label();\n    newLabel.setLabelIndex(bytecodeOffset);\n    labels.add(newLabel);\n    return newLabel;\n}"]}
{"_id": "6367677d1a6d9265ec0182fd", "generate_results": ["public static boolean toBoolean(String value,boolean dEfault){\n    if(value==null)\n        return dEfault;\n    value=value.toLowerCase().trim();\n    if(value.equals(\"true\")||value.equals(\"yes\")||value.equals(\"1\"))\n        return true;\n    if(value.equals(\"false\")||value.equals(\"no\")||value.equals(\"0\"))\n        return false;\n    return dEfault;\n}"]}
{"_id": "6367676a1a6d9265ec0181cd", "generate_results": ["public static String trimLeadingWhitespace(String str){\n    int i = 0;\n    while(i < str.length() && Character.isWhitespace(str.charAt(i))){\n        i++;\n    }\n    return str.substring(i);\n}"]}
{"_id": "636766fe1a6d9265ec01782a", "generate_results": ["final String readUtf(final int constantPoolEntryIndex,final char[] charBuffer){\n    final int utfOffset = getUtf8Index(constantPoolEntryIndex);\n    final int utfLength = getUtf8Length(constantPoolEntryIndex);\n    readUTF8(utfOffset,charBuffer);\n    return new String(charBuffer,utfOffset,utfLength);\n}"]}
{"_id": "636766851a6d9265ec01751b", "generate_results": ["private static char decodeHexNibble(final char c){\n    if(c >= '0' && c <= '9'){\n        return (char)(c - '0');\n    }\n    if(c >= 'A' && c <= 'F'){\n        return (char)(c - 'A' + 10);\n    }\n    if(c >= 'a' && c <= 'f'){\n        return (char)(c - 'a' + 10);\n    }\n    throw new IllegalArgumentException(\"Invalid hexadecimal character: \" + c);\n}"]}
{"_id": "636766f21a6d9265ec01767d", "generate_results": ["public static String toString(Object object){\n    return object != null ? object.toString() : null;\n}"]}
{"_id": "636767581a6d9265ec017fc4", "generate_results": ["public static long factorial(int n){\n    if(n < 0){\n        throw new IllegalArgumentException(\"Number must be positive\");\n    }\n    long result = 1;\n    for(int i = 2; i <= n; i++){\n        result *= i;\n    }\n    return result;\n}"]}
{"_id": "636767511a6d9265ec017eb6", "generate_results": ["private OuterFaceCirculator selectOnOuterFace(Predicate<Node> predicate,Node start,Node stop,int dir){\n    // TODO: Implement this method\n    return null;\n}"]}
{"_id": "636767841a6d9265ec0183e8", "generate_results": ["public void add(LoggingEvent event){\n    if(numElems == maxSize){\n        resize(maxSize * 2);\n    }\n    ea[last] = event;\n    last = (last + 1) % maxSize;\n    numElems++;\n}"]}
{"_id": "636767a41a6d9265ec01857e", "generate_results": ["private static int compareSigned(long a,long b){\n    if(a > b) return 1;\n    else if(a < b) return -1;\n    else return 0;\n}"]}
{"_id": "636767691a6d9265ec0181ae", "generate_results": ["public static String[] toStringArray(Enumeration<String> enumeration){\n    List<String> list = new ArrayList<String>();\n    while(enumeration.hasMoreElements()){\n        list.add(enumeration.nextElement());\n    }\n    return list.toArray(new String[0]);\n}"]}
{"_id": "636766a91a6d9265ec0175ae", "generate_results": ["public ByteVector putByteArray(final byte[] byteArrayValue,final int byteOffset,final int byteLength){\n    if(byteArrayValue == null){\n        throw new IllegalArgumentException(\"byteArrayValue cannot be null\");\n    }\n    if(byteOffset < 0 || byteOffset > byteArrayValue.length){\n        throw new IllegalArgumentException(\"byteOffset must be between 0 and byteArrayValue.length\");\n    }\n    if(byteLength < 0 || byteLength > byteArrayValue.length - byteOffset){\n        throw new IllegalArgumentException(\"byteLength must be between 0 and byteArrayValue.length - byteOffset\");\n    }\n    for(int i=0;i<byteLength;i++){\n        putByte(byteArrayValue[byteOffset+i]);\n    }\n    return this;\n}"]}
{"_id": "636766f11a6d9265ec01764f", "generate_results": ["public Collection<Object> values(){\n    return Collections.unmodifiableList(new ArrayList<>(readMethods.values()));\n}"]}
{"_id": "636766f81a6d9265ec017758", "generate_results": ["@Override public int hashCode(){\n    int result = 17;\n    result = 31 * result + type.hashCode();\n    return result;\n}"]}
{"_id": "6367676c1a6d9265ec01820b", "generate_results": ["public static String deleteAny(String inString,String charsToDelete){\n    StringBuilder result = new StringBuilder();\n    for(char c : inString.toCharArray()){\n        if(!charsToDelete.contains(String.valueOf(c))){\n            result.append(c);\n        }\n    }\n    return result.toString();\n}"]}
{"_id": "636766861a6d9265ec01755a", "generate_results": ["public final MatchResult match(CharSequence uri){\n    if(uri == null){\n        throw new NullPointerException(\"uri is marked non-null but is Null\");\n    }\n    if(uri.length() == 0){\n        return EMPTY_STRING_MATCH_RESULT;\n    }\n    Matcher m = regexPattern.matcher(uri);\n    if(!m.matches()){\n        return null;\n    }\n    r = m.toMatchResult();\n    if(groupIndexes != null && groupIndexes.length > 0){\n        r = new GroupIndexMatchResult(r);\n    }\n    return r;\n}"]}
{"_id": "636766f91a6d9265ec01777d", "generate_results": ["public static byte convertHexDigit(byte b){\n    int nibble = b & 0xF;\n    if(nibble<10) return (byte)(nibble + '0');\n    return (byte)(nibble - 10 + 'A');\n}"]}
{"_id": "636766801a6d9265ec017477", "generate_results": ["private void addReverse(final InputStream[] files){\n    stack = new LinkedList<>();\n    for(int i = files.length - 1; i >= 0; i--){\n        stack.push(files[i]);\n    }\n    rootCount = stack.size();\n    current = stack.pop();\n}"]}
{"_id": "636767de1a6d9265ec01871e", "generate_results": ["private void check(String modelName) throws IllegalStateException {\n    if (modelName == null) {\n        throw new IllegalStateException(\"Model name cannot be null\");\n    }\n    // Continue with the rest of the code...\n}"]}
{"_id": "636766f81a6d9265ec01774b", "generate_results": ["public byte readByte() throws IOException {\n    if (this.closed) {\n        throw new IOException(\"Stream closed\");\n    }\n    if (this.bufSize <= 0) {\n        this.bufSize = this.input.read(this.buffer);\n        if (this.bufSize < 0) {\n            this.closed = true;\n            return -1;\n        }\n    }\n    this.bufSize -= 1;\n    return this.buffer[this.bufSize];\n}"]}
{"_id": "636766851a6d9265ec017515", "generate_results": ["@Override public Action inspect(AtmosphereResource r){\n    if(r.getTransport() == UNDEFINED){\n        throw new IllegalArgumentException(\"Transport is undefined\");\n    }\n    if(r.getTransport() == Transport.HTTP_SOCKET){\n        r.suspend();\n    }\n    return Action.RESUME;\n}"]}
{"_id": "636767611a6d9265ec018106", "generate_results": ["public double vertexWeight(Set<V> v){\n    double sum = 0;\n    for(DefaultWeightedEdge e : workingGraph.edgeSet()){\n        if(v.contains(workingGraph.getEdgeSource(e))){\n            sum += workingGraph.getEdgeWeight(e);\n        }\n    }\n    return sum;\n}"]}
{"_id": "636767841a6d9265ec0183f2", "generate_results": ["public int compare(Object aObj1,Object aObj2){\n    EventDetails aEvent1 = (EventDetails) aObj1;\n    EventDetails aEvent2 = (EventDetails) aObj2;\n    return aEvent1.getTimeStamp().compareTo(aEvent2.getTimeStamp());\n}"]}
{"_id": "636767861a6d9265ec01844c", "generate_results": ["public void removeAppender(String name){\n    if(appenderList != null){\n        for(Enumeration e = appenderList.elements(); e.hasMoreElements();){\n            Appender appender = (Appender) e.nextElement();\n            if(appender.getName().equals(name)){\n                appenderList.removeElement(appender);\n                break;\n            }\n        }\n    }\n}"]}
{"_id": "636767781a6d9265ec018242", "generate_results": ["public int appendLoopOnAppenders(LoggingEvent event){\n    int count = 0;\n    for(Enumeration e = appenderList.elements(); e.hasMoreElements();){\n        Appender appender = (Appender) e.nextElement();\n        try{\n            appender.doAppend(event);\n            count++;\n        }catch(Exception ex){\n            //Handle the exception\n        }\n    }\n    return count;\n}"]}
{"_id": "6367670c1a6d9265ec017a2a", "generate_results": ["public static int[] toPrimitive(final Integer[] array){\n    if(array == null){\n        return EMPTY_INT_ARRAY;\n    }\n    int[] primitiveArray = new int[array.length];\n    for(int i = 0; i < array.length; i++){\n        primitiveArray[i] = array[i].intValue();\n    }\n    return primitiveArray;\n}"]}
{"_id": "636767041a6d9265ec017911", "generate_results": ["static void register(Object value){\n    if(value != null){\n        getRegistry().register(value);\n    }\n}"]}
{"_id": "636767511a6d9265ec017eb0", "generate_results": ["public int nonZeros(int row){\n    if(row<0 || row>=rowOffsets.length){\n        throw new IllegalArgumentException(\"Row index out of bounds\");\n    }\n    return rowOffsets[row+1]-rowOffsets[row];\n}"]}
{"_id": "6367676c1a6d9265ec018223", "generate_results": ["public static boolean containsInstance(Collection collection,Object element){\n    return collection.contains(element);\n}"]}
{"_id": "636766fa1a6d9265ec01779d", "generate_results": ["public static boolean isAsciiControl(final char ch){\n    return (ch < 0x20) || (ch > 0x7E) && (ch < 0xA0);\n}"]}
{"_id": "6367670b1a6d9265ec0179f2", "generate_results": ["@Override public boolean containsKey(final Object key){\n    if(key == null){\n        throw new NullPointerException();\n    }\n    return map.containsKey(key);\n}"]}
{"_id": "636766fa1a6d9265ec017796", "generate_results": ["public static Boolean[] toObject(final boolean[] array){\n    if(array == null){\n        return null;\n    }\n    final Boolean[] result = new Boolean[array.length];\n    for(int i = 0; i < array.length; i++){\n        result[i] = array[i];\n    }\n    return result;\n}"]}
{"_id": "636767aa1a6d9265ec01864a", "generate_results": ["public byte[] toByteArray(){\n    byte[] bytes = new byte[size()];\n    copyFrom(bytes);\n    return bytes;\n}"]}
{"_id": "636767561a6d9265ec017f7c", "generate_results": ["protected GraphPath<V,E> edgeSetToTour(Set<E> tour,Graph<V,E> graph){\n    GraphPath<V,E> graphPath = new DefaultGraphPath<V,E>(graph);\n    for(E edge : tour){\n        if(!graph.containsEdge(edge)){\n            throw new IllegalArgumentException(\"Invalid edge in tour\");\n        }\n        graphPath.addEdge(edge);\n    }\n    return graphPath;\n}"]}
{"_id": "6367670a1a6d9265ec0179f1", "generate_results": ["public static Short[] toObject(final short[] array){\n    if(array == null){\n        return null;\n    }\n    Short[] result = new Short[array.length];\n    for(int i = 0; i < array.length; i++){\n        result[i] = Short.valueOf(array[i]);\n    }\n    return result;\n}"]}
{"_id": "636766fe1a6d9265ec017823", "generate_results": ["int addConstantNameAndType(final String name,final String descriptor){\n    //...\n}"]}
{"_id": "636767461a6d9265ec017d17", "generate_results": ["private String unescapeId(String input){\n    return unescapeHtmlString(input);\n}"]}
{"_id": "6367676c1a6d9265ec018204", "generate_results": ["public static String[] concatenateStringArrays(String[] array1,String[] array2){\n    List<String> list = new ArrayList<String>();\n    list.addAll(Arrays.asList(array1));\n    list.addAll(Arrays.asList(array2));\n    return list.toArray(new String[0]);\n}"]}
{"_id": "636767641a6d9265ec018190", "generate_results": ["private void reload(List<Set<Integer>> bucketsByLabel,List<Integer> labels,int minLabel){\n    for(int i=0;i<bucketsByLabel.size();i++){\n        if(bucketsByLabel.get(i).contains(minLabel)){\n            bucketsByLabel.get(i).remove(minLabel);\n            bucketsByLabel.get(0).addAll(bucketsByLabel.get(i));\n            labels.set(i,0);\n        }\n    }\n    bucketsByLabel.get(0).clear();\n}"]}
{"_id": "6367676a1a6d9265ec0181d4", "generate_results": ["public static String[] addStringToArray(String[] array,String str){\n    String[] newArray = new String[array.length + 1];\n    System.arraycopy(array, 0, newArray, 0, array.length);\n    newArray[newArray.length - 1] = str;\n    return newArray;\n}"]}
{"_id": "6367676b1a6d9265ec0181dd", "generate_results": ["public static int countOccurrencesOf(String str,String sub){\n    int count = 0;\n    int index = 0;\n    while(index != -1){\n        index = str.indexOf(sub,index);\n        if(index != -1){\n            count++;\n            index += sub.length();\n        }\n    }\n    return count;\n}"]}
{"_id": "636766811a6d9265ec017499", "generate_results": ["private boolean checkDuplicate(final List<AtmosphereInterceptor> interceptorList,Class<? extends AtmosphereInterceptor> c){\n    for(AtmosphereInterceptor interceptor : interceptorList){\n        if(interceptor.getClass().equals(c)){\n            return true;\n        }\n    }\n    return false;\n}"]}
{"_id": "636766fe1a6d9265ec017821", "generate_results": ["protected void appendDetail(StringBuffer buffer,String fieldName,byte[] array){\n    if(array == null){\n        appendNullText(buffer,fieldName);\n        return;\n    }\n    appendDetail(buffer,fieldName,array,isArrayContentDetail());\n}"]}
{"_id": "636767561a6d9265ec017f63", "generate_results": ["@Override public boolean hasNext(){\n    return !vertices.isEmpty();\n}"]}
{"_id": "636766a81a6d9265ec017586", "generate_results": ["private void pop(final int elements){\n    if(outputStackTop - outputStackStart < elements){\n        throw new RuntimeException(\"Pop operation failed. Stack underflow.\");\n    }\n    outputStackTop -= elements;\n}"]}
{"_id": "636767e11a6d9265ec018795", "generate_results": ["public boolean isCompatible(DataTable dataset){\n    if(dataset == null || dataset.getBuckets() == null || dataset.getValues() == null){\n        throw new IllegalArgumentException(\"Invalid dataset\");\n    }\n    if(buckets == null || values == null){\n        throw new IllegalArgumentException(\"Invalid parameters\");\n    }\n    if(buckets.length != values.length){\n        throw new IllegalArgumentException(\"Buckets and values length should be the same\");\n    }\n    for(int i=0;i<buckets.length;i++){\n        if(buckets[i] != dataset.getBuckets()[i]){\n            return false;\n        }\n    }\n    return true;\n}"]}
{"_id": "636767791a6d9265ec018263", "generate_results": ["private Class findClass(final String className) throws ClassNotFoundException {\n    Class clazz = Class.forName(className);\n    return clazz;\n}"]}
{"_id": "636767611a6d9265ec018112", "generate_results": ["@Override protected V provideNextVertex(){\n    if(graph.outgoingEdgesOf(v).isEmpty()){\n        return null;\n    }\n    V nextVertex = null;\n    for(E edge : graph.outgoingEdgesOf(v)){\n        nextVertex = graph.getEdgeTarget(edge);\n        if(!cycleSet.contains(nextVertex)){\n            cycleSet.add(nextVertex);\n            return nextVertex;\n        }\n    }\n    return null;\n}"]}
{"_id": "636767131a6d9265ec017b23", "generate_results": ["final void addLineNumber(final int lineNumber){\n    if(FLAG_DEBUG_ONLY){\n        if(lineNumber<0){\n            throw new IllegalArgumentException(\"Line number cannot be negative\");\n        }\n        if(lineNumber>LINE_NUMBERS_CAPACITY_INCREMENT){\n            int oldCapacity=LINE_NUMBERS_CAPACITY;\n            LINE_NUMBERS_CAPACITY=new int[lineNumber+LINE_NUMBERS_CAPACITY_INCREMENT];\n            System.arraycopy(LINE_NUMBERS,0,LINE_NUMBERS_CAPACITY,0,oldCapacity);\n        }\n        this.lineNumber=lineNumber;\n        LINE_NUMBERS[lineNumber]=this;\n    }\n}"]}
{"_id": "6367675a1a6d9265ec018010", "generate_results": ["void removeSelf(){\n    if(prev != null){\n        prev.next = next;\n    }\n    if(next != null){\n        next.prev = prev;\n    }\n}"]}
{"_id": "636767dd1a6d9265ec0186f3", "generate_results": ["public void overrideName(String oldName,String newName){\n    if(indices==null || indices.isEmpty()){\n        throw new IllegalStateException(\"Indices are not initialized\");\n    }\n    for(MultiColumnsIndex index:indices){\n        String[] columns = index.getColumns();\n        for(int i=0;i<columns.length;i++){\n            if(columns[i].equals(oldName)){\n                columns[i] = newName;\n            }\n        }\n        index.setColumns(columns);\n    }\n}"]}
{"_id": "636767631a6d9265ec018171", "generate_results": ["private boolean unlink(ListNodeImpl<E> node){\n    if(node == null || node.getNext() == node || node.getPrev() == node){\n        return false;\n    }\n    node.getPrev().setNext(node.getNext());\n    node.getNext().setPrev(node.getPrev());\n    node.setNext(null);\n    node.setPrev(null);\n    size--;\n    return true;\n}"]}
{"_id": "636767de1a6d9265ec018726", "generate_results": ["public List<SequenceRange> buildSequenceRanges(){\n    List<SequenceRange> sequenceRanges = new ArrayList<>();\n    int currentMinSequence = minSequence;\n    int currentMaxSequence = currentMinSequence + SEQUENCE_RANGE_BATCH_SIZE - 1;\n    while(currentMaxSequence <= maxSequence){\n        sequenceRanges.add(new SequenceRange(currentMinSequence,currentMaxSequence));\n        currentMinSequence += SEQUENCE_RANGE_BATCH_SIZE;\n        currentMaxSequence = currentMinSequence + SEQUENCE_RANGE_BATCH_SIZE - 1;\n    }\n    return sequenceRanges;\n}"]}
{"_id": "6367667c1a6d9265ec0173f7", "generate_results": ["public boolean hasBytes(){\n    return dataBytes != null;\n}"]}
{"_id": "6367676c1a6d9265ec018220", "generate_results": ["public static String stripFilenameExtension(String path){\n    int lastDot = path.lastIndexOf(\".\");\n    if (lastDot == -1) {\n        return path;\n    }\n    return path.substring(0, lastDot);\n}"]}
{"_id": "636766fe1a6d9265ec017838", "generate_results": ["public static char[] toPrimitive(final Character[] array){\n    if(array == null){\n        return EMPTY_CHAR_ARRAY;\n    }\n    char[] result = new char[array.length];\n    for(int i = 0; i < array.length; i++){\n        result[i] = array[i];\n    }\n    return result;\n}"]}
{"_id": "636766fa1a6d9265ec01779c", "generate_results": ["private String parseToken(final char[] terminators){\n    final StringBuilder token = new StringBuilder();\n    char ch;\n    while (true) {\n        ch = getChar();\n        if (isOneOf(ch, terminators)) {\n            break;\n        }\n        token.append(ch);\n    }\n    return token.toString();\n}"]}
{"_id": "636767691a6d9265ec0181a7", "generate_results": ["public static String trimLeadingCharacter(String str,char leadingCharacter){\n    int i = 0;\n    while(i < str.length() && str.charAt(i) == leadingCharacter){\n        i++;\n    }\n    return str.substring(i);\n}"]}
{"_id": "636767041a6d9265ec01790f", "generate_results": ["public static Integer[] toObject(final int[] array){\n    if(array == null){\n        return null;\n    }\n    Integer[] result = new Integer[array.length];\n    for(int i = 0; i < array.length; i++){\n        result[i] = Integer.valueOf(array[i]);\n    }\n    return result;\n}"]}
{"_id": "636766fa1a6d9265ec0177a4", "generate_results": ["public static Double[] toObject(final double[] array){\n    if(array == null){\n        throw new IllegalArgumentException(\"Input array cannot be null\");\n    }\n    Double[] result = new Double[array.length];\n    for(int i = 0; i < array.length; i++){\n        result[i] = Double.valueOf(array[i]);\n    }\n    return result;\n}"]}
{"_id": "636767461a6d9265ec017d0e", "generate_results": ["private Pair<List<Integer>,Long> computeSuffixSum(List<Integer> bounds){\n    List<Integer> suffixSum = new ArrayList<>();\n    long sum = 0;\n    for(int bound : bounds){\n        sum += bound;\n        suffixSum.add(sum);\n    }\n    return new Pair<>(suffixSum,sum);\n}"]}
{"_id": "636767491a6d9265ec017d90", "generate_results": ["public static final <V>void reverse(V[] arr,int from,int to){\n    V temp;\n    while(from<to){\n        temp=arr[from];\n        arr[from]=arr[to];\n        arr[to]=temp;\n        from++;\n        to--;\n    }\n}"]}
{"_id": "6367674a1a6d9265ec017da9", "generate_results": ["private void moveAllListNodes(DoublyLinkedList<E> list){\n    //initialize head and tail\n    head = new ListNodeImpl<>(list.getFirst());\n    tail = head;\n    //initialize nextIndex\n    nextIndex = 0;\n    //initialize expectedModCount\n    expectedModCount = 0;\n    //initialize value\n    value = list.getFirst();\n    //initialize list\n    list = new DoublyLinkedList<>();\n    //initialize next and prev\n    next = null;\n    prev = null;\n    //initialize last\n    last = null;\n    //initialize nextIndex\n    nextIndex = 0;\n    //initialize expectedModCount\n    expectedModCount = 0;\n    //initialize value\n    value = list.getFirst();\n    //initialize list\n    list = new DoublyLinkedList<>();\n    //initialize next and prev\n    next = null;\n    prev = null;\n    //initialize last\n    last = null;\n    //initialize nextIndex\n    nextIndex = 0;\n    //initialize expectedModCount\n    expectedModCount = 0;\n    //initialize value\n    value = list.getFirst();\n    //initialize list\n    list = new DoublyLinkedList<>();\n    //initialize next and prev\n    next = null;\n    prev = null;\n    //initialize last\n    last = null;\n    //initialize nextIndex\n    nextIndex = 0;\n    //initialize expectedModCount\n    expectedModCount = 0;\n    //initialize value\n    value = list.getFirst();\n    //initialize list\n    list = new DoublyLinkedList<>();\n    //initialize next and prev\n    next = null;\n    prev = null;\n    //initialize last\n    last = null;\n    //initialize nextIndex\n    nextIndex = 0;\n    //initialize expectedModCount\n    expectedModCount = 0;\n    //initialize value\n    value = list.getFirst();\n    //initialize list\n    list = new DoublyLinkedList<>();\n    //initialize next and prev\n    next = null;\n    prev = null;\n    //initialize last\n    last = null;\n    //initialize nextIndex\n    nextIndex = 0;\n    //initialize expectedModCount\n    expectedModCount = 0;\n    //initialize value\n    value = list.getFirst();\n    //initialize list\n    list = new DoublyLinkedList<>();\n    //initialize next and prev\n    next = null;\n    prev = null;\n    //initialize last\n    last = null;\n    //initialize nextIndex\n    nextIndex = 0;\n    //initialize expectedModCount\n    expectedModCount = 0;\n    //initialize value\n    value = list.getFirst();\n    //initialize list\n    list = new DoublyLinkedList<>();\n    //initialize next and prev\n    next = null;\n    prev = null;\n    //initialize last\n    last = null;\n    //initialize nextIndex\n    nextIndex = 0;\n    //initialize expectedModCount\n    expectedModCount = 0;\n    //initialize value\n    value = list.getFirst();\n    //initialize list\n    list = new DoublyLinkedList<>();\n    //initialize next and prev\n    next = null;\n    prev = null;\n    //initialize last\n    last = null;\n    //initialize nextIndex\n    nextIndex = 0;\n    //initialize expectedModCount\n    expectedModCount = 0;\n    //initialize value\n    value = list.getFirst();\n    //initialize list\n    list = new DoublyLinkedList<>();\n    //initialize next and prev\n    next = null;\n    prev = null;\n    //initialize last\n    last = null;\n    //initialize nextIndex\n    nextIndex = 0;\n    //initialize expectedModCount\n    expectedModCount = 0;\n    //initialize value\n    value = list.getFirst();\n    //initialize list\n    list = new DoublyLinkedList<>();\n    //initialize next and prev\n    next = null;\n    prev = null;\n    //initialize last\n    last = null;\n    //initialize nextIndex\n    nextIndex = 0;\n    //initialize expectedModCount\n    expectedModCount = 0;\n    //initialize value\n    value = list.getFirst();"]}
{"_id": "636767151a6d9265ec017b6b", "generate_results": ["private static boolean startsWith(final String str,final String prefix,final boolean ignoreCase){\n    if(str == null || prefix == null){\n        return str == null && prefix == null;\n    }\n    if(ignoreCase){\n        return str.regionMatches(true,0,prefix,0,prefix.length());\n    }\n    return str.startsWith(prefix);\n}"]}
{"_id": "636766fe1a6d9265ec01781c", "generate_results": ["public static Character toCharacterObject(final char ch){\n    return Character.valueOf(ch);\n}"]}
{"_id": "636766fb1a6d9265ec0177c1", "generate_results": ["public static boolean isAsciiAlphaUpper(final char ch){\n    return (ch >= 'A' && ch <= 'Z');\n}"]}
{"_id": "636767781a6d9265ec018250", "generate_results": ["public int decide(LoggingEvent event){\n    //get the message from the event\n    String message = event.getRenderedMessage();\n    //check if the message matches the string to match\n    if(message.matches(stringToMatch)){\n        //if it does, return 1\n        return 1;\n    }\n    //if it doesn't, return 0\n    return 0;\n}"]}
{"_id": "636766861a6d9265ec017553", "generate_results": ["public final boolean isTemplateVariablePresent(String name){\n    if(name == null){\n        throw new IllegalArgumentException(\"Name cannot be null\");\n    }\n    return templateVariables.contains(name);\n}"]}
{"_id": "636767071a6d9265ec017962", "generate_results": ["public void putAllWriteable(BeanMap map){\n    for(Map.Entry<String,Method> entry:map.entrySet()){\n        if(entry.getValue().getParameterTypes().length==1){\n            this.writeMethods.put(entry.getKey(),entry.getValue());\n        }\n    }\n}"]}
{"_id": "6367670a1a6d9265ec0179d9", "generate_results": ["public static int length(final String str){\n    return str == null ? 0 : str.length();\n}"]}
{"_id": "636767ab1a6d9265ec018676", "generate_results": ["private static boolean isHex(final char c){\n    return (c >= '0' && c <= '9') || (c >= 'a' && c <= 'f') || (c >= 'A' && c <= 'F');\n}"]}
{"_id": "636766f81a6d9265ec017748", "generate_results": ["public static String base64Decode(final String s){\n    Base64.Decoder decoder = Base64.getDecoder();\n    byte[] decodedBytes = decoder.decode(s);\n    return new String(decodedBytes, StandardCharsets.UTF_8);\n}"]}
{"_id": "636766f11a6d9265ec017663", "generate_results": ["public static boolean isSameLength(final double[] array1,final double[] array2){\n    if(array1 == null && array2 == null) return true;\n    if(array1 == null || array2 == null) return false;\n    return array1.length == array2.length;\n}"]}
{"_id": "6367667d1a6d9265ec0173ff", "generate_results": ["public static Meteor lookup(HttpServletRequest r){\n    //validate input\n    if(r==null) throw new IllegalArgumentException(\"Input cannot be null\");\n    //build Meteor object\n    Meteor meteor = new Meteor(r);\n    return meteor;\n}"]}
{"_id": "636767691a6d9265ec0181a6", "generate_results": ["public static String[] split(String toSplit,String delimiter){\n    int index = toSplit.indexOf(delimiter);\n    if(index == -1){\n        return new String[]{toSplit};\n    }\n    return new String[]{toSplit.substring(0,index),toSplit.substring(index+delimiter.length())};\n}"]}
{"_id": "636767601a6d9265ec0180e2", "generate_results": ["private List<Pair<List<Pair<Integer,Integer>>,E>> computeGlobalSeparatorList(){\n    List<Pair<List<Pair<Integer,Integer>>,E>> result = new ArrayList<>();\n    for(E edge: graph.edgeSet()){\n        if(!graph.isCircle(edge)){\n            List<Pair<Integer,Integer>> separators = new ArrayList<>();\n            for(V vertex: neighborhoodSetOf(graph,edge)){\n                Map<V,Integer> dfsMap = new HashMap<>();\n                List<Pair<V,V>> separator = getSeparator(graph,vertex,dfsMap);\n                separators.add(new Pair<>(separator,edge));\n            }\n            result.add(new Pair<>(separators,edge));\n        }\n    }\n    return result;\n}"]}
{"_id": "636766f31a6d9265ec01768f", "generate_results": ["public static char[] clone(final char[] array){\n    if(array == null){\n        return null;\n    }\n    return array.clone();\n}"]}
{"_id": "636766831a6d9265ec0174eb", "generate_results": ["private void addReverse(final File[] files){\n    stack = new LinkedList<>();\n    for(int i = files.length - 1; i >= 0; i--){\n        stack.push(files[i]);\n    }\n}"]}
{"_id": "636767841a6d9265ec0183ff", "generate_results": ["public static void selectRow(int row,JTable table,JScrollPane pane){\n    if(row<0 || row>=table.getRowCount()){\n        throw new IllegalArgumentException(\"Invalid row number\");\n    }\n    table.setRowSelectionInterval(row,row);\n    pane.setViewportView(table);\n}"]}
{"_id": "636766a81a6d9265ec017596", "generate_results": ["public ByteVector putInt(final int intValue){\n    byte[] bytes = new byte[4];\n    bytes[3] = (byte)((intValue >> 24) & 0xFF);\n    bytes[2] = (byte)((intValue >> 16) & 0xFF);\n    bytes[1] = (byte)((intValue >> 8) & 0xFF);\n    bytes[0] = (byte)(intValue & 0xFF);\n    this.putByteArray(bytes, 0, 4);\n    return this;\n}"]}
{"_id": "636766fd1a6d9265ec017814", "generate_results": ["public static boolean arrayequals(byte[] a,byte[] b,int count){\n    if(a.length != b.length)\n        return false;\n    for(int i=0;i<count;i++){\n        if(a[i] != b[i])\n            return false;\n    }\n    return true;\n}"]}
{"_id": "636767861a6d9265ec018440", "generate_results": ["public void abbreviate(final int nameStart,final StringBuffer buf){\n    if(nameStart<0 || nameStart>buf.length()){\n        throw new IllegalArgumentException(\"Invalid start position\");\n    }\n    int count=0;\n    int charCount=0;\n    char ellipsis='\u2026';\n    PatternAbbreviatorFragment[] fragments=new PatternAbbreviatorFragment[10];\n    for(int i=nameStart;i<buf.length();i++){\n        if(buf.charAt(i)=='.'){\n            count++;\n            if(count==1){\n                charCount=0;\n            }\n            if(count==2){\n                fragments[charCount]=new PatternAbbreviatorFragment(charCount,ellipsis);\n                charCount++;\n            }\n        }else{\n            if(count>0){\n                fragments[charCount]=new PatternAbbreviatorFragment(charCount,buf.charAt(i));\n                charCount++;\n            }\n        }\n        if(count==2){\n            break;\n        }\n    }\n    if(count==0){\n        throw new IllegalArgumentException(\"Invalid name\");\n    }\n    this.fragments=fragments;\n}"]}
{"_id": "6367667d1a6d9265ec01741d", "generate_results": ["public static Type resolveBound(TypeVariable<?> typeVariable){\n    if(cacheEnabled && typeVariableCache.containsKey(typeVariable.getType())){\n        Reference<Map<TypeVariable<?>,Type>> ref = typeVariableCache.get(typeVariable.getType());\n        if(ref != null && !ref.get().isEmpty()){\n            Type type = ref.get().get(typeVariable);\n            if(type != null){\n                return type;\n            }\n        }\n    }\n    Type bound = typeVariable.getUpperBound();\n    if(bound instanceof Class){\n        Class<?> clazz = (Class<?>) bound;\n        if(clazz.isInterface()){\n            return Unknown.class;\n        }\n        if(clazz.isArray()){\n            return Array.get(resolveBound(clazz.getComponentType()),0);\n        }\n        if(clazz.isPrimitive()){\n            return bound;\n        }\n        if(clazz.getDeclaredConstructors().length > 0){\n            return clazz;\n        }\n        if(clazz.getDeclaredMethods().length > 0){\n            return clazz;\n        }\n        if(clazz.getDeclaredFields().length > 0){\n            return clazz;\n        }\n    }\n    if(bound instanceof ParameterizedType){\n        ParameterizedType parameterizedType = (ParameterizedType) bound;\n        return resolveGenericType(parameterizedType.getOwnerType(),parameterizedType.getActualTypeArguments());\n    }\n    if(bound instanceof TypeVariable){\n        return resolveBound((TypeVariable<?>) bound);\n    }\n    return bound;\n}"]}
{"_id": "6367675f1a6d9265ec0180cf", "generate_results": ["private static <V,E>boolean isClique(Graph<V,E> graph,Set<V> vertices){\n    //check if the vertices are in the graph\n    for(V vertex : vertices){\n        if(!graph.containsVertex(vertex)){\n            throw new IllegalArgumentException(\"One or more vertices are not in the graph\");\n        }\n    }\n    //check if the vertices form a clique\n    return graph.vertexSet().size()>vertices.size() && graph.edgeSet().containsAll(new HashSet<>(vertices)) && graph.edgeSet().size()>vertices.size();\n}"]}
{"_id": "636767431a6d9265ec017c88", "generate_results": ["private List<Integer> computeLowerBounds(List<K> keys){\n    List<Integer> lowerBounds = new ArrayList<>();\n    for(K key : keys){\n        int lowerBound = lowerBounds.get(keys.indexOf(key));\n        lowerBounds.add(lowerBound);\n    }\n    return lowerBounds;\n}"]}
{"_id": "636766a91a6d9265ec0175c4", "generate_results": ["private void pop(final String descriptor){\n    if(descriptor.charAt(0) == 'B'){\n        pop(Integer.parseInt(descriptor.substring(1), 2));\n    }\n    else if(descriptor.charAt(0) == 'C'){\n        pop(Integer.parseInt(descriptor.substring(1), 2));\n    }\n    else if(descriptor.charAt(0) == 'D'){\n        pop(Double.parseDouble(descriptor.substring(1)));\n    }\n    else if(descriptor.charAt(0) == 'F'){\n        pop(Float.parseFloat(descriptor.substring(1)));\n    }\n    else if(descriptor.charAt(0) == 'J'){\n        pop(Long.parseLong(descriptor.substring(1)));\n    }\n    else if(descriptor.charAt(0) == 'S'){\n        pop(Short.parseShort(descriptor.substring(1)));\n    }\n    else if(descriptor.charAt(0) == 'I'){\n        pop(Integer.parseInt(descriptor.substring(1)));\n    }\n    else if(descriptor.charAt(0) == 'L'){\n        pop(Long.class.cast(descriptor.substring(1)));\n    }\n    else if(descriptor.charAt(0) == '[' || descriptor.charAt(0) == '('){\n        pop(Integer.parseInt(descriptor.substring(1, descriptor.length()-1)));\n    }\n    else if(descriptor.charAt(0) == 'L'){\n        pop(Long.class.cast(descriptor.substring(1, descriptor.length()-1)));\n    }\n    else if(descriptor.charAt(0) == 'D'){\n        pop(Double.class.cast(descriptor.substring(1)));\n    }\n    else if(descriptor.charAt(0) == 'F'){\n        pop(Float.class.cast(descriptor.substring(1)));\n    }\n    else if(descriptor.charAt(0) == 'C'){\n        pop(Character.class.cast(descriptor.substring(1)));\n    }\n    else if(descriptor.charAt(0) == 'B'){\n        pop(Byte.class.cast(descriptor.substring(1)));\n    }\n    else if(descriptor.charAt(0) == 'S'){\n        pop(Short.class.cast(descriptor.substring(1)));\n    }\n    else if(descriptor.charAt(0) == 'V'){\n        pop(Void.class);\n    }\n    else if(descriptor.charAt(0) == 'M'){\n        pop(Boolean.class.cast(descriptor.substring(1)));\n    }\n    else if(descriptor.charAt(0) == '[' || descriptor.charAt(0) == '('){\n        pop(Integer.parseInt(descriptor.substring(1, descriptor.length()-1)));\n    }\n    else if(descriptor.charAt(0) == 'L'){\n        pop(Long.class.cast(descriptor.substring(1, descriptor.length()-1)));\n    }\n    else if(descriptor.charAt(0) == 'D'){\n        pop(Double.class.cast(descriptor.substring(1)));\n    }\n    else if(descriptor.charAt(0) == 'F'){\n        pop(Float.class.cast(descriptor.substring(1)));\n    }\n    else if(descriptor.charAt(0) == 'C'){\n        pop(Character.class.cast(descriptor.substring(1)));\n    }\n    else if(descriptor.charAt(0) == 'B'){\n        pop(Byte.class.cast(descriptor.substring(1)));\n    }\n    else if(descriptor.charAt(0) == 'S'){\n        pop(Short.class.cast(descriptor.substring(1)));\n    }\n    else if(descriptor.charAt(0) == 'V'){\n        pop(Void.class);\n    }\n    else if(descriptor.charAt(0) == 'M'){\n        pop(Boolean.class.cast("]}
{"_id": "636766fb1a6d9265ec0177c3", "generate_results": ["public static boolean isAscii(final char ch){\n    return (ch >= 0 && ch <= 127);\n}"]}
{"_id": "636767581a6d9265ec017fb4", "generate_results": ["private List<Integer> computeUpperBounds(List<K> keys){\n    List<Integer> upperBounds = new ArrayList<>();\n    for(Function<K,Integer> bound : this.upperBounds){\n        upperBounds.add(bound.apply(keys));\n    }\n    return upperBounds;\n}"]}
{"_id": "636766801a6d9265ec017487", "generate_results": ["public static String encodeTemplateNames(String s){\n    return s.replace(\"{\", \"<\").replace(\"}\", \">\");\n}"]}
{"_id": "636767531a6d9265ec017ef1", "generate_results": ["public static boolean equals(Point2D p1,Point2D p2){\n    return TOLERANCE_DOUBLE_COMPARATOR.equals(p1, p2);\n}"]}
{"_id": "6367667c1a6d9265ec0173fb", "generate_results": ["@Override public AtmosphereResource addEventListener(AtmosphereResourceEventListener e){\n    listeners.add(e);\n    return this;\n}"]}
{"_id": "636767691a6d9265ec0181ac", "generate_results": ["public static String applyRelativePath(String path,String relativePath){\n    int lastSeparator = path.lastIndexOf(FOLDER_SEPARATOR);\n    if(lastSeparator == -1){\n        throw new IllegalArgumentException(\"Path does not contain a valid folder separator\");\n    }\n    String newPath = path.substring(0,lastSeparator) + FOLDER_SEPARATOR + relativePath;\n    return newPath;\n}"]}
{"_id": "636767021a6d9265ec0178bc", "generate_results": ["public static int indexOf(String str,String searchStr){\n    if(str == null || searchStr == null){\n        throw new IllegalArgumentException(\"Null argument is not allowed\");\n    }\n    int index = str.indexOf(searchStr);\n    if(index == -1){\n        throw new IllegalArgumentException(\"String does not contain the search string\");\n    }\n    return index;\n}"]}
{"_id": "636766fc1a6d9265ec0177ef", "generate_results": ["static String[] toNoNullStringArray(Object[] array){\n    if(array == null || array.length == 0){\n        throw new IllegalArgumentException(\"Array is null or empty\");\n    }\n    String[] result = new String[array.length];\n    for(int i = 0; i < array.length; i++){\n        if(array[i] != null){\n            result[i] = array[i].toString();\n        }\n    }\n    return result;\n}"]}
{"_id": "636767061a6d9265ec01794a", "generate_results": ["public static int indexOfExtension(String filename){\n    int lastIndex = filename.lastIndexOf(EXTENSION_SEPARATOR_STR);\n    if(lastIndex == -1){\n        return -1;\n    }\n    return lastIndex;\n}"]}
{"_id": "636767dd1a6d9265ec0186de", "generate_results": ["public boolean isExpired(long timestamp,long expiredThreshold){\n    long duration = timestamp - lastUpdateTimestamp;\n    return duration > expiredThreshold;\n}"]}
{"_id": "6367675d1a6d9265ec018082", "generate_results": ["Edge edgeToNext(){\n    //TODO: Implement this method\n}"]}
{"_id": "6367676b1a6d9265ec0181e9", "generate_results": ["public static boolean substringMatch(CharSequence str,int index,CharSequence substring){\n    if(str == null || index < 0 || index > str.length() - substring.length()){\n        throw new IllegalArgumentException(\"Invalid arguments\");\n    }\n    return str.subSequence(index, index + substring.length()).equals(substring);\n}"]}
{"_id": "636767781a6d9265ec01823e", "generate_results": ["protected void append(LoggingEvent event){\n    String message = event.getRenderedMessage();\n    if(layout.ignoresThrowable()){\n        send(message);\n    }else{\n        try{\n            send(message);\n        }catch(IOException e){\n            LogLog.error(\"IOException in SocketHandler.append: \" + e.getMessage());\n        }\n    }\n}"]}
{"_id": "6367670b1a6d9265ec017a05", "generate_results": ["public static String toString(final char ch){\n    return String.valueOf(ch);\n}"]}
{"_id": "636767a31a6d9265ec01854f", "generate_results": ["private void checkIfPackedField() throws IOException {\n    if (isAtEnd()) {\n        throw new IOException(\"Unexpected end of message\");\n    }\n    if (isCurrentFieldPacked()) {\n        readByteArray();\n    } else {\n        readFieldNumber(schema);\n    }\n}"]}
{"_id": "636767a81a6d9265ec0185fc", "generate_results": ["public int readTag() throws IOException {\n    int tag = this.readRawVarint32();\n    if (tag == 0) {\n        throw new IOException(\"Unexpected EOF\");\n    }\n    return tag;\n}"]}
{"_id": "636766a81a6d9265ec017595", "generate_results": ["final ByteVector put11(final int byteValue1,final int byteValue2){\n    if(byteValue1 > 255 || byteValue2 > 255){\n        throw new IllegalArgumentException(\"Byte values must be between 0 and 255\");\n    }\n    data = Arrays.copyOf(data, data.length + 2);\n    data[length++] = (byte) byteValue1;\n    data[length++] = (byte) byteValue2;\n    return this;\n}"]}
{"_id": "636766ae1a6d9265ec0175d8", "generate_results": ["private String buildContentRange(){\n    int count = this.objects.size();\n    int limit = this.paginationConfig.getLimit();\n    int offset = this.paginationConfig.getOffset();\n    String contentRange = count + \" \" + this.paginationConfig.getUnit() + \" \" + offset + \"-\" + ((limit == 0) ? (count-1) : (offset+limit-1));\n    return contentRange;\n}"]}
{"_id": "636767e11a6d9265ec018790", "generate_results": ["public static List<ThreadSnapshot> parseFromFileWithTimeRange(File file,List<ProfileAnalyzeTimeRange> timeRanges) throws IOException {\n    List<ThreadSnapshot> threadSnapshots = new ArrayList<>();\n    try (FileInputStream fis = new FileInputStream(file);\n         BufferedInputStream bis = new BufferedInputStream(fis)) {\n        ThreadSnapshot threadSnapshot = new ThreadSnapshot();\n        long lastEndTime = 0;\n        for (ProfileAnalyzeTimeRange range : timeRanges) {\n            long startTime = range.getStartTime();\n            long endTime = range.getEndTime();\n            long currentStartTime = lastEndTime;\n            while (currentStartTime < startTime) {\n                threadSnapshot = threadSnapshotQueryDAO.query(currentStartTime);\n                currentStartTime += threadSnapshot.getDuration();\n            }\n            long currentEndTime = Math.min(endTime, currentStartTime + threadSnapshot.getDuration());\n            while (currentStartTime < currentEndTime) {\n                threadSnapshots.add(threadSnapshot);\n                currentStartTime += threadSnapshot.getDuration();\n            }\n            lastEndTime = currentEndTime;\n        }\n    }\n    return threadSnapshots;\n}"]}
