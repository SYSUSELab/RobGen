{"_id": "6367676d1a6d9265ec018229", "generate_results": ["public static String[] trimArrayElements(String[] array){\n    if (array == null || array.length == 0) {\n        return array;\n    }\n    for (int i = 0; i < array.length; i++) {\n        String str = array[i];\n        if (str != null) {\n            array[i] = str.trim();\n        }\n    }\n    return array;\n}"]}
{"_id": "6367670b1a6d9265ec017a00", "generate_results": ["public static boolean isSameLength(final byte[] array1,final byte[] array2){\n    if(array1 == null || array2 == null){\n        return (array1 == null && array2 == null);\n    }\n    return array1.length == array2.length;\n}"]}
{"_id": "636766a91a6d9265ec0175c2", "generate_results": ["private int pop(){\n    if(outputStackTop == outputStackStart){\n        throw new IllegalStateException(\"Cannot pop from empty stack\");\n    }\n    return outputLocals[--outputStackTop];\n}"]}
{"_id": "636767081a6d9265ec017989", "generate_results": ["public static boolean[] toPrimitive(final Boolean[] array){\n    if(array == null) {\n        return null;\n    } else if (array.length == 0) {\n        return EMPTY_BOOLEAN_ARRAY;\n    }\n    final boolean[] result = new boolean[array.length];\n    for(int i = 0; i < array.length; i++) {\n        result[i] = array[i].booleanValue();\n    }\n    return result;\n}"]}
{"_id": "6367672d1a6d9265ec017c73", "generate_results": ["public boolean shouldPrintMessage(int timestamp,String message){\n    if(!messages.containsKey(message)){\n        messages.put(message,timestamp);\n        return true;\n    }else{\n        int lastTimestamp = messages.get(message);\n        if(timestamp - lastTimestamp >= 10){\n            messages.put(message,timestamp);\n            return true;\n        }\n    }\n    return false;\n}"]}
{"_id": "636766f81a6d9265ec01775c", "generate_results": ["public static String toString(Object obj){\n    if(obj == null){\n        return \"\";\n    }\n    return obj.toString();\n}"]}
{"_id": "6367667f1a6d9265ec017457", "generate_results": ["private static int decodeOctets(int i,ByteBuffer bb,StringBuilder sb){\n    if(bb.remaining() < i)\n        throw new IndexOutOfBoundsException(\"Not enough bytes in buffer\");\n    char c = (char)bb.get(i);\n    if(c <= 0x7F){ //1 byte\n        sb.append(c);\n        return i + 1;\n    }else if((c & 0xE0) == 0xC0){ //2 bytes\n        char c2 = (char)bb.get(i + 1);\n        if((c2 & 0xC0) != 0x80)\n            throw new IllegalArgumentException(\"Invalid UTF-8 sequence\");\n        sb.append((char)(((c & 0x1F) << 6) | (c2 & 0x3F)));\n        return i + 2;\n    }else if((c & 0xF0) == 0xE0){ //3 bytes\n        char c2 = (char)bb.get(i + 1);\n        char c3 = (char)bb.get(i + 2);\n        if(((c2 & 0xC0) != 0x80) || ((c3 & 0xC0) != 0x80))\n            throw new IllegalArgumentException(\"Invalid UTF-8 sequence\");\n        sb.append((char)(((c & 0x0F) << 12) | ((c2 & 0x3F) << 6) | (c3 & 0x3F)));\n        return i + 3;\n    }else if((c & 0xF8) == 0xF0){ //4 bytes\n        char c2 = (char)bb.get(i + 1);\n        char c3 = (char)bb.get(i + 2);\n        char c4 = (char)bb.get(i + 3);\n        if(((c2 & 0xC0) != 0x80) || ((c3 & 0xC0) != 0x80) || ((c4 & 0xC0) != 0x80))\n            throw new IllegalArgumentException(\"Invalid UTF-8 sequence\");\n        sb.append((char)(((c & 0x07) << 18) | ((c2 & 0x3F) << 12) | ((c3 & 0x3F) << 6) | (c4 & 0x3F)));\n        return i + 4;\n    }\n    throw new IllegalArgumentException(\"Invalid UTF-8 sequence\");\n}"]}
{"_id": "636766aa1a6d9265ec0175ce", "generate_results": ["int visitFrameStart(final int offset,final int numLocal,final int numStack){\n    if(this.stackMapTableNumberOfEntries==0){\n        this.stackMapTableNumberOfEntries=1;\n        this.stackMapTableEntries=new ByteVector(64);\n    }else{\n        ++this.stackMapTableNumberOfEntries;\n    }\n    this.currentFrame=new int[numLocal+numStack];\n    Arrays.fill(this.currentFrame,-1);\n    this.previousFrame=this.currentFrame.clone();\n    this.lastBytecodeOffset=offset;\n    return 3;\n}"]}
{"_id": "636767191a6d9265ec017c0f", "generate_results": ["private void enlarge(final int size){\n    if (size <= 0) {\n        throw new IllegalArgumentException(\"Size must be positive\");\n    }\n    final int newSize = this.data.length + size;\n    final byte[] newData = new byte[newSize];\n    System.arraycopy(this.data, 0, newData, 0, this.data.length);\n    this.data = newData;\n}"]}
{"_id": "636767821a6d9265ec0183a0", "generate_results": ["protected static void deleteFile(String fileName){\n    if(fileName == null || fileName.length() == 0)\n        return;\n    File file = new File(fileName);\n    if(file.exists()){\n        file.delete();\n    }\n}"]}
{"_id": "636767691a6d9265ec0181aa", "generate_results": ["public static int nullSafeHashCode(long[] array){\n    if(array == null) return 0;\n    int result = INITIAL_HASH;\n    for(long l : array){\n        result = MULTIPLIER * result + hashCode(l);\n    }\n    return result;\n}"]}
{"_id": "636767441a6d9265ec017cc1", "generate_results": ["private TreeNode<T> rotateRight(TreeNode<T> node){\n    if(node == null || node.getLeft() == null) return node; // Check for null nodes\n    TreeNode<T> left = node.getLeft(); // Get the left child of the current node\n    node.setLeft(left.getRight()); // Set the left child's right child as the current node's left child\n    left.setRight(node); // Set the current node as the right child of the left child\n    updateHeightAndSubtreeSize(node); // Update the heights and subtree sizes of the rotated nodes\n    updateHeightAndSubtreeSize(left); // Update the heights and subtree sizes of the rotated nodes\n    return left; // Return the new root of the rotated subtree\n}"]}
{"_id": "6367667f1a6d9265ec01745c", "generate_results": ["@SuppressWarnings(\"unchecked\") public static void addToClassPath(Vector<URL> cpV,String dir){\n    if(cpV==null||dir==null)return;\n    File f=new File(dir);\n    if(f.exists()&&f.isDirectory()){\n        String[] files=f.list(new FilenameFilter(){\n            public boolean accept(File dir,String name){\n                return name.endsWith(\".jar\");\n            }\n        });\n        for(int i=0;i<files.length;i++){\n            try{\n                cpV.add(new URL(\"file\",null,new File(dir,files[i]).getAbsolutePath()));\n            }catch(MalformedURLException e){\n                e.printStackTrace();\n            }\n        }\n    }\n}"]}
{"_id": "6367677e1a6d9265ec01830f", "generate_results": ["public String format(LoggingEvent event){\n    if (head == null) {\n        return \"\";\n    }\n    StringBuffer sbuf = new StringBuffer(BUF_SIZE);\n    PatternConverter c = head;\n    while (c != null) {\n        c.format(sbuf, event);\n        c = c.next;\n    }\n    return sbuf.toString();\n}"]}
{"_id": "636767031a6d9265ec0178dd", "generate_results": ["public long contentLength(){\n    if(request == null) {\n        return 0L;\n    }\n    try{\n        return Long.parseLong(request.getHeader(\"Content-Length\"));\n    }catch(NumberFormatException e){\n        return 0L;\n    }\n}"]}
{"_id": "636766f11a6d9265ec017658", "generate_results": ["public static int indexOfLastSeparator(String filename){\n    if(filename==null){\n        return -1;\n    }\n    int lastUnixPos=filename.lastIndexOf(UNIX_SEPARATOR);\n    int lastWindowsPos=filename.lastIndexOf(WINDOWS_SEPARATOR);\n    return Math.max(lastUnixPos,lastWindowsPos);\n}"]}
{"_id": "636767121a6d9265ec017b0a", "generate_results": ["private int parseEndOfLine(String headerPart,int end){\n    if (headerPart == null || headerPart.isEmpty()){\n        return -1;\n    }\n    while (end < headerPart.length()){\n        char c = headerPart.charAt(end++);\n        if (c == '\\n'){\n            return end;\n        }\n    }\n    return -1;\n}"]}
{"_id": "636766f61a6d9265ec017701", "generate_results": ["public static int lastIndexOf(String str,String searchStr){\n    if (StringUtils.isEmpty(str)){\n        return StringUtils.INDEXNOTFOUND;\n    }\n    return str.lastIndexOf(searchStr);\n}"]}
{"_id": "6367670b1a6d9265ec0179fe", "generate_results": ["@Override public void write(byte b[]) throws IOException {\n    if (b == null) {\n        throw new NullPointerException();\n    }\n}"]}
{"_id": "636767df1a6d9265ec01873c", "generate_results": ["public String id(String entityId){\n    if(entityId == null || entityId.isEmpty()){\n        throw new IllegalArgumentException(\"entityId is required\");\n    }\n    return point + Const.ID_CONNECTOR + entityId;\n}"]}
{"_id": "636766f91a6d9265ec01777f", "generate_results": ["public static boolean toBoolean(Boolean bool){\n    if(bool==null)return false;\n    else return bool;\n    return (bool == null) ? false : bool.booleanValue();\n}"]}
{"_id": "6367675f1a6d9265ec0180d3", "generate_results": ["public static <V,E>IsomorphicGraphMapping<V,E> identity(Graph<V,E> graph){\n    if(graph==null) throw new NullPointerException(\"graph is null\");\n    Map<V,V> forwardMapping = new HashMap<>();\n    Map<V,V> backwardMapping = new HashMap<>();\n    for (V vertex : graph.vertexSet()) {\n        forwardMapping.put(vertex, vertex);\n        backwardMapping.put(vertex, vertex);\n    }\n    return new IsomorphicGraphMapping<>(forwardMapping, backwardMapping, graph, graph);\n}"]}
{"_id": "636766fe1a6d9265ec017833", "generate_results": ["public static void forceDeleteOnExit(File file) throws IOException {\n    if (file.isDirectory()) {\n        cleanDirectoryOnExit(file);\n    }\n    file.deleteOnExit();\n}"]}
{"_id": "636767791a6d9265ec018257", "generate_results": ["public void addMessage(final LogRecord lr){\n    if(_logMonitorFrame == null || _logMonitorFrame.isDisposed()){\n        return;\n    }\n    SwingUtilities.invokeLater(new Runnable(){\n        public void run(){\n            _table.add(lr);\n        }\n    });\n}"]}
{"_id": "636767641a6d9265ec01817d", "generate_results": ["@Override public void generateGraph(Graph<V,E> target,Map<String,V> resultMap){\n    if(target==null) throw new IllegalArgumentException(\"Target graph cannot be null\");\n    if(resultMap==null) throw new IllegalArgumentException(\"Result map cannot be null\");\n    Set<V> partitionA = resultMap.get(\"partitionA\");\n    Set<V> partitionB = resultMap.get(\"partitionB\");\n    if(partitionA==null || partitionB==null) throw new IllegalArgumentException(\"Partition sets cannot be null\");\n    CompleteBipartiteGraphGenerator<V,E> generator = new CompleteBipartiteGraphGenerator<>(partitionA,partitionB);\n    Graph<V,E> generatedGraph = generator.createGraph();\n    target.addAllVertices(generatedGraph.vertexSet());\n    target.addAllEdges(generatedGraph.edgeSet());\n}"]}
{"_id": "636766ff1a6d9265ec017851", "generate_results": ["protected int findByte(byte value,int pos){\n    if (pos >= this.tail) {\n        return -1;\n    }\n    while (pos < this.tail) {\n        if (this.buffer[pos] == value) {\n            return pos;\n        }\n        ++pos;\n    }\n    return -1;\n}"]}
{"_id": "636767a41a6d9265ec018582", "generate_results": ["public static <T>int writeDelimitedTo(OutputStream out,T message,Schema<T> schema,LinkedBuffer buffer) throws IOException {\n    if (message == null) {\n        throw new NullPointerException(\"Message is null\");\n    }\n    int size = ProtobufIOUtil.toByteArray(message,schema,buffer).length;\n    out.write(buffer.buffer(),0,size);\n    return size;\n}"]}
{"_id": "636767001a6d9265ec01787e", "generate_results": ["public String toString(){\n    if (this instanceof ReflectionToStringBuilder) {\n        return ((ReflectionToStringBuilder)this).toString();\n    }\n    return super.toString();\n}"]}
{"_id": "636767781a6d9265ec01823d", "generate_results": ["protected void subAppend(LoggingEvent event){\n    if(!dir.exists()){\n        dir.mkdirs();\n    }\n    try{\n        File file = new File(dir, prefix + OptionConverter.convertSpecialChars(event.getMessage().toString()) + suffix);\n        Writer writer = new FileWriter(file);\n        BufferedWriter bufferedWriter = new BufferedWriter(writer);\n        bufferedWriter.write(event.getRenderedMessage());\n        bufferedWriter.close();\n        writer.close();\n    }catch(Exception e){\n        errorHandler.error(\"Error writing to temporary file\",e,null);\n    }\n}"]}
{"_id": "636766ef1a6d9265ec01761a", "generate_results": ["int addType(final String value){\n    if (value == null) {\n        throw new IllegalArgumentException(\"Invalid null value\");\n    }\n    return addTypeInternal(new Entry(-1, SymbolTable.CONSTANT_Class, value, 0));\n}"]}
{"_id": "636766821a6d9265ec0174b6", "generate_results": ["public static Class<?>[] resolveArguments(Type genericType,Class<?> targetType){\n    if(genericType instanceof ParameterizedType){\n        ParameterizedType pt=(ParameterizedType)genericType;\n        Type[] actualTypeArguments=pt.getActualTypeArguments();\n        Type rawType=pt.getRawType();\n        Map<TypeVariable<?>,Type> typeVariableMap=getTypeVariableMap(targetType);\n        Class<?>[] result=new Class[actualTypeArguments.length];\n        for(int i=0;i<actualTypeArguments.length;i++){\n            Type arg=actualTypeArguments[i];\n            if(arg instanceof TypeVariable){\n                Type resolvedArg=typeVariableMap.get(arg);\n                if(resolvedArg!=null){\n                    result[i]=resolvedArg instanceof Class ? (Class<?>)resolvedArg : resolveClass(resolvedArg,targetType);\n                }else{\n                    result[i]=Object.class; // Default to Object if unresolved\n                }\n            }else if(arg instanceof WildcardType){\n                WildcardType wt=(WildcardType)arg;\n                Type[] upperBounds=wt.getUpperBounds();\n                if(upperBounds.length>0){\n                    result[i]=resolveClass(upperBounds[0],targetType);\n                }else{\n                    result[i]=Object.class; // Default to Object if no upper bound\n                }\n            }else if(arg instanceof GenericArrayType){\n                GenericArrayType gat=(GenericArrayType)arg;\n                Type componentType=gat.getGenericComponentType();\n                result[i]=Array.newInstance(resolveClass(componentType,targetType),0).getClass();\n            }else{\n                result[i]=resolveClass(arg,targetType);\n            }\n        }\n        return result;\n    }else{\n        return null;\n    }\n}"]}
{"_id": "636767e11a6d9265ec018781", "generate_results": ["@Override public void accept(final METRICS data){\n    if(buffer == null){\n        buffer = new HashMap<>();\n    }\n    final String key = data.getId();\n    if(buffer.containsKey(key)){\n        final METRICS existingValue = buffer.get(key);\n        final METRICS combinedValue = existingValue.combine(data);\n        if(combinedValue.isAbandoned()){\n            buffer.remove(key);\n        }else{\n            buffer.put(key,combinedValue);\n        }\n    }else{\n        buffer.put(key,data);\n    }\n}"]}
{"_id": "636767531a6d9265ec017efb", "generate_results": ["void insertBefore(Bucket bucket){\n    if(bucket.prev != null){\n        bucket.prev.next = bucket;\n    }\n    bucket.next = this;\n    bucket.prev = this.prev;\n    if(this.prev != null){\n        this.prev.next = bucket;\n    }else{\n        bucketList.head = bucket;\n    }\n    this.prev = bucket;\n}"]}
{"_id": "636766f11a6d9265ec017641", "generate_results": ["@Override public int available() throws IOException {\n    if (length == index) {\n        fillBuffer();\n        if (length == index)\n            return 0;\n    }\n    return length - index;\n}"]}
{"_id": "636767de1a6d9265ec018706", "generate_results": ["public Mappings diffStructure(String tableName,Mappings mappings){\n    if(!containsStructure(tableName,mappings)){\n        return mappings;\n    }\n    Mappings result = new Mappings();\n    Map<String, Object> properties = mappings.getProperties();\n    for (String key : properties.keySet()) {\n        if (!structures.containsKey(key)) {\n            result.putProperty(key, properties.get(key));\n        }\n    }\n    return result;\n}"]}
{"_id": "636767dd1a6d9265ec0186e5", "generate_results": ["public void addNewTarget(Channels channels,IConsumer consumer){\n    if(consumeTargets == null){\n        consumeTargets = new ArrayList<>();\n    }\n    Group newGroup = new Group(channels,consumer);\n    consumeTargets.add(newGroup);\n}"]}
{"_id": "636767871a6d9265ec01846d", "generate_results": ["public static void createConfigurationDirectory(){\n    if (CONFIG_FILE_NAME == null) {\n        CONFIG_FILE_NAME = \"lf5.properties\";\n    }\n    String homeDir = System.getProperty(\"user.home\");\n    File configDir = new File(homeDir + File.separator + \"Documents\" + File.separator + \"Settings\" + File.separator + \"lf5\");\n    if (!configDir.exists()) {\n        configDir.mkdirs();\n    }\n}"]}
{"_id": "636766f81a6d9265ec01775b", "generate_results": ["public long readLong(final int offset){\n    if (offset < 0 || offset > classFileBuffer.length - 8)\n        throw new IndexOutOfBoundsException(\"Invalid offset: \" + offset);\n    return ((long)readInt(offset)) << 32 | (readInt(offset + 4) & 0xFFFFFFFFL);\n}"]}
{"_id": "636767a51a6d9265ec01859d", "generate_results": ["public boolean equals(final byte[] data,int offset,final int len){\n    // Check if the length of the provided data matches the specified length\n    if (len != this.size()) {\n        return false;\n    }\n    // Compare each byte in the arrays\n    for (int i = 0; i < len; ++i) {\n        if (this.byteAt(i + offset) != data[i]) {\n            return false;\n        }\n    }\n    return true;\n}"]}
{"_id": "6367670b1a6d9265ec0179ff", "generate_results": ["public static Byte[] nullToEmpty(final Byte[] array){\n    if(array == null || array.length == 0){\n        return EMPTY_BYTE_OBJECT_ARRAY;\n    }\n    return array;\n}"]}
{"_id": "6367677f1a6d9265ec018347", "generate_results": ["public synchronized void send(final String message){\n    if(connections == null || connections.isEmpty()) return;\n    Enumeration e = connections.elements();\n    while(e.hasMoreElements()){\n        SocketHandler sh = (SocketHandler)e.nextElement();\n        PrintWriter out = null;\n        try{\n            out = new PrintWriter(sh.getWriter());\n            out.println(message);\n            out.flush();\n        } catch(InterruptedIOException iioe){\n            LogLog.error(\"Interrupted I/O exception\", iioe);\n        } catch(IOException ioe){\n            LogLog.error(\"I/O error\", ioe);\n        } finally {\n            if(out != null) out.close();\n        }\n    }\n}"]}
{"_id": "6367670a1a6d9265ec0179e8", "generate_results": ["public static Boolean[] nullToEmpty(final Boolean[] array){\n    if(array == null || array.length == 0){\n        return EMPTY_BOOLEAN_OBJECT_ARRAY;\n    }\n    return array;\n}"]}
{"_id": "6367677f1a6d9265ec01834b", "generate_results": ["public void put(LoggingEvent o){\n    if(isFull()){\n        resize(maxSize*2);\n    }\n    buf[next] = o;\n    next = (next+1)%maxSize;\n    numElements++;\n}"]}
{"_id": "636767df1a6d9265ec018744", "generate_results": ["protected List<TimeRange> buildTimeRanges(long start,long end){\n    if(start >= end){\n        return Collections.emptyList();\n    }\n    long duration = end - start;\n    if(duration <= FETCH_DATA_DURATION){\n        return Collections.singletonList(new TimeRange(start,end));\n    }\n    List<TimeRange> result = new ArrayList<>();\n    while(start < end){\n        long nextEnd = Math.min(start + FETCH_DATA_DURATION,end);\n        result.add(new TimeRange(start,nextEnd));\n        start = nextEnd;\n    }\n    return result;\n}"]}
{"_id": "636767031a6d9265ec0178e6", "generate_results": ["public static byte[] toPrimitive(final Byte[] array){\n    if(array == null){\n        return null;\n    }else{\n        final int length = array.length;\n        final byte[] result = new byte[length];\n        for(int i=0;i<length;i++){\n            result[i] = array[i].byteValue();\n        }\n        return result;\n    }\n}"]}
{"_id": "636767dc1a6d9265ec0186be", "generate_results": ["static long compressTimeBucket(long timeBucket,int dayStep){\n    if (timeBucket == Const.NONE) {\n        return Const.NONE;\n    }\n    DateTime dateTime = new DateTime(timeBucket,TIME_BUCKET_FORMATTER);\n    return compressDateTime(dateTime,dayStep).getMillis();\n}"]}
{"_id": "636767a41a6d9265ec01856c", "generate_results": ["public static int computeUTF8Size(final CharSequence str,final int index,final int len){\n    if(str==null||index<0||len<=0||index+len>str.length()){\n        throw new IllegalArgumentException(\"Invalid arguments\");\n    }\n    int size=0;\n    for(int i=index;i<index+len;i++){\n        char c=str.charAt(i);\n        if(c<=0x7F){\n            size++;\n        }else if(c<=0x7FF){\n            size+=2;\n        }else if(c<=0xFFFF){\n            size+=3;\n        }else{\n            size+=4;\n        }\n    }\n    return size;\n}"]}
{"_id": "636766f01a6d9265ec017639", "generate_results": ["public static <T>List<T> asList(T[] a){\n    if(a==null)return Collections.emptyList();\n    return Arrays.asList(a);\n}"]}
{"_id": "6367672d1a6d9265ec017c74", "generate_results": ["public boolean remove(int val){\n    if(!map.containsKey(val)) return false;\n    int last = values.get(values.size()-1);\n    //swap the last element with the one to delete\n    values.set(map.get(val),last);\n    //update the map entry for the last element\n    map.put(last,map.get(val));\n    //delete the last element\n    values.remove(values.size()-1);\n    //delete the key-value pair in the map\n    map.remove(val);\n    return true;\n}"]}
{"_id": "6367676b1a6d9265ec0181df", "generate_results": ["public static boolean startsWithIgnoreCase(String str,String prefix){\n    if(str==null||prefix==null){\n        return false;\n    }\n    if(prefix.length()>str.length()){\n        return false;\n    }\n    String targetPrefix=str.substring(0,prefix.length());\n    return targetPrefix.equalsIgnoreCase(prefix);\n}"]}
{"_id": "6367674b1a6d9265ec017dc0", "generate_results": ["private Set<V> initVisibleVertices(){\n    if(graph == null){\n        throw new IllegalArgumentException(\"Graph cannot be null\");\n    }\n    Set<V> visibleVertices = new HashSet<>();\n    for (E e : graph.edgeSet()) {\n        V source = graph.getEdgeSource(e);\n        V target = graph.getEdgeTarget(e);\n        visibleVertices.add(source);\n        visibleVertices.add(target);\n    }\n    return visibleVertices;\n}"]}
{"_id": "636767001a6d9265ec017873", "generate_results": ["public static String reverse(final String str){\n    if(str == null){\n        return null;\n    }\n    return new StringBuilder(str).reverse().toString();\n}"]}
{"_id": "636766ff1a6d9265ec01783b", "generate_results": ["public static String sub(String str,int start,int end){\n    if (str == null) {\n        return null;\n    }\n    int length = str.length();\n    if (start < 0 || start > length) {\n        throw new IndexOutOfBoundsException(\"Invalid start index: \" + start);\n    }\n    if (end < 0 || end > length) {\n        throw new IndexOutOfBoundsException(\"Invalid end index: \" + end);\n    }\n    if (start >= end) {\n        return \"\";\n    }\n    return str.substring(start,end);\n}"]}
{"_id": "6367671a1a6d9265ec017c15", "generate_results": ["public ByteVector putByteArray(final byte[] byteArrayValue,final int byteOffset,final int byteLength){\n    //Check if there is enough space in the current buffer\n    if(length+byteLength>data.length){\n        //If not, enlarge the buffer to accommodate the new data\n        enlarge(byteLength);\n    }\n    //Copy the specified portion of the input array into the buffer at the current position\n    System.arraycopy(byteArrayValue,byteOffset,data,length,byteLength);\n    //Update the length of the byte vector to reflect the added data\n    length+=byteLength;\n    return this;\n}"]}
{"_id": "636766821a6d9265ec0174d2", "generate_results": ["public static AtmosphereRequest wrap(HttpServletRequest request){\n    if (request instanceof AtmosphereRequest) {\n        return (AtmosphereRequest) request;\n    }\n    return new AtmosphereRequestImpl.Builder().request(request).build();\n}"]}
{"_id": "636767ab1a6d9265ec01867b", "generate_results": ["public static LinkedBuffer writeUTF8(final CharSequence str,final WriteSession session,final LinkedBuffer lb){\n    if(str==null){\n        throw new NullPointerException(\"str\");\n    }\n    int size=computeUTF8Size(str,0,str.length());\n    if(size>lb.limit-lb.offset){\n        lb=expand(lb,size);\n    }\n    writeUTF8(str,0,str.length(),lb.buffer,lb.offset,lb.limit,session,lb);\n    lb.offset+=size;\n    return lb;\n}"]}
{"_id": "6367675c1a6d9265ec01805b", "generate_results": ["public void removeFromTreeEdgeList(){\n    if (prev != null) {\n        prev.next = next;\n    }\n    if (next != null) {\n        next.prev = prev;\n    }\n}"]}
{"_id": "636767791a6d9265ec01826d", "generate_results": ["public static String findAndSubst(String key,Properties props){\n    if(props == null){\n        return null;\n    }\n    String value = props.getProperty(key);\n    if(value == null){\n        return value;\n    }\n    try{\n        return substVars(value,props);\n    }catch(Exception e){\n        return value;\n    }\n}"]}
{"_id": "636767001a6d9265ec01787f", "generate_results": ["protected void appendDetail(StringBuffer buffer,String fieldName,int[] array){\n    if (array == null) {\n        appendNullText(buffer,fieldName);\n        return ;\n    }\n    appendFieldStart(buffer,fieldName);\n    append(arrayStart);\n    for (int i = 0; i < array.length; ++i) {\n        if (i > 0) {\n            append(arraySeparator);\n        }\n        append(array[i]);\n    }\n    append(arrayEnd);\n    appendFieldEnd(buffer,fieldName);\n}"]}
{"_id": "636766fe1a6d9265ec017834", "generate_results": ["public static String sessionId(){\n    if(Invoker.getHttpServletResponse().getSession() == null){\n        return \"\";\n    }\n    return Invoker.getHttpServletResponse().getSession().getId();\n}"]}
{"_id": "636766ff1a6d9265ec01784b", "generate_results": ["public static boolean isDigits(String str){\n    if(str == null || str.length() == 0) return false;\n    for(char ch : str.toCharArray()){\n        if(!Character.isDigit(ch)) return false;\n    }\n    return true;\n}"]}
{"_id": "636766fc1a6d9265ec0177da", "generate_results": ["private static boolean isParameterSeparator(final char c){\n    if(c == '\\0'){\n        return false;\n    }\n    return (c == ':' || c == '?' || c == '@' || c == '#');\n}"]}
{"_id": "6367670c1a6d9265ec017a35", "generate_results": ["private static boolean endsWith(final String str,final String suffix,final boolean ignoreCase){\n    if(str == null || suffix == null) return false;\n    if(suffix.length() > str.length()) return false;\n    int strOffset = str.length() - suffix.length();\n    int suffixOffset = 0;\n    while(suffixOffset < suffix.length()){\n        char strChar = str.charAt(strOffset + suffixOffset);\n        char suffixChar = suffix.charAt(suffixOffset);\n        if(ignoreCase){\n            if(Character.toUpperCase(strChar) != Character.toUpperCase(suffixChar)) return false;\n        }else{\n            if(strChar != suffixChar) return false;\n        }\n        suffixOffset++;\n    }\n    return true;\n}"]}
{"_id": "6367667f1a6d9265ec01745d", "generate_results": ["public static List<PathSegmentImpl> decodePath(URI u,boolean decode){\n    if(u==null){\n        throw new IllegalArgumentException(\"URI must not be null\");\n    }\n    String path=u.getPath();\n    if(path==null){\n        return Collections.emptyList();\n    }\n    return decodePath(path,decode);\n}"]}
{"_id": "636766f11a6d9265ec017651", "generate_results": ["public static Character[] nullToEmpty(final Character[] array){\n    if(array == null || array.length == 0){\n        return EMPTY_CHARACTER_OBJECT_ARRAY;\n    }\n    return array;\n}"]}
{"_id": "636767821a6d9265ec0183ab", "generate_results": ["public boolean hasThrown(){\n    if(_thrown == null){\n        return false;\n    }\n    return _thrown != null;\n}"]}
{"_id": "636767831a6d9265ec0183c9", "generate_results": ["public static String peek(){\n    if(stack.isEmpty()){\n        LogLog.warn(\"Stack is empty\");\n        return null;\n    }\n    return (String)stack.peek();\n}"]}
{"_id": "636767de1a6d9265ec01871c", "generate_results": ["public void valueAccumulation(String key,Long value){\n    if(data.containsKey(key)){\n        Long oldValue = data.get(key);\n        data.put(key,oldValue + value);\n    }else{\n        data.put(key,value);\n    }\n}"]}
{"_id": "636766811a6d9265ec017496", "generate_results": ["public InputStream next() throws IOException {\n    if (!stack.isEmpty()) {\n        return stack.getLast();\n    } else {\n        return null;\n    }\n}"]}
{"_id": "6367677e1a6d9265ec01832e", "generate_results": ["public Logger exists(String name){\n    if(ht.containsKey(name)){\n        return (Logger)ht.get(name);\n    }\n    return (Logger)ht.get(name);\n}"]}
{"_id": "6367670a1a6d9265ec0179e7", "generate_results": ["public Converter lookup(final Class<?> clazz){\n    if (clazz == null) {\n        throw new NullPointerException(\"class is null\");\n    }\n    return converters.get(clazz);\n}"]}
{"_id": "636767a41a6d9265ec018572", "generate_results": ["public long readRawVarint64() throws IOException {\n    if (!input.markSupported()) {\n        throw new UnsupportedOperationException(\"Mark not supported\");\n    }\n    int b = input.read();\n    if (b == -1) {\n        throw new EOFException(\"Expected a varint but got end of stream.\");\n    }\n    return ((long)(b & 0x7F)) << 56 |\n           ((long)((b = input.read()) & 0x7F)) << 49 |\n           ((long)((b = input.read()) & 0x7F)) << 42 |\n           ((long)((b = input.read()) & 0x7F)) << 35 |\n           ((long)((b = input.read()) & 0x7F)) << 28 |\n           ((long)((b = input.read()) & 0x7F)) << 21 |\n           ((long)((b = input.read()) & 0x7F)) << 14 |\n           ((long)((b = input.read()) & 0x7F)) << 7 |\n           (b & 0x7F);\n}"]}
{"_id": "636767021a6d9265ec0178bb", "generate_results": ["public static Double[] nullToEmpty(final Double[] array){\n    if(array == null || array.length == 0){\n        return EMPTY_DOUBLE_OBJECT_ARRAY;\n    }\n    return array;\n}"]}
{"_id": "636767021a6d9265ec0178b2", "generate_results": ["private void pop(final String descriptor){\n    if(descriptor.length() != 1){\n        throw new IllegalArgumentException(\"Invalid descriptor length: \" + descriptor.length());\n    }\n    switch(descriptor.charAt(0)){\n        case 'B':\n            pop(BYTE);\n            break;\n        case 'C':\n            pop(CHAR);\n            break;\n        case 'D':\n            pop(DOUBLE);\n            break;\n        case 'F':\n            pop(FLOAT);\n            break;\n        case 'I':\n            pop(INTEGER);\n            break;\n        case 'J':\n            pop(LONG);\n            break;\n        case 'L':\n            pop(OBJECT);\n            break;\n        case '[':\n            pop(ARRAY_OF(ELEMENT_OF(descriptor)));\n            break;\n        default:\n            throw new IllegalArgumentException(\"Invalid descriptor: \" + descriptor);\n    }\n}"]}
{"_id": "636766f91a6d9265ec01776e", "generate_results": ["@Override public void write(final byte b[],final int off,final int len) throws IOException {\n    if (len == 0) return;\n    final int end = off + len;\n    for (int i = off; i < end; ++i) {\n        write(b[i]);\n    }\n}"]}
{"_id": "636767551a6d9265ec017f3f", "generate_results": ["public static final <V>void swap(V[] arr,int i,int j){\n    if(i == j) return;\n    V temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n}"]}
{"_id": "636766ae1a6d9265ec0175dc", "generate_results": ["public Boolean isPartialContentResponse(){\n    if(this.response != null){\n        return this.response.getStatus() == 206;\n    }\n    return this.response.getStatus() == 206;\n}"]}
{"_id": "636766f01a6d9265ec01762e", "generate_results": ["public static boolean isEmpty(final double[] array){\n    if(array == null) {\n        return true;\n    }\n    return array == null || array.length == 0;\n}"]}
{"_id": "6367667e1a6d9265ec01743a", "generate_results": ["public long lastWriteTimeStampInMilliseconds(){\n    if(lastWrite == -1){\n        return -1;\n    }else{\n        return System.currentTimeMillis() - lastWrite;\n    }\n}"]}
{"_id": "636767601a6d9265ec0180fd", "generate_results": ["protected void addToIndex(V sourceVertex,V targetVertex,E e){\n    if(sourceVertex.equals(targetVertex)){\n        return;\n    }\n    Set<E> edges = touchingVerticesToEdgeMap.get(Pair.of(sourceVertex,targetVertex));\n    if(edges == null){\n        edges = new HashSet<>();\n        touchingVerticesToEdgeMap.put(Pair.of(sourceVertex,targetVertex),edges);\n    }\n    edges.add(e);\n}"]}
{"_id": "636766821a6d9265ec0174c9", "generate_results": ["private static File[] classPath(){\n    if(classPath == null){\n        classPath = loadClassPath();\n    }\n    String classpath = System.getProperty(\"java.class.path\");\n    String[] paths = classpath.split(System.getProperty(\"path.separator\"));\n    File[] files = new File[paths.length];\n    for(int i=0;i<paths.length;i++){\n        files[i] = new File(paths[i]);\n    }\n    return files;\n}"]}
{"_id": "636767041a6d9265ec0178f8", "generate_results": ["private static String[] copyStrings(final String[] src){\n    if (src == null) {\n        return null;\n    }\n    final int length = src.length;\n    final String[] dest = new String[length];\n    for (int i = 0; i < length; ++i) {\n        dest[i] = src[i].toLowerCase();\n    }\n    return dest;\n}"]}
{"_id": "636767521a6d9265ec017ecc", "generate_results": ["public static Pair<Box2D,Box2D> splitAlongXAxis(Box2D box){\n    if(box == null) throw new IllegalArgumentException(\"Input box cannot be null\");\n    double mid = (box.getMinX() + box.getMaxX()) / 2;\n    Box2D left = new Box2D(box.getMinX(),mid,box.getMinY(),box.getMaxY());\n    Box2D right = new Box2D(mid,box.getMaxX(),box.getMinY(),box.getMaxY());\n    return new Pair<>(left,right);\n}"]}
{"_id": "636766a91a6d9265ec0175c1", "generate_results": ["private void enlarge(final int size){\n    if (data == null) {\n        data = new byte[size];\n        return;\n    }\n    final byte[] newData = new byte[data.length + size];\n    System.arraycopy(data, 0, newData, 0, data.length);\n    data = newData;\n}"]}
{"_id": "636767781a6d9265ec018238", "generate_results": ["public boolean isAttached(Appender appender){\n    if(appenderList == null){\n        return false;\n    }\n    Enumeration enumeration = appenderList.elements();\n    while(enumeration.hasMoreElements()){\n        Appender element = (Appender)enumeration.nextElement();\n        if(element.equals(appender)){\n            return true;\n        }\n    }\n    return false;\n}"]}
{"_id": "6367674a1a6d9265ec017dab", "generate_results": ["@Override public int compare(Double o1,Double o2){\n    if(Math.abs(o1-o2)<epsilon) return 0;\n    else return Double.compare(o1,o2);\n}"]}
{"_id": "6367672d1a6d9265ec017c78", "generate_results": ["public boolean insert(int val){\n    if(map.containsKey(val)) return false;\n    else{\n        map.put(val,val);\n        return true;\n    }\n}"]}
{"_id": "636767dc1a6d9265ec0186c6", "generate_results": ["private boolean containsAllFields(Fields fields){\n    if (fields == null || fields.isEmpty()) {\n        return true;\n    }\n    for (String fieldName : fields.getFieldNames()) {\n        if (!properties.containsKey(fieldName)) {\n            return false;\n        }\n    }\n    return true;\n}"]}
{"_id": "636766821a6d9265ec0174bf", "generate_results": ["public static String capitalize(String name){\n    if(name == null || name.length() == 0)\n        return \"\";\n    char[] chars = name.toCharArray();\n    chars[0] = Character.toUpperCase(chars[0]);\n    return new String(chars);\n}"]}
{"_id": "636767aa1a6d9265ec01865a", "generate_results": ["public static int writeTo(final DataOutput out,LinkedBuffer node) throws IOException {\n    if (node == null || node.buffer == null) {\n        return 0;\n    }\n    final byte[] buffer = node.buffer;\n    int written = 0;\n    while (node != null) {\n        out.write(buffer,node.start,node.offset - node.start);\n        written += node.offset - node.start;\n        node = node.next;\n    }\n    return written;\n}"]}
{"_id": "636766f21a6d9265ec017677", "generate_results": ["public static boolean isNotTrue(Boolean bool){\n    if (bool == null) {\n        return true;\n    }\n    return !isTrue(bool);\n}"]}
{"_id": "6367674f1a6d9265ec017e74", "generate_results": ["public String toString(){\n    if(isEmpty()){\n        return \"[]\";\n    }\n    StringBuilder sb = new StringBuilder();\n    for (int i = 0; i < size(); i++) {\n        sb.append(vs[i]);\n        if (i != size() - 1) {\n            sb.append(\", \");\n        }\n    }\n    return sb.toString();\n}"]}
{"_id": "6367675c1a6d9265ec018058", "generate_results": ["@SuppressWarnings(\"unchecked\") public static Supplier<String> createStringSupplier(int start){\n    if (start < 0) throw new IllegalArgumentException(\"Start value must be non-negative\");\n    return () -> String.valueOf(start++);\n}"]}
{"_id": "6367677b1a6d9265ec0182bd", "generate_results": ["public String format(final LoggingEvent event){\n    // Check if the layout is active\n    if (!isActive()) {\n        return \"\";\n    }\n\n    // Initialize buffer to hold formatted output\n    StringBuffer sbuf = new StringBuffer(BUF_SIZE);\n\n    // Get the current time in milliseconds since the epoch\n    long millis = event.getTimeStamp();\n\n    // Append the date and time to the buffer\n    sbuf.append(OptionConverter.dateToString(millis, null));\n\n    // Append the thread name to the buffer\n    sbuf.append(\" [\").append(event.getThreadName()).append(\"] \");\n\n    // Append the logger name to the buffer\n    sbuf.append(event.getLoggerName());\n\n    // Append the log level to the buffer\n    sbuf.append(\" \").append(event.getLevel().toString());\n\n    // Append the message to the buffer\n    sbuf.append(\": \").append(event.getMessage());\n\n    // Append any throwable information to the buffer\n    Throwable throwable = event.getThrowableInformation() != null ? event.getThrowableInformation().getThrowable() : null;\n    if (throwable != null) {\n        sbuf.append(\"\\n\");\n        OptionConverter.printStackTrace(throwable, sbuf);\n    }\n\n    // Return the formatted string\n    return sbuf.toString();\n}"]}
{"_id": "636766ff1a6d9265ec017842", "generate_results": ["public static double[] toPrimitive(final Double[] array){\n    if (array == null) {\n        return EMPTY_DOUBLE_ARRAY;\n    } else if (array.length == 0) {\n        return EMPTY_DOUBLE_ARRAY;\n    }\n    final double[] result = new double[array.length];\n    for (int i = 0; i < array.length; i++) {\n        result[i] = array[i].doubleValue();\n    }\n    return result;\n}"]}
{"_id": "636766fa1a6d9265ec0177a9", "generate_results": ["private void addInitializedType(final int abstractType){\n    if(initializationCount == initializations.length){\n        final int newLength = (initializationCount + 1) * 2;\n        final int[] newInitializations = new int[newLength];\n        System.arraycopy(initializations,0,newInitializations,0,initializationCount);\n        initializations = newInitializations;\n    }\n    initializations[initializationCount++] = abstractType;\n}"]}
{"_id": "6367670a1a6d9265ec0179dc", "generate_results": ["private void putAbstractTypes(final int start,final int end){\n    if(currentFrame==null)return;\n    for(int i=start;i<end;++i){\n        putAbstractType(i,currentFrame[i]);\n    }\n}"]}
{"_id": "636766801a6d9265ec017482", "generate_results": ["public void readFrom(final InputStream in) throws IOException {\n    if (in == null) {\n        throw new IllegalArgumentException(\"Input stream cannot be null\");\n    }\n    resizeIfNeeded();\n    int bytesRead = 0;\n    while (bytesRead < size) {\n        try {\n            bytesRead += in.read(buffer, pointer + bytesRead, size - bytesRead);\n        } catch (EOFException e) {\n            break;\n        }\n    }\n}"]}
{"_id": "6367670a1a6d9265ec0179d8", "generate_results": ["@Override public void write(final byte[] b) throws IOException {\n    if (b == null) throw new NullPointerException(\"Null input\");\n    int len = b.length;\n    if (len > 0) {\n        // Convert bytes to characters using the specified encoding\n        String str = new String(b, encoding);\n        // Write the string to the underlying Writer\n        writer.write(str);\n    }\n}"]}
{"_id": "636766a81a6d9265ec01757b", "generate_results": ["@SuppressWarnings(\"unchecked\") public String toString(JSONWriter.Feature... features){\n    if(features == null || features.length == 0){\n        return this.toString(NONE_DIRECT_FEATURES);\n    }\n    long feature = NONE_DIRECT_FEATURES;\n    for(JSONWriter.Feature f : features){\n        feature |= f.mask;\n    }\n    return this.toString(feature);\n}"]}
{"_id": "636767021a6d9265ec0178bf", "generate_results": ["@Override protected Object convertToType(final Class<?> type,final Object value) throws Exception {\n    if (value == null || \"\".equals(value)) {\n        return BeanUtils.getDefaultValue(type);\n    }\n    String str = value.toString();\n    if (str.length() > 0) {\n        return str.charAt(0);\n    } else {\n        return BeanUtils.getDefaultValue(type);\n    }\n}"]}
{"_id": "6367670b1a6d9265ec017a0f", "generate_results": ["public static boolean containsAnyIgnoreCase(String str,List<String> searchStrArray){\n    if (StringUtils.isBlank(str)) {\n        return false;\n    }\n    for (String searchStr : searchStrArray) {\n        if (str.equalsIgnoreCase(searchStr)) {\n            return true;\n        }\n    }\n    return false;\n}"]}
{"_id": "636766a81a6d9265ec01758e", "generate_results": ["public static int nextPrime(int desiredCapacity){\n    if (primeCapacities == null || desiredCapacity >= primeCapacities.length) {\n        int newLength = Math.max(desiredCapacity + 1, primeCapacities != null ? primeCapacities.length * 2 : 10);\n        int[] newPrimes = new int[newLength];\n        if (primeCapacities != null) {\n            System.arraycopy(primeCapacities, 0, newPrimes, 0, primeCapacities.length);\n        }\n        for (int i = primeCapacities != null ? primeCapacities.length : 2; i < newLength; i++) {\n            boolean isPrime = true;\n            for (int j = 2; j <= Math.sqrt(i); j++) {\n                if (i % j == 0) {\n                    isPrime = false;\n                    break;\n                }\n            }\n            if (isPrime) {\n                newPrimes[i] = i;\n            } else {\n                newPrimes[i] = newPrimes[i - 1];\n            }\n        }\n        primeCapacities = newPrimes;\n    }\n    return primeCapacities[desiredCapacity];\n}"]}
{"_id": "6367670a1a6d9265ec0179cf", "generate_results": ["public static char toChar(final Character ch,final char defaultValue){\n    if(ch == null){\n        return defaultValue;\n    }\n    return (ch == null) ? defaultValue : ch.charValue();\n}"]}
{"_id": "6367676b1a6d9265ec0181e2", "generate_results": ["public static Object findFirstMatch(Collection source,Collection candidates){\n    if(source==null||candidates==null){\n        return null;\n    }\n    for(Object candidate:candidates){\n        if(source.contains(candidate)){\n            return candidate;\n        }\n    }\n    return null;\n}"]}
{"_id": "6367676b1a6d9265ec0181ee", "generate_results": ["public static String trimTrailingWhitespace(String str){\n    if (str == null) {\n        return null;\n    }\n    int len = str.length();\n    while ((len > 0) && (Character.isWhitespace(str.charAt(len - 1)))) {\n        len--;\n    }\n    return str.substring(0, len);\n}"]}
{"_id": "636767dc1a6d9265ec0186cb", "generate_results": ["public void init(){\n    if (taskId == null || taskId.isEmpty()) {\n        throw new IllegalArgumentException(\"Task ID cannot be empty\");\n    }\n    File dir = new File(analyzeResultDist);\n    if (!dir.exists()) {\n        dir.mkdirs();\n    }\n}"]}
{"_id": "636767a31a6d9265ec018552", "generate_results": ["@Override public String readString() throws IOException {\n    if (bufferPos >= bufferSize) {\n      refillBuffer(true);\n    }\n  int length = readRawVarint32();\n  if (length < 0) {\n    throw new InvalidProtocolBufferException(\"Negative length found: \" + length);\n  }\n  if (bufferPos + length > bufferSize) {\n    refillBuffer(true);\n  }\n  String result = STRING.deser(buffer, bufferPos, length);\n  bufferPos += length;\n  return result;\n}"]}
{"_id": "636767a61a6d9265ec0185b7", "generate_results": ["private static int digitValue(final char c){\n    if(c >= '0' && c <= '9'){\n        return c - '0';\n    }else if(c >= 'a' && c <= 'f'){\n        return 10 + (c - 'a');\n    }else if(c >= 'A' && c <= 'F'){\n        return 10 + (c - 'A');\n    }\n    throw new IllegalArgumentException(\"Not a valid digit: \" + c);\n}"]}
{"_id": "636767e01a6d9265ec018755", "generate_results": ["private Map<String,Object> buildContent(JsonObject jsonObject){\n    if (jsonObject == null) {\n        return Collections.emptyMap();\n    }\n    Map<String,Object> content = new HashMap<>();\n    // TODO: Put the \"content\" from the jsonObject to the content.\n    return content;\n}"]}
{"_id": "6367667f1a6d9265ec017458", "generate_results": ["public AtmosphereFramework removeAtmosphereHandler(String mapping){\n    if (atmosphereHandlers.containsKey(mapping)) {\n        atmosphereHandlers.remove(mapping);\n    }\n    return this;\n}"]}
{"_id": "636767a21a6d9265ec018517", "generate_results": ["public final byte[] toByteArray(){\n    if(size == 0){\n        return new byte[0];\n    }\n    byte[] result = new byte[size];\n    int pos = 0;\n    for(LinkedBuffer buffer = head;buffer != null;buffer = buffer.next){\n        System.arraycopy(buffer.buffer,buffer.offset,result,pos,buffer.length);\n        pos += buffer.length;\n    }\n    return result;\n}"]}
{"_id": "6367667d1a6d9265ec017401", "generate_results": ["public static String unescapeJava(String str) throws Exception {\n    if (str == null) {\n        return null;\n    }\n    StringWriter sw = new StringWriter(str.length());\n    unescapeJava(sw, str);\n    return sw.toString();\n}"]}
{"_id": "636766f01a6d9265ec01763e", "generate_results": ["private static String javaCharset(String charset){\n    if(charset == null) return null;\n    charset = charset.toUpperCase(Locale.US);\n    if(MIME2JAVA.containsKey(charset)){\n        return MIME2JAVA.get(charset);\n    }\n    return charset;\n}"]}
{"_id": "6367676a1a6d9265ec0181bf", "generate_results": ["public static Object quoteIfString(Object obj){\n    if(obj instanceof String){\n        return quote((String) obj);\n    }\n    return obj;\n}"]}
{"_id": "636767501a6d9265ec017e86", "generate_results": ["@Override public ListNode<E> previousNode(){\n    if (this.prev == null){\n        throw new NoSuchElementException(\"No previous node\");\n    }\n    return this.prev;\n}"]}
{"_id": "636766f21a6d9265ec017667", "generate_results": ["public short readShort(final int offset){\n    if(offset < 0 || offset > classFileBuffer.length - 2){\n        throw new ArrayIndexOutOfBoundsException(\"offset: \" + offset);\n    }\n    return (short)((classFileBuffer[offset] & 0xFF) << 8 | (classFileBuffer[offset + 1] & 0xFF));\n}"]}
{"_id": "636767031a6d9265ec0178ef", "generate_results": ["private static Object copyArrayGrow1(final Object array,final Class<?> newArrayComponentType){\n    if(array == null){\n        throw new NullPointerException();\n    }\n    int length = Array.getLength(array);\n    Object newArray = Array.newInstance(newArrayComponentType,length + 1);\n    System.arraycopy(array,0,newArray,0,length);\n    return newArray;\n}"]}
{"_id": "636767431a6d9265ec017c8d", "generate_results": ["private int computeBinaryLog(int n){\n    if(n <= 0)\n        throw new IllegalArgumentException(\"n must be positive\");\n    return (int)(Math.log(n) / Math.log(2));\n}"]}
{"_id": "636767611a6d9265ec018116", "generate_results": ["private Set<V> intersection(Set<V> set1,Set<V> set2){\n    if (set1 == null || set2 == null) {\n        throw new IllegalArgumentException(\"Input sets cannot be null\");\n    }\n    return new HashSet<>(set1).retainAll(set2) ? set1 : Collections.emptySet();\n}"]}
{"_id": "636766f71a6d9265ec017730", "generate_results": ["static String[] toNoNullStringArray(Collection<?> collection){\n    if (collection == null) {\n        return ArrayUtils.EMPTY_STRING_ARRAY;\n    }\n    Object[] array = collection.toArray();\n    String[] stringArray = new String[array.length];\n    for (int i = 0; i < array.length; i++) {\n        stringArray[i] = array[i].toString();\n    }\n    return stringArray;\n}"]}
{"_id": "636767081a6d9265ec0179a2", "generate_results": ["private static boolean isAllZeros(String s){\n    if(s == null || s.isEmpty()){\n        return false;\n    }\n    for (int i = 0; i < s.length(); i++) {\n        if(s.charAt(i) != '0'){\n            return false;\n        }\n    }\n    return true;\n}"]}
{"_id": "636766821a6d9265ec0174b3", "generate_results": ["protected Object filter(Object msg){\n    if(msg == null || (msg instanceof BroadcastAction && ((BroadcastAction)msg).abort())){\n        return null;\n    }\n    return msg;\n}"]}
{"_id": "636767e01a6d9265ec018764", "generate_results": ["private JsonObject convertProperties(List<KeyStringValuePair> properties){\n    if (properties == null || properties.isEmpty()) {\n        return new JsonObject();\n    }\n    JsonObject jsonObject = new JsonObject();\n    if (CollectionUtils.isNotEmpty(properties)) {\n        for (KeyStringValuePair property : properties) {\n            jsonObject.addProperty(property.getKey(), property.getValue());\n        }\n    }\n    return jsonObject;\n}"]}
{"_id": "6367677e1a6d9265ec018314", "generate_results": ["protected int removeUnusedNodes(){\n    if(_categoryModel == null || _categoryModel.getRoot() == null){\n        return 0;\n    }\n    Enumeration<TreeNode> enumeration = _categoryModel.getRoot().children();\n    ArrayList<CategoryNode> toBeRemoved = new ArrayList<>();\n    while(enumeration.hasMoreElements()){\n        CategoryNode node = (CategoryNode)enumeration.nextElement();\n        if(!node.isActive()){\n            toBeRemoved.add(node);\n        }\n    }\n    for(CategoryNode node : toBeRemoved){\n        _categoryModel.removeNodeFromParent(node);\n    }\n    return toBeRemoved.size();\n}"]}
{"_id": "636766ff1a6d9265ec017853", "generate_results": ["protected Label readLabel(final int bytecodeOffset,final Label[] labels){\n    if(labels.length <= bytecodeOffset){\n        throw new IllegalArgumentException(\"Invalid bytecode offset: \" + bytecodeOffset);\n    }\n    Label l = labels[bytecodeOffset];\n    if(l == null){\n        l = createLabel(bytecodeOffset,labels);\n    }\n    return l;\n}"]}
{"_id": "6367677d1a6d9265ec0182fd", "generate_results": ["public static boolean toBoolean(String value,boolean dEfault){\n    if(value==null)return dEfault;\n    String trimmed=value.trim().toLowerCase();\n    return \"true\".equals(trimmed)?\"true\":\"false\".equals(trimmed)?false:dEfault;\n}"]}
{"_id": "6367676a1a6d9265ec0181cd", "generate_results": ["public static String trimLeadingWhitespace(String str){\n    if(str==null||str.length()==0){\n        return str;\n    }\n    int start=0;\n    while(start<str.length()&&Character.isWhitespace(str.charAt(start))){\n        start++;\n    }\n    return str.substring(start);\n}"]}
{"_id": "636766fe1a6d9265ec01782a", "generate_results": ["final String readUtf(final int constantPoolEntryIndex,final char[] charBuffer){\n    if(constantPoolEntryIndex < 1 || constantPoolEntryIndex >= getItemCount()){\n        throw new IllegalArgumentException(\"Invalid constant pool entry index: \" + constantPoolEntryIndex);\n    }\n    final int utfOffset = cpInfoOffsets[constantPoolEntryIndex];\n    return readUtf(utfOffset,charBuffer);\n}"]}
{"_id": "636766851a6d9265ec01751b", "generate_results": ["private static char decodeHexNibble(final char c){\n    if(c >= '0' && c <= '9'){\n        return (char)(c - '0');\n    }else if(c >= 'a' && c <= 'f'){\n        return (char)(c - 'a' + 10);\n    }else if(c >= 'A' && c <= 'F'){\n        return (char)(c - 'A' + 10);\n    }\n    throw new IllegalArgumentException(\"Invalid hex digit: \" + c);\n}"]}
{"_id": "636766f21a6d9265ec01767d", "generate_results": ["public static String toString(Object object){\n    if(object instanceof String){\n        return (String) object;\n    }\n    return (object != null) ? object.toString() : null;\n}"]}
{"_id": "636767581a6d9265ec017fc4", "generate_results": ["public static long factorial(int n){\n    if(n == 0 || n == 1)\n        return 1;\n    else\n        return n * factorial(n - 1);\n}"]}
{"_id": "636767511a6d9265ec017eb6", "generate_results": ["private OuterFaceCirculator selectOnOuterFace(Predicate<Node> predicate,Node start,Node stop,int dir){\n    if(start==null||stop==null)\n        return null;\n    Node current=start;\n    while(current!=stop){\n        if(predicate.test(current))\n            return new OuterFaceCirculator(current,start);\n        current=current.nextOnOuterFace(dir);\n    }\n    return null;\n}"]}
{"_id": "636767841a6d9265ec0183e8", "generate_results": ["public void add(LoggingEvent event){\n    if (numElems == maxSize) {\n        resize(maxSize * 2);\n    }\n    ea[last] = event;\n    last = (last + 1) % maxSize;\n    numElems++;\n}"]}
{"_id": "636767a41a6d9265ec01857e", "generate_results": ["private static int compareSigned(long a,long b){\n    if(a == b)\n        return 0;\n    return (a < b) ? -1 : ((a == b) ? 0 : 1);\n}"]}
{"_id": "636767691a6d9265ec0181ae", "generate_results": ["public static String[] toStringArray(Enumeration<String> enumeration){\n    if (enumeration == null) {\n        return new String[0];\n    }\n    List<String> list = Collections.list(enumeration);\n    return list.toArray(new String[list.size()]);\n}"]}
{"_id": "636766a91a6d9265ec0175ae", "generate_results": ["public ByteVector putByteArray(final byte[] byteArrayValue,final int byteOffset,final int byteLength){\n    if (byteArrayValue == null) {\n        throw new NullPointerException(\"byteArrayValue\");\n    }\n    if (byteOffset < 0 || byteLength < 0 || byteOffset > byteArrayValue.length - byteLength) {\n        throw new IndexOutOfBoundsException();\n    }\n    enlarge(byteLength);\n    System.arraycopy(byteArrayValue,byteOffset,data,length,length);\n    length += byteLength;\n    return this;\n}"]}
{"_id": "636766f11a6d9265ec01764f", "generate_results": ["public Collection<Object> values(){\n    if (bean == null) {\n        return Collections.emptyList();\n    }\n    return Collections.unmodifiableCollection(values());\n}"]}
{"_id": "636766f81a6d9265ec017758", "generate_results": ["@Override public int hashCode(){\n    if(this == null){\n        return 0;\n    }\n    return this.sort * 31 + this.valueBuffer.hashCode() * 17 + this.valueBegin * 5 + this.valueEnd;\n}"]}
{"_id": "6367676c1a6d9265ec01820b", "generate_results": ["public static String deleteAny(String inString,String charsToDelete){\n    if (inString == null || charsToDelete == null) {\n        return inString;\n    }\n    StringBuilder sb = new StringBuilder();\n    for (int i = 0; i < inString.length(); i++) {\n        char c = inString.charAt(i);\n        if (charsToDelete.indexOf(c) == -1) {\n            sb.append(c);\n        }\n    }\n    return sb.toString();\n}"]}
{"_id": "636766861a6d9265ec01755a", "generate_results": ["public final MatchResult match(CharSequence uri){\n    if (r != null && r.matches()) {\n        return r;\n    }\n    return null;\n}"]}
{"_id": "636766f91a6d9265ec01777d", "generate_results": ["public static byte convertHexDigit(byte b){\n    if(b >= '0' && b <= '9'){\n        return (byte)(b - '0');\n    }else if(b >= 'a' && b <= 'f'){\n        return (byte)(10 + b - 'a');\n    }else if(b >= 'A' && b <= 'F'){\n        return (byte)(10 + b - 'A');\n    }\n    throw new IllegalArgumentException(\"Invalid hex digit: \" + b);\n}"]}
{"_id": "636766801a6d9265ec017477", "generate_results": ["private void addReverse(final InputStream[] files){\n    if(stack == null) {\n        stack = new LinkedList<>();\n    }\n    for(int i = files.length - 1; i >= 0; --i){\n        stack.push(files[i]);\n    }\n}"]}
{"_id": "636767de1a6d9265ec01871e", "generate_results": ["private void check(String modelName) throws IllegalStateException {\n    if (!containsModel(modelName)) {\n        throw new IllegalStateException(\"Model not found: \" + modelName);\n    }\n    Model model = getModel(modelName);\n    if (model == null) {\n        throw new IllegalStateException(\"Model not found: \" + modelName);\n    }\n    for (ModelColumn column : model.getKeys()) {\n        if (column.getValue() == null) {\n            throw new IllegalStateException(\"Key value is null for model: \" + modelName + \", column: \" + column.getName());\n        }\n    }\n}"]}
{"_id": "636766f81a6d9265ec01774b", "generate_results": ["public byte readByte() throws IOException {\n    if (head == tail) {\n        fillBuffer();\n        if (head == tail)\n            return -1; // EOF\n    }\n    return buffer[head++];\n}"]}
{"_id": "636766851a6d9265ec017515", "generate_results": ["@Override public Action inspect(AtmosphereResource r){\n    if (r.getTransport() == UNDEFINED) {\n        return Action.BLOCK;\n    }\n    return Action.CONTINUE;\n}"]}
{"_id": "636767611a6d9265ec018106", "generate_results": ["public double vertexWeight(Set<V> v){\n    if(workingGraph == null || v == null) {\n        throw new IllegalArgumentException(\"Input parameters cannot be null\");\n    }\n    double total = 0;\n    for(DefaultWeightedEdge e : workingGraph.incomingEdgesOf(v)){\n        total += workingGraph.getEdgeWeight(e);\n    }\n    return total;\n}"]}
{"_id": "636767841a6d9265ec0183f2", "generate_results": ["public int compare(Object aObj1,Object aObj2){\n    if(aObj1 == null || aObj2 == null){\n        throw new IllegalArgumentException(\"Objects cannot be null\");\n    }\n    EventDetails event1 = (EventDetails)aObj1;\n    EventDetails event2 = (EventDetails)aObj2;\n    return event1.getTimeStamp().compareTo(event2.getTimeStamp());\n}"]}
{"_id": "636767861a6d9265ec01844c", "generate_results": ["public void removeAppender(String name){\n    if(name == null){\n        return;\n    }\n    Enumeration enumeration = getAllAppenders();\n    while(enumeration.hasMoreElements()){\n        Appender appender = (Appender) enumeration.nextElement();\n        if(appender.getName().equals(name)){\n            removeAppender(appender);\n        }\n    }\n}"]}
{"_id": "636767781a6d9265ec018242", "generate_results": ["public int appendLoopOnAppenders(LoggingEvent event){\n    if(appenderList == null || appenderList.isEmpty()){\n        return -1;\n    }\n    Enumeration enumeration = getAllAppenders();\n    while (enumeration.hasMoreElements()) {\n        Appender appender = (Appender) enumeration.nextElement();\n        appender.doAppend(event);\n    }\n    return 0;\n}"]}
{"_id": "6367670c1a6d9265ec017a2a", "generate_results": ["public static int[] toPrimitive(final Integer[] array){\n    if (array == null) {\n        return null;\n    } else if (array.length == 0) {\n        return EMPTY_INT_ARRAY;\n    }\n    final int[] result = new int[array.length];\n    for (int i = 0; i < array.length; i++) {\n        result[i] = array[i].intValue();\n    }\n    return result;\n}"]}
{"_id": "636767041a6d9265ec017911", "generate_results": ["static void register(Object value){\n    if(value != null){\n        REGISTRY.set(value);\n    }\n}"]}
{"_id": "636767511a6d9265ec017eb0", "generate_results": ["public int nonZeros(int row){\n    if(row<0 || row>=this.rows()){\n        throw new IndexOutOfBoundsException(\"Row index out of bounds\");\n    }\n    return this.rowOffsets[row+1]-this.rowOffsets[row];\n}"]}
{"_id": "6367676c1a6d9265ec018223", "generate_results": ["public static boolean containsInstance(Collection collection,Object element){\n    if(collection==null||element==null){\n        return false;\n    }\n    for(Object obj:collection){\n        if(obj!=null&&obj.equals(element)){\n            return true;\n        }\n    }\n    return false;\n}"]}
{"_id": "636766fa1a6d9265ec01779d", "generate_results": ["public static boolean isAsciiControl(final char ch){\n    if(ch < 0 || ch > 255) {\n        throw new IllegalArgumentException(\"Invalid ASCII character: \" + ch);\n    }\n    return (ch >= '\\0' && ch <= '\\x1F') || ch == '\\x7F';\n}"]}
{"_id": "6367670b1a6d9265ec0179f2", "generate_results": ["@Override public boolean containsKey(final Object key){\n    if (fast) {\n        final Entry e = table[(int)(key.hashCode() & mask)];\n        while (e != null) {\n            if (e.key == key)\n                return true;\n            e = e.next;\n        }\n    } else {\n        for (final Entry e : table)\n            for (; e != null; e = e.next)\n                if (e.key.equals(key))\n                    return true;\n    }\n    return get(key) != null;\n}"]}
{"_id": "636766fa1a6d9265ec017796", "generate_results": ["public static Boolean[] toObject(final boolean[] array){\n    if (array == null) {\n        return null;\n    } else if (array.length == 0) {\n        return EMPTY_BOOLEAN_OBJECT_ARRAY;\n    }\n    final Boolean[] result = new Boolean[array.length];\n    for (int i = 0; i < array.length; i++) {\n        result[i] = array[i] ? Boolean.TRUE : Boolean.FALSE;\n    }\n    return result;\n}"]}
{"_id": "636767aa1a6d9265ec01864a", "generate_results": ["public byte[] toByteArray(){\n    if(this.isEmpty()){\n        return EMPTY_BYTE_ARRAY;\n    }\n    return this.bytes.clone();\n}"]}
{"_id": "636767561a6d9265ec017f7c", "generate_results": ["protected GraphPath<V,E> edgeSetToTour(Set<E> tour,Graph<V,E> graph){\n    if(tour.isEmpty()){\n        throw new IllegalArgumentException(\"Tour cannot be empty\");\n    }\n    List<V> vertexList = new ArrayList<>();\n    for(E e : tour){\n        V v1 = graph.getEdgeSource(e);\n        V v2 = graph.getEdgeTarget(e);\n        if(!vertexList.contains(v1)){\n            vertexList.add(v1);\n        }\n        if(!vertexList.contains(v2)){\n            vertexList.add(v2);\n        }\n    }\n    return new Walk<V,E>(graph,new ArrayList<>(tour),vertexList);\n}"]}
{"_id": "6367670a1a6d9265ec0179f1", "generate_results": ["public static Short[] toObject(final short[] array){\n    if (array == null) {\n        return null;\n    } else if (array.length == 0) {\n        return EMPTY_SHORT_OBJECT_ARRAY;\n    }\n    final Short[] result = new Short[array.length];\n    for (int i = 0; i < array.length; i++) {\n        result[i] = array[i];\n    }\n    return result;\n}"]}
{"_id": "636766fe1a6d9265ec017823", "generate_results": ["int addConstantNameAndType(final String name,final String descriptor){\n    if(name==null||descriptor==null){\n        throw new IllegalArgumentException(\"name and descriptor must not be null\");\n    }\n    final int hash=hash(NAME_AND_TYPE_TAG,name,descriptor);\n    Entry e=get(hash);\n    while(e!=null){\n        if(e.tag==NAME_AND_TYPE_TAG&&e.name.equals(name)&&e.value.equals(descriptor)){\n            return e.index;\n        }\n        e=e.next;\n    }\n    e=new Entry(getNextIndex(),NAME_AND_TYPE_TAG,name,descriptor,0L,hash);\n    put(e);\n    return e.index;\n}"]}
{"_id": "636767461a6d9265ec017d17", "generate_results": ["private String unescapeId(String input){\n    if (input == null) {\n        return null;\n    }\n    return unescapeHtmlString(input);\n}"]}
{"_id": "6367676c1a6d9265ec018204", "generate_results": ["public static String[] concatenateStringArrays(String[] array1,String[] array2){\n    if(array1 == null || array1.length == 0){\n        return array2;\n    }\n    if(array2 == null || array2.length == 0){\n        return array1;\n    }\n    String[] result = new String[array1.length + array2.length];\n    System.arraycopy(array1,0,result,0,array1.length);\n    System.arraycopy(array2,0,result,array1.length,array2.length);\n    return result;\n}"]}
{"_id": "636767641a6d9265ec018190", "generate_results": ["private void reload(List<Set<Integer>> bucketsByLabel,List<Integer> labels,int minLabel){\n    if(bucketsByLabel.size() <= minLabel) return;\n    for(Integer vertex : bucketsByLabel.get(minLabel)){\n        putToNextBucket(vertex,0,bucketsByLabel,labels);\n    }\n    bucketsByLabel.get(minLabel).clear();\n}"]}
{"_id": "6367676a1a6d9265ec0181d4", "generate_results": ["public static String[] addStringToArray(String[] array,String str){\n    if(array==null){\n        return new String[]{str};\n    }\n    int length=array.length;\n    String[] newArray=new String[length+1];\n    System.arraycopy(array,0,newArray,0,length);\n    newArray[length]=str;\n    return newArray;\n}"]}
{"_id": "6367676b1a6d9265ec0181dd", "generate_results": ["public static int countOccurrencesOf(String str,String sub){\n    if(str == null || sub == null || str.length() < sub.length()){\n        return 0;\n    }\n    int count = 0;\n    int pos = 0;\n    while((pos = str.indexOf(sub,pos)) != -1){\n        count++;\n        pos += sub.length();\n    }\n    return count;\n}"]}
{"_id": "636766811a6d9265ec017499", "generate_results": ["private boolean checkDuplicate(final List<AtmosphereInterceptor> interceptorList,Class<? extends AtmosphereInterceptor> c){\n    if (interceptorList == null || interceptorList.isEmpty()) {\n        return false;\n    }\n    for (final AtmosphereInterceptor interceptor : interceptorList) {\n        if (c.isAssignableFrom(interceptor.getClass())) {\n            return true;\n        }\n    }\n    return false;\n}"]}
{"_id": "636766fe1a6d9265ec017821", "generate_results": ["protected void appendDetail(StringBuffer buffer,String fieldName,byte[] array){\n    if (array == null) {\n        appendNullText(buffer,fieldName);\n    } else {\n        appendFieldStart(buffer,fieldName);\n        append(arrayStart);\n        int len = array.length;\n        for (int i = 0; i < len; ++i) {\n            if (i > 0) {\n                append(arraySeparator);\n            }\n            append(array[i]);\n        }\n        append(arrayEnd);\n        appendFieldEnd(buffer,fieldName);\n    }\n}"]}
{"_id": "636767561a6d9265ec017f63", "generate_results": ["@Override public boolean hasNext(){\n    if (current == null) {\n        advance();\n    }\n    return !bucketList.isEmpty();\n}"]}
{"_id": "636766a81a6d9265ec017586", "generate_results": ["private void pop(final int elements){\n    if(elements > 0){\n        this.outputStackTop -= elements;\n    }\n}"]}
{"_id": "636767e11a6d9265ec018795", "generate_results": ["public boolean isCompatible(DataTable dataset){\n    if(dataset == null || dataset.getHeatMaps() == null || dataset.getHeatMaps().isEmpty()){\n        return false;\n    }\n    HeatMap heatMap = dataset.getHeatMaps().get(0);\n    Bucket[] buckets = heatMap.getBuckets();\n    for(Bucket bucket : buckets){\n        if(bucket.getStart() != this.buckets[0] || bucket.getEnd() != this.buckets[this.buckets.length - 1]){\n            return false;\n        }\n    }\n    return true;\n}"]}
{"_id": "636767791a6d9265ec018263", "generate_results": ["private Class findClass(final String className) throws ClassNotFoundException {\n    if (className == null || className.length() == 0) {\n        throw new IllegalArgumentException(\"Class name cannot be null or empty\");\n    }\n    try {\n        return Thread.currentThread().getContextClassLoader().loadClass(className);\n    } catch (ClassNotFoundException e) {\n        return Class.forName(className);\n    }\n}"]}
{"_id": "636767611a6d9265ec018112", "generate_results": ["@Override protected V provideNextVertex(){\n    if (this.hasNext()) {\n        return this.next();\n    } else {\n        throw new NoSuchElementException(\"No more vertices to visit\");\n    }\n}"]}
{"_id": "636767131a6d9265ec017b23", "generate_results": ["final void addLineNumber(final int lineNumber){\n    if (otherLineNumbers == null) {\n        otherLineNumbers = new int[1];\n        otherLineNumbers[0] = lineNumber;\n    } else {\n        final int length = otherLineNumbers.length;\n        if (length < LINE_NUMBERS_CAPACITY_INCREMENT) {\n            System.arraycopy(otherLineNumbers, 0, otherLineNumbers = new int[length + LINE_NUMBERS_CAPACITY_INCREMENT], 0, length);\n        }\n        otherLineNumbers[length] = lineNumber;\n    }\n}"]}
{"_id": "6367675a1a6d9265ec018010", "generate_results": ["void removeSelf(){\n    if (prev != null) {\n        prev.next = next;\n    }\n    if (next != null) {\n        next.prev = prev;\n    }\n}"]}
{"_id": "636767dd1a6d9265ec0186f3", "generate_results": ["public void overrideName(String oldName,String newName){\n    if(CollectionUtils.isEmpty(indices)){\n        return;\n    }\n    for(int i=0;i<columns.length;i++){\n        if(columns[i].equals(oldName)){\n            columns[i]=newName;\n        }\n    }\n}"]}
{"_id": "636767631a6d9265ec018171", "generate_results": ["private boolean unlink(ListNodeImpl<E> node){\n    if(node==null||node.prev==null||node.next==null){\n        return false;\n    }\n    ListNodeImpl<E> prev=node.prev;\n    ListNodeImpl<E> next=node.next;\n    prev.next=next;\n    next.prev=prev;\n    node.prev=null;\n    node.next=null;\n    size--;\n    return true;\n}"]}
{"_id": "636767de1a6d9265ec018726", "generate_results": ["public List<SequenceRange> buildSequenceRanges(){\n    if (CollectionUtils.isEmpty(profiledSegmentSpans)) {\n        return Collections.emptyList();\n    }\n    List<SequenceRange> sequenceRanges = new ArrayList<>();\n    for (int i = minSequence; i <= maxSequence; i += SEQUENCE_RANGE_BATCH_SIZE) {\n        int max = Math.min(i + SEQUENCE_RANGE_BATCH_SIZE - 1, maxSequence);\n        sequenceRanges.add(new SequenceRange(i, max));\n    }\n    return sequenceRanges;\n}"]}
{"_id": "6367667c1a6d9265ec0173f7", "generate_results": ["public boolean hasBytes(){\n    if(dataBytes == null){\n        return false;\n    }else{\n        return true;\n    }\n}"]}
{"_id": "6367676c1a6d9265ec018220", "generate_results": ["public static String stripFilenameExtension(String path){\n    if (path == null) {\n        return null;\n    }\n    int extIndex = path.lastIndexOf('.');\n    if (extIndex == -1) {\n        return path;\n    }\n    return path.substring(0, extIndex);\n}"]}
{"_id": "636766fe1a6d9265ec017838", "generate_results": ["public static char[] toPrimitive(final Character[] array){\n    if(array == null){\n        return null;\n    }\n    if(array.length == 0){\n        return ArrayUtils.EMPTY_CHAR_ARRAY;\n    }\n    final char[] result = new char[array.length];\n    for(int i = 0; i < array.length; i++){\n        result[i] = array[i].charValue();\n    }\n    return result;\n}"]}
{"_id": "636766fa1a6d9265ec01779c", "generate_results": ["private String parseToken(final char[] terminators){\n    if (chars == null || pos >= len){\n        throw new IllegalArgumentException(\"Unexpected end of string\");\n    }\n    int start = pos;\n    while (pos < len && !isOneOf(chars[pos],terminators)){\n        pos++;\n    }\n    if (start == pos){\n        throw new IllegalArgumentException(\"Unexpected end of string\");\n    }\n    return new String(chars,start,pos - start);\n}"]}
{"_id": "636767691a6d9265ec0181a7", "generate_results": ["public static String trimLeadingCharacter(String str,char leadingCharacter){\n    if(str==null||str.length()==0){\n        return str;\n    }\n    int i=0;\n    while(i<str.length()&&str.charAt(i)==leadingCharacter){\n        i++;\n    }\n    return str.substring(i);\n}"]}
{"_id": "636767041a6d9265ec01790f", "generate_results": ["public static Integer[] toObject(final int[] array){\n    if (array == null) {\n        return null;\n    }\n    final Integer[] result = new Integer[array.length];\n    for (int i = 0; i < array.length; i++) {\n        result[i] = array[i];\n    }\n    return result;\n}"]}
{"_id": "636766fa1a6d9265ec0177a4", "generate_results": ["public static Double[] toObject(final double[] array){\n    if (array == null) {\n        return null;\n    }\n    final Double[] result = new Double[array.length];\n    for (int i = 0; i < array.length; i++) {\n        result[i] = array[i];\n    }\n    return result;\n}"]}
{"_id": "636767461a6d9265ec017d0e", "generate_results": ["private Pair<List<Integer>,Long> computeSuffixSum(List<Integer> bounds){\n    if(bounds.isEmpty()){\n        return new Pair<>(new ArrayList<>(),0L);\n    }\n    List<Integer> suffixSum = new ArrayList<>(bounds.size());\n    long totalSum = 0L;\n    for(int i=bounds.size()-1;i>=0;i--){\n        totalSum += bounds.get(i);\n        suffixSum.add(0,totalSum);\n    }\n    return new Pair<>(suffixSum,totalSum);\n}"]}
{"_id": "636767491a6d9265ec017d90", "generate_results": ["public static final <V>void reverse(V[] arr,int from,int to){\n    if(from<0||to>=arr.length||from>to) throw new IllegalArgumentException(\"Invalid range\");\n    while(from<to){\n        swap(arr,from++,to--);\n    }\n}"]}
{"_id": "6367674a1a6d9265ec017da9", "generate_results": ["private void moveAllListNodes(DoublyLinkedList<E> list){\n    if(list == null || list.isEmpty()){\n        return;\n    }\n    ListNodeImpl<E> current = list.head;\n    while(current != null){\n        ListNodeImpl<E> next = current.next;\n        unlink(current); // Unlink from the original list\n        addListNode(current); // Add to the new list\n        current = next; // Move to the next node in the original list\n    }\n}"]}
{"_id": "636767151a6d9265ec017b6b", "generate_results": ["private static boolean startsWith(final String str,final String prefix,final boolean ignoreCase){\n    if(str==null||prefix==null){\n        return str==prefix;\n    }\n    if(ignoreCase){\n        return str.regionMatches(true,0,prefix,0,prefix.length());\n    }else{\n        return str.startsWith(prefix);\n    }\n}"]}
{"_id": "636766fe1a6d9265ec01781c", "generate_results": ["public static Character toCharacterObject(final char ch){\n    if (ch == '\\0') {\n        return null;\n    }\n    return new Character(ch);\n}"]}
{"_id": "636766fb1a6d9265ec0177c1", "generate_results": ["public static boolean isAsciiAlphaUpper(final char ch){\n    if(ch < 0 || ch > 127) {\n        throw new IllegalArgumentException(\"Invalid ASCII character: \" + ch);\n    }\n    return (ch >= 'A' && ch <= 'Z');\n}"]}
{"_id": "636767781a6d9265ec018250", "generate_results": ["public int decide(LoggingEvent event){\n    if(STRING_TO_MATCH_OPTION!=null){\n        stringToMatch=OptionConverter.convertSpecialChars(STRING_TO_MATCH_OPTION);\n    }\n    String message = event.getMessage().toString();\n    if (stringToMatch != null && message.contains(stringToMatch)) {\n        return acceptOnMatch ? Filter.ACCEPT : Filter.DENY;\n    } else {\n        return acceptOnMatch ? Filter.DENY : Filter.ACCEPT;\n    }\n}"]}
{"_id": "636766861a6d9265ec017553", "generate_results": ["public final boolean isTemplateVariablePresent(String name){\n    if (name == null) {\n        throw new NullPointerException(\"Name cannot be null\");\n    }\n    return getTemplateVariables().contains(name);\n}"]}
{"_id": "636767071a6d9265ec017962", "generate_results": ["public void putAllWriteable(BeanMap map){\n    if (map == null) {\n        return;\n    }\n    for (String key : map.keySet()) {\n        Method readMethod = map.getReadMethod(key);\n        Method writeMethod = map.getWriteMethod(key);\n        if (readMethod != null && writeMethod != null) {\n            this.put(key, map.get(key));\n        }\n    }\n}"]}
{"_id": "6367670a1a6d9265ec0179d9", "generate_results": ["public static int length(final String str){\n    if(str == null){\n        return 0;\n    }\n    return str == null ? 0 : str.length();\n}"]}
{"_id": "636767ab1a6d9265ec018676", "generate_results": ["private static boolean isHex(final char c){\n    if(c < '0' || c > 'f'){\n        return false;\n    }\n    return (c >= '0' && c <= '9') || (c >= 'a' && c <= 'f') || (c >= 'A' && c <= 'F');\n}"]}
{"_id": "636766f81a6d9265ec017748", "generate_results": ["public static String base64Decode(final String s){\n    if (s == null || s.isEmpty()) {\n        return \"\";\n    }\n    try {\n        byte[] bytes = Base64.getDecoder().decode(s);\n        return new String(bytes, StandardCharsets.UTF_8);\n    } catch (Exception e) {\n        e.printStackTrace();\n        return null;\n    }\n}"]}
{"_id": "636766f11a6d9265ec017663", "generate_results": ["public static boolean isSameLength(final double[] array1,final double[] array2){\n    if(array1 == null && array2 == null){\n        return true;\n    }\n    if(array1 != null && array2 != null){\n        return array1.length == array2.length;\n    }\n    return false;\n}"]}
{"_id": "6367667d1a6d9265ec0173ff", "generate_results": ["public static Meteor lookup(HttpServletRequest r){\n    if (r.getAttribute(ATMOSPHERE_RESOURCE) instanceof AtmosphereResource) {\n        AtmosphereResource r = (AtmosphereResource) r.getAttribute(ATMOSPHERE_RESOURCE);\n        return new Meteor(r,null,null);\n    }\n    return new Meteor(r,null,null);\n}"]}
{"_id": "636767691a6d9265ec0181a6", "generate_results": ["public static String[] split(String toSplit,String delimiter){\n    if(!StringUtils.hasLength(toSplit) || !StringUtils.hasLength(delimiter)){\n        return null;\n    }\n    int index = toSplit.indexOf(delimiter);\n    if(index == -1){\n        return null;\n    }\n    String beforeDelimiter = toSplit.substring(0,index);\n    String afterDelimiter = toSplit.substring(index + delimiter.length());\n    return new String[]{beforeDelimiter,afterDelimiter};\n}"]}
{"_id": "636767601a6d9265ec0180e2", "generate_results": ["private List<Pair<List<Pair<Integer,Integer>>,E>> computeGlobalSeparatorList(){\n    if(weaklyChordal){\n        lazyComputeWeakChordality();\n    }\n    List<Pair<List<Pair<Integer,Integer>>,E>> globalSeparatorList = new ArrayList<>();\n    for (E edge : graph.edgeSet()) {\n        if (!isCircle(edge)) {\n            List<Pair<Integer,Integer>> separators = findSeparators(graph, edge);\n            Pair<List<Pair<Integer,Integer>>,E> pair = new Pair<>(separators, edge);\n            globalSeparatorList.add(pair);\n        }\n    }\n    return globalSeparatorList;\n}"]}
{"_id": "636766f31a6d9265ec01768f", "generate_results": ["public static char[] clone(final char[] array){\n    if(array == null){\n        return null;\n    }\n    return (char[]) Array.clone(array);\n}"]}
{"_id": "636766831a6d9265ec0174eb", "generate_results": ["private void addReverse(final File[] files){\n    if(stack == null) {\n        throw new NoSuchElementException(\"Stack is empty\");\n    }\n    for(int i = files.length - 1; i >= 0; i--){\n        stack.push(files[i]);\n    }\n}"]}
{"_id": "636767841a6d9265ec0183ff", "generate_results": ["public static void selectRow(int row,JTable table,JScrollPane pane){\n    if(row<0||row>=table.getRowCount()){\n        return;\n    }\n    ListSelectionModel selectionModel=table.getSelectionModel();\n    selectionModel.setSelectionInterval(row,row);\n    int firstVisibleRow=pane.getViewport().getViewPosition().y/table.getRowHeight();\n    int lastVisibleRow=firstVisibleRow+pane.getHeight()/table.getRowHeight()-1;\n    if(row<firstVisibleRow){\n        pane.getVerticalScrollBar().setValue(table.convertRowIndexToView(row)*table.getRowHeight());\n    }else if(row>lastVisibleRow){\n        pane.getVerticalScrollBar().setValue((table.convertRowIndexToView(row)-lastVisibleRow+1)*table.getRowHeight());\n    }\n}"]}
{"_id": "636766a81a6d9265ec017596", "generate_results": ["public ByteVector putInt(final int intValue){\n    // Check if there is enough space to add 4 bytes\n    if (data.length - length < 4) {\n        enlarge(4); // Enlarge the vector if necessary\n    }\n    // Put each byte of the integer into the vector in big-endian order\n    data[length++] = (byte)(intValue >> 24 & 0xFF);\n    data[length++] = (byte)(intValue >> 16 & 0xFF);\n    data[length++] = (byte)(intValue >> 8 & 0xFF);\n    data[length++] = (byte)(intValue & 0xFF);\n    return this; // Return the modified ByteVector object\n}"]}
{"_id": "636766fd1a6d9265ec017814", "generate_results": ["public static boolean arrayequals(byte[] a,byte[] b,int count){\n    if(a==null||b==null){\n        return false;\n    }\n    for(int i=0;i<count;i++){\n        if(a[i]!=b[i]){\n            return false;\n        }\n    }\n    return true;\n}"]}
{"_id": "636767861a6d9265ec018440", "generate_results": ["public void abbreviate(final int nameStart,final StringBuffer buf){\n    if(count<=0){\n        return;\n    }\n    final String name=buf.substring(nameStart);\n    final List<String> parts=new ArrayList<>();\n    for(final String part:name.split(\"\\\\.\")){\n        parts.add(part);\n    }\n    if(count>=parts.size()){\n        buf.delete(nameStart,buf.length());\n        return;\n    }\n    buf.replace(nameStart,nameStart+count*2,\"...\");\n}"]}
{"_id": "6367667d1a6d9265ec01741d", "generate_results": ["public static Type resolveBound(TypeVariable<?> typeVariable){\n    if(typeVariable == null){\n        return Unknown.class;\n    }\n    Type[] bounds = typeVariable.getBounds();\n    if(bounds.length == 0){\n        return Unknown.class;\n    }\n    Type bound = bounds[0];\n    if(bound instanceof Class){\n        return bound;\n    }else if(bound instanceof ParameterizedType){\n        return resolveClass((ParameterizedType)bound,typeVariable.getDeclaringClass());\n    }else if(bound instanceof WildcardType){\n        WildcardType wildcardType = (WildcardType)bound;\n        Type[] lowerBounds = wildcardType.getLowerBounds();\n        if(lowerBounds.length > 0){\n            return resolveBound((TypeVariable<?>)lowerBounds[0]);\n        }\n        Type[] upperBounds = wildcardType.getUpperBounds();\n        if(upperBounds.length > 0){\n            return resolveBound((TypeVariable<?>)upperBounds[0]);\n        }\n    }else if(bound instanceof GenericArrayType){\n        GenericArrayType genericArrayType = (GenericArrayType)bound;\n        Type componentType = genericArrayType.getGenericComponentType();\n        if(componentType instanceof Class){\n            return Array.newInstance((Class<?>)componentType,0).getClass();\n        }else{\n            return Unknown.class;\n        }\n    }else if(bound instanceof TypeVariable){\n        return resolveBound((TypeVariable<?>)bound);\n    }\n    return Unknown.class;\n}"]}
{"_id": "6367675f1a6d9265ec0180cf", "generate_results": ["private static <V,E>boolean isClique(Graph<V,E> graph,Set<V> vertices){\n    if(vertices.isEmpty()){\n        return true;\n    }\n    for(V u:vertices){\n        for(V v:vertices){\n            if(u!=v&&!graph.containsEdge(u,v)){\n                return false;\n            }\n        }\n    }\n    return true;\n}"]}
{"_id": "636767431a6d9265ec017c88", "generate_results": ["private List<Integer> computeLowerBounds(List<K> keys){\n    if(lowerBounds.isEmpty()){\n        throw new IllegalStateException(\"No lower bounds have been added.\");\n    }\n    List<Integer> maxLowerBounds = new ArrayList<>();\n    for (K key : keys) {\n        int maxLowerBound = Integer.MAX_VALUE;\n        for (Function<K, Integer> lowerBound : lowerBounds) {\n            int currentLowerBound = lowerBound.apply(key);\n            if (currentLowerBound < maxLowerBound) {\n                maxLowerBound = currentLowerBound;\n            }\n        }\n        maxLowerBounds.add(maxLowerBound);\n    }\n    return maxLowerBounds;\n}"]}
{"_id": "636766a91a6d9265ec0175c4", "generate_results": ["private void pop(final String descriptor){\n    if(descriptor.length() != 1){\n        throw new IllegalArgumentException(\"Invalid descriptor: \" + descriptor);\n    }\n    char c = descriptor.charAt(0);\n    if(c == 'J' || c == 'D'){\n        pop(2);\n    }else{\n        pop(1);\n    }\n}"]}
{"_id": "636766fb1a6d9265ec0177c3", "generate_results": ["public static boolean isAscii(final char ch){\n    if(ch < 0 || ch > 127) {\n        return false;\n    }\n    return ch >= 0 && ch <= 127;\n}"]}
{"_id": "636767581a6d9265ec017fb4", "generate_results": ["private List<Integer> computeUpperBounds(List<K> keys){\n    if(upperBounds.isEmpty()){\n        throw new IllegalStateException(\"No upper bounds have been added.\");\n    }\n    List<Integer> result = new ArrayList<>();\n    for(K key : keys){\n        int minUpperBound = Integer.MAX_VALUE;\n        for(Function<K, Integer> upperBound : upperBounds){\n            int currentUpperBound = upperBound.apply(key);\n            if(currentUpperBound < minUpperBound){\n                minUpperBound = currentUpperBound;\n            }\n        }\n        result.add(minUpperBound);\n    }\n    return result;\n}"]}
{"_id": "636766801a6d9265ec017487", "generate_results": ["public static String encodeTemplateNames(String s){\n    if(s==null)return null;\n    return s.replace(\"{\",\"%7B\").replace(\"}\",\"%7D\");\n}"]}
{"_id": "636767531a6d9265ec017ef1", "generate_results": ["public static boolean equals(Point2D p1,Point2D p2){\n    if (p1 == null || p2 == null) {\n        return false;\n    }\n    return TOLERANCE_DOUBLE_COMPARATOR.compare(p1.getX(),p2.getX()) == 0 && TOLERANCE_DOUBLE_COMPARATOR.compare(p1.getY(),p2.getY()) == 0;\n}"]}
{"_id": "6367667c1a6d9265ec0173fb", "generate_results": ["@Override public AtmosphereResource addEventListener(AtmosphereResourceEventListener e){\n    if(e == null) throw new IllegalArgumentException(\"Listener cannot be null\");\n    listeners.add(e);\n    return this;\n}"]}
{"_id": "636767691a6d9265ec0181ac", "generate_results": ["public static String applyRelativePath(String path,String relativePath){\n    if(path==null){\n        throw new IllegalArgumentException(\"Path must not be null\");\n    }\n    int separatorIndex=path.lastIndexOf(FOLDER_SEPARATOR);\n    if(separatorIndex!=-1){\n        String newPath=path.substring(0,separatorIndex)+FOLDER_SEPARATOR+relativePath;\n        return cleanPath(newPath);\n    }else{\n        return relativePath;\n    }\n}"]}
{"_id": "636767021a6d9265ec0178bc", "generate_results": ["public static int indexOf(String str,String searchStr){\n    if (str == null || searchStr == null) {\n        return -1;\n    }\n    return str.indexOf(searchStr);\n}"]}
{"_id": "636766fc1a6d9265ec0177ef", "generate_results": ["static String[] toNoNullStringArray(Object[] array){\n    if(array == null || array.length == 0){\n        throw new IllegalArgumentException(\"array cannot be null or empty\");\n    }\n    ArrayList<String> list = new ArrayList<>();\n    for (Object obj : array) {\n        if(obj != null){\n            list.add(obj.toString());\n        }\n    }\n    return list.toArray(new String[0]);\n}"]}
{"_id": "636767061a6d9265ec01794a", "generate_results": ["public static int indexOfExtension(String filename){\n    if(filename == null){\n        return -1;\n    }\n    int extensionPos = filename.lastIndexOf(EXTENSION_SEPARATOR);\n    int dirPos = indexOfLastSeparator(filename);\n    return Math.max(extensionPos,dirPos);\n}"]}
{"_id": "636767dd1a6d9265ec0186de", "generate_results": ["public boolean isExpired(long timestamp,long expiredThreshold){\n    if(lastUpdateTimestamp == 0){\n        return false;\n    }\n    return (timestamp - lastUpdateTimestamp) > expiredThreshold;\n}"]}
{"_id": "6367675d1a6d9265ec018082", "generate_results": ["Edge edgeToNext(){\n    if (this.prev == null) {\n        throw new IllegalStateException(\"Cannot call edgeToNext() on the first element of the list.\");\n    }\n    return this.edgeToNext;\n}"]}
{"_id": "6367676b1a6d9265ec0181e9", "generate_results": ["public static boolean substringMatch(CharSequence str,int index,CharSequence substring){\n    if (index < 0 || index > str.length() - substring.length()) {\n        return false;\n    }\n    for (int i = 0; i < substring.length(); i++) {\n        if (str.charAt(index + i) != substring.charAt(i)) {\n            return false;\n        }\n    }\n    return true;\n}"]}
{"_id": "636767781a6d9265ec01823e", "generate_results": ["protected void append(LoggingEvent event){\n    if(!this.closed && this.layout != null){\n        String formattedMessage = this.layout.format(event);\n        if(this.layout.ignoresThrowable()){\n            formattedMessage += \"\\n\" + LogLog.stackTraceToString(event.getThrowableInformation().getThrowable());\n        }\n        send(formattedMessage);\n    }\n    String formattedMessage = this.layout.format(event);\n    if(this.layout.ignoresThrowable()){\n        formattedMessage += \"\\n\" + LogLog.stackTraceToString(event.getThrowableInformation().getThrowable());\n    }\n    send(formattedMessage);\n}"]}
{"_id": "6367670b1a6d9265ec017a05", "generate_results": ["public static String toString(final char ch){\n    if (ch == 0) {\n        return null;\n    }\n    return new String(new char[]{ch});\n}"]}
{"_id": "636767a31a6d9265ec01854f", "generate_results": ["private void checkIfPackedField() throws IOException {\n    if (!isCurrentFieldPacked()) { // Check if the current field is not packed\n        throw new InvalidProtocolBufferException(\"Expected packed field but got non-packed\");\n    }\n    int tag = readTag(); // Read the next tag\n    if (tag == 0) { // If the tag is zero, it means we've reached the end of the message\n        return;\n    }\n    int fieldNumber = WireFormat.getTagFieldNumber(tag); // Extract the field number from the tag\n    int wireType = WireFormat.getTagWireType(tag); // Extract the wire type from the tag\n\n    if (wireType != WIRETYPE_LENGTH_DELIMITED) { // Check if the wire type is not length-delimited\n        throw new InvalidProtocolBufferException(\"Invalid wire type for packed field: \" + wireType);\n    }\n\n    int limit = pushLimit(readRawVarint32()); // Push a limit on the number of bytes to read for this field\n    try {\n        while (true) {\n            int nestedTag = readTag(); // Read the next nested tag\n            if (nestedTag == 0 || WireFormat.getTagFieldNumber(nestedTag) != fieldNumber) { // If the nested tag is zero or the field number doesn't match, break out of the loop\n                break;\n            }\n            mergeObjectEncodedAsGroup(mergeObject(newInstance(), schema), schema); // Merge the object encoded as a group\n        }\n    } finally {\n        popLimit(limit); // Pop the limit\n    }\n}"]}
{"_id": "636767a81a6d9265ec0185fc", "generate_results": ["public int readTag() throws IOException {\n    if (buffer.remaining() == 0) {\n        return 0;\n    }\n    int b = buffer.get() & 0xFF;\n    if ((b & TAG_TYPE_MASK) == WIRETYPE_VARINT) {\n        int result = b >>> TAG_TYPE_BITS;\n        while ((b & 0x80) != 0) {\n            b = buffer.get() & 0xFF;\n            result <<= 7;\n            result |= b & 0x7F;\n        }\n        return result;\n    } else {\n        return makeTag(b >>> TAG_TYPE_BITS, b & TAG_TYPE_MASK);\n    }\n}"]}
{"_id": "636766a81a6d9265ec017595", "generate_results": ["final ByteVector put11(final int byteValue1,final int byteValue2){\n    // Check if there is enough space in the current buffer\n    if (length + 2 > data.length) {\n        enlarge(2); // Enlarge the buffer by at least 2 bytes\n    }\n    // Put the first byte into the buffer\n    data[length++] = (byte) byteValue1;\n    // Put the second byte into the buffer\n    data[length++] = (byte) byteValue2;\n    return this; // Return the modified ByteVector object\n}"]}
{"_id": "636766ae1a6d9265ec0175d8", "generate_results": ["private String buildContentRange(){\n    if(this.isPaginationEnabled()){\n        int offset = this.getOffset();\n        int limit = this.getLimit();\n        int count = this.getCount();\n        if(limit == 0){\n            return \"bytes \" + offset + \"-\" + (count - 1) + \"/\" + count;\n        }else{\n            return \"bytes \" + offset + \"-\" + (offset + limit - 1) + \"/\" + count;\n        }\n    }else{\n        return null;\n    }\n    int offset = this.getOffset();\n    int limit = this.getLimit();\n    int count = this.getCount();\n    if(limit == 0){\n        return \"bytes \" + offset + \"-\" + (count - 1) + \"/\" + count;\n    }else{\n        return \"bytes \" + offset + \"-\" + (offset + limit - 1) + \"/\" + count;\n    }\n}"]}
{"_id": "636767e11a6d9265ec018790", "generate_results": ["public static List<ThreadSnapshot> parseFromFileWithTimeRange(File file,List<ProfileAnalyzeTimeRange> timeRanges) throws IOException {\n    if (file == null || !file.exists()) {\n        throw new IllegalArgumentException(\"File does not exist\");\n    }\n    List<ThreadSnapshot> threadSnapshots = new ArrayList<>();\n    try (FileInputStream fis = new FileInputStream(file)) {\n        // Read the file content and process it\n        byte[] buffer = new byte[1024];\n        int bytesRead;\n        while ((bytesRead = fis.read(buffer)) != -1) {\n            // Process each chunk of data\n            for (ProfileAnalyzeTimeRange timeRange : timeRanges) {\n                if (timeRange.isWithinRange(bytesRead)) {\n                    ThreadSnapshot snapshot = new ThreadSnapshot();\n                    // Populate the snapshot with data\n                    threadSnapshots.add(snapshot);\n                }\n            }\n        }\n    }\n    return threadSnapshots;\n}"]}
